% FRS Ada Raw Interface Build Instructions
% Graham Stark
% October 23, 2009


say, for the 0809 data

download the TAB-delimited version from the archive

Unpack the data
----------------
1. go to `/mnt/data/frs`
2. mkdir (e.g.) 0809
3. unzip big tab file
4. mkdir `0809/tab` `0809/bin`
5. goto to `0809/UKDA-XXXX-tab/mrdoc/excel/
6. save file frs_[YEAR]_hierarchical_documentation.xls as csv
7. copy files 0809/UKDA-XXXX-tab/* to tab/ (or make a symlink) 

Make or add to the database, and build Ada inserts
-------------------------------------------------
1. cd `tax_benefit_model_components/src/uk/raw/frs/scripts`
2. make the schema (if it doesn't exist)
        start mysql
        source frs_schema.sql
   (note this may already exist).
3. edit `make_frs_database.rb`
   add fields for your dataset at top; `filename` points to the csv file
   created earlier, year is a string like '0809':   
        filename = "/mnt/data/frs/[YEAR]/[XXXX]-tab/mrdoc/excel/frs_[PERIOD]_hierarchical_documentation.csv"
        yearStr = '[YEAR]'
        parseOneYear( connection, filename, yearStr, '/mnt/data/frs/0708/tab/' )
   there should be 1 entry for each dataset in /mnt/data/frs/
4. run `make_frs_database.rb`
5. run `create_ada.rb`. 
   Created files should be: 
        load_statements
        print_statements
        record_declarations
        convert_statements

Edit the Ada Files
-------------------
Insert the autogenerated code into the adad code in `tax_benefit_model_components/src/uk/raw/frs/`
as follows:

1. `record_declarations` => `raw_frs.ads`
2. `print_statements` => `raw_frs.adb`
3. `load_statements` => `raw_conversions_library.adb` proc `load_all`
4. `convert_statements` `raw_conversions_library.adb` (main section)

There are markers for where to insert. The non-autogenerated code will need ammending
if there are new record types introduced.

Build and run the conversion to binary
--------------------------------------
To build, run gnatmake -t tb_components.gpr from the top level.

Note that the binary files for each year have all the same record sizes and this 
changes as each year is added, so you need to rebuild all years even when adding
just one, and rebuild all client programs.


Note: this is markdown text made for pandoc. You can build this file in docbook with 

`pandoc -s -S -w docbook build_instructions -o build_instructions.xml`

Then into Virtual Worlds format pdf with: `fopify build_instructions`
