--
--  $Author: graham_s $
--  $Date: 2008-08-19 14:01:10 +0100 (Tue, 19 Aug 2008) $
--  $Revision: 5673 $
--
with Format_Utils;
with Ada.Strings.Unbounded;
with Text_Utils;

package body Raw_FRS is

   package UK_Format_Utils is new Format_Utils( Float_Type=>Rate, Counter_Type=>Counter_Type );
   use Text_Utils;
   use UK_Format_Utils;
   use Ada.Strings.Unbounded;
   use Ada.Calendar;
   
   INCLUDE_MISSING : constant BOOLEAN := False;
   
   INDENT : constant String := "      ";

   --  ===============   START AUTOGENERATED 
   

   function To_String( a : Account_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Account";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.account /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCOUNT (Account Type) [account] : " & Format(a.account) & LINE_BREAK;
      end if;
      if( (a.accint /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCINT (Interest received) [accint] : " & Format(a.accint) & LINE_BREAK;
      end if;
      if( (a.acctax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCTAX (Whether sav interest before or after tax) [acctax] : " & Format(a.acctax) & LINE_BREAK;
      end if;
      if( (a.gtwtot /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GTWTOT (Total amount held in Saving Gateway Account) [gtwtot] : " & Format(a.gtwtot) & LINE_BREAK;
      end if;
      if( (a.invtax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INVTAX (Whether inv interest before or after tax) [invtax] : " & Format(a.invtax) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.nsamt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NSAMT (Value of National Savings investment) [nsamt] : " & Format(a.nsamt) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Admin_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Admin";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.findhh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FINDHH (Number of households found at address) [findhh] : " & Format(a.findhh) & LINE_BREAK;
      end if;
      if( (a.hhsel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHSEL (Number of households selected for int.) [hhsel] : " & Format(a.hhsel) & LINE_BREAK;
      end if;
      if( (a.hout /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUT (Final Outcome Codes...) [hout] : " & Format(a.hout) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.lngdf01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF01 (Language difficulties: Punjabi (Gurmukhi script)) [lngdf01] : " & Format(a.lngdf01) & LINE_BREAK;
      end if;
      if( (a.lngdf02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF02 (Language difficulties: Punjabi (Urdu script)) [lngdf02] : " & Format(a.lngdf02) & LINE_BREAK;
      end if;
      if( (a.lngdf03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF03 (Language difficulties: Gujarati) [lngdf03] : " & Format(a.lngdf03) & LINE_BREAK;
      end if;
      if( (a.lngdf04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF04 (Language difficulties: Bengali) [lngdf04] : " & Format(a.lngdf04) & LINE_BREAK;
      end if;
      if( (a.lngdf05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF05 (Language difficulties: Urdu) [lngdf05] : " & Format(a.lngdf05) & LINE_BREAK;
      end if;
      if( (a.lngdf06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF06 (Language difficulties: Hindi) [lngdf06] : " & Format(a.lngdf06) & LINE_BREAK;
      end if;
      if( (a.lngdf07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF07 (Language difficulties: Cantonese) [lngdf07] : " & Format(a.lngdf07) & LINE_BREAK;
      end if;
      if( (a.lngdf08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF08 (Language difficulties: Mandarin) [lngdf08] : " & Format(a.lngdf08) & LINE_BREAK;
      end if;
      if( (a.lngdf09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF09 (Language difficulties: Polish) [lngdf09] : " & Format(a.lngdf09) & LINE_BREAK;
      end if;
      if( (a.lngdf10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF10 (Language difficulties: Welsh) [lngdf10] : " & Format(a.lngdf10) & LINE_BREAK;
      end if;
      if( (a.lngdf11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNGDF11 (Language difficulties: Other languages except English/Welsh) [lngdf11] : " & Format(a.lngdf11) & LINE_BREAK;
      end if;
      if( (a.ncr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR1 (Away all survey period) [ncr1] : " & Format(a.ncr1) & LINE_BREAK;
      end if;
      if( (a.ncr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR2 (Working shifts odd hours) [ncr2] : " & Format(a.ncr2) & LINE_BREAK;
      end if;
      if( (a.ncr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR3 (Rarely at address) [ncr3] : " & Format(a.ncr3) & LINE_BREAK;
      end if;
      if( (a.ncr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR4 (Will not answer door) [ncr4] : " & Format(a.ncr4) & LINE_BREAK;
      end if;
      if( (a.ncr5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR5 (Unconfirmed empty address) [ncr5] : " & Format(a.ncr5) & LINE_BREAK;
      end if;
      if( (a.ncr6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR6 (No information gathered) [ncr6] : " & Format(a.ncr6) & LINE_BREAK;
      end if;
      if( (a.ncr7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NCR7 (Other specify...) [ncr7] : " & Format(a.ncr7) & LINE_BREAK;
      end if;
      if( (a.nmtrans /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NMTRANS (Number of adults in HH requiring translator) [nmtrans] : " & Format(a.nmtrans) & LINE_BREAK;
      end if;
      if( (a.noneng /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NONENG (Whether interview in language other than English) [noneng] : " & Format(a.noneng) & LINE_BREAK;
      end if;
      if( (a.refr01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR01 (Does not believe in surveys) [refr01] : " & Format(a.refr01) & LINE_BREAK;
      end if;
      if( (a.refr02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR02 (Anti-government) [refr02] : " & Format(a.refr02) & LINE_BREAK;
      end if;
      if( (a.refr03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR03 (Invasion of privacy) [refr03] : " & Format(a.refr03) & LINE_BREAK;
      end if;
      if( (a.refr04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR04 (Concerns about confidentiality) [refr04] : " & Format(a.refr04) & LINE_BREAK;
      end if;
      if( (a.refr05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR05 (Cannot be bothered) [refr05] : " & Format(a.refr05) & LINE_BREAK;
      end if;
      if( (a.refr06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR06 (Bad experience with previous surveys) [refr06] : " & Format(a.refr06) & LINE_BREAK;
      end if;
      if( (a.refr07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR07 (Disliked survey of income) [refr07] : " & Format(a.refr07) & LINE_BREAK;
      end if;
      if( (a.refr08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR08 (Genuinely too busy) [refr08] : " & Format(a.refr08) & LINE_BREAK;
      end if;
      if( (a.refr09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR09 (Inconvenient time: Temporarily too busy) [refr09] : " & Format(a.refr09) & LINE_BREAK;
      end if;
      if( (a.refr10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR10 (Inconvenient time: Personal problems) [refr10] : " & Format(a.refr10) & LINE_BREAK;
      end if;
      if( (a.refr11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR11 (Refusal to HQ after seeing interviewer) [refr11] : " & Format(a.refr11) & LINE_BREAK;
      end if;
      if( (a.refr12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR12 (Late contact ran out of field time) [refr12] : " & Format(a.refr12) & LINE_BREAK;
      end if;
      if( (a.refr13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR13 (About to go away) [refr13] : " & Format(a.refr13) & LINE_BREAK;
      end if;
      if( (a.refr14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR14 (Inadequate English language problems) [refr14] : " & Format(a.refr14) & LINE_BREAK;
      end if;
      if( (a.refr15 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR15 (Too old) [refr15] : " & Format(a.refr15) & LINE_BREAK;
      end if;
      if( (a.refr16 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR16 (Not capable) [refr16] : " & Format(a.refr16) & LINE_BREAK;
      end if;
      if( (a.refr17 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR17 (Broken appointment(s)) [refr17] : " & Format(a.refr17) & LINE_BREAK;
      end if;
      if( (a.refr18 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REFR18 (Other) [refr18] : " & Format(a.refr18) & LINE_BREAK;
      end if;
      if( (a.tnc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TNC (Total number of calls made) [tnc] : " & Format(a.tnc) & LINE_BREAK;
      end if;
      if( (a.version /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VERSION (Version of program) [version] : " & Format(a.version) & LINE_BREAK;
      end if;
      if( (a.whlang01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG01 (Language used in interview: Punjabi (Gurmukhi script)) [whlang01] : " & Format(a.whlang01) & LINE_BREAK;
      end if;
      if( (a.whlang02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG02 (Language used in interview: Punjabi (Urdu script)) [whlang02] : " & Format(a.whlang02) & LINE_BREAK;
      end if;
      if( (a.whlang03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG03 (Language used in interview: Gujarati) [whlang03] : " & Format(a.whlang03) & LINE_BREAK;
      end if;
      if( (a.whlang04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG04 (Language used in interview: Bengali) [whlang04] : " & Format(a.whlang04) & LINE_BREAK;
      end if;
      if( (a.whlang05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG05 (Language used in interview: Urdu) [whlang05] : " & Format(a.whlang05) & LINE_BREAK;
      end if;
      if( (a.whlang06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG06 (Language used in interview: Hindi) [whlang06] : " & Format(a.whlang06) & LINE_BREAK;
      end if;
      if( (a.whlang07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG07 (Language used in interview: Cantonese) [whlang07] : " & Format(a.whlang07) & LINE_BREAK;
      end if;
      if( (a.whlang08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG08 (Language used in interview: Mandarin) [whlang08] : " & Format(a.whlang08) & LINE_BREAK;
      end if;
      if( (a.whlang09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG09 (Language difficulties: Polish) [whlang09] : " & Format(a.whlang09) & LINE_BREAK;
      end if;
      if( (a.whlang10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG10 (Language difficulties: Welsh) [whlang10] : " & Format(a.whlang10) & LINE_BREAK;
      end if;
      if( (a.whlang11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHLANG11 (Language difficulties: Other languages except English/Welsh) [whlang11] : " & Format(a.whlang11) & LINE_BREAK;
      end if;
      if( (a.whotran1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOTRAN1 (Translation by: Main interviewer (you)) [whotran1] : " & Format(a.whotran1) & LINE_BREAK;
      end if;
      if( (a.whotran2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOTRAN2 (Translation by: Another interviewer accompanying main int.) [whotran2] : " & Format(a.whotran2) & LINE_BREAK;
      end if;
      if( (a.whotran3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOTRAN3 (Translation by: Family member (or similar) living in hhold.) [whotran3] : " & Format(a.whotran3) & LINE_BREAK;
      end if;
      if( (a.whotran4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOTRAN4 (Translation by: Family member or friend living outside hhold) [whotran4] : " & Format(a.whotran4) & LINE_BREAK;
      end if;
      if( (a.whotran5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOTRAN5 (Translation by: other) [whotran5] : " & Format(a.whotran5) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Adult_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Adult";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.abs1no /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABS1NO (Weeks away during this spell of absence) [abs1no] : " & Format(a.abs1no) & LINE_BREAK;
      end if;
      if( (a.abs2no /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABS2NO (Days away during this spell of absence) [abs2no] : " & Format(a.abs2no) & LINE_BREAK;
      end if;
      if( (a.abspar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABSPAR (Receiving any allowances in absence) [abspar] : " & Format(a.abspar) & LINE_BREAK;
      end if;
      if( (a.abspay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABSPAY (Whether in receipt of full/part pay) [abspay] : " & Format(a.abspay) & LINE_BREAK;
      end if;
      if( (a.abswhy /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABSWHY (Reason for your absence) [abswhy] : " & Format(a.abswhy) & LINE_BREAK;
      end if;
      if( (a.abswk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABSWK (Away from work for more than last 3 days) [abswk] : " & Format(a.abswk) & LINE_BREAK;
      end if;
      if( (a.x_access /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCESS (Whether receive money from access fund) [x_access] : " & Format(a.x_access) & LINE_BREAK;
      end if;
      if( (a.accftpt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCFTPT (Meaning of 'full' and 'part' time hours) [accftpt] : " & Format(a.accftpt) & LINE_BREAK;
      end if;
      if( (a.accjb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJB (Whether accommodation goes with job) [accjb] : " & Format(a.accjb) & LINE_BREAK;
      end if;
      if( (a.accountq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCOUNTQ (Whether accounts question answered) [accountq] : " & Format(a.accountq) & LINE_BREAK;
      end if;
      if( (a.accssamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCSSAMT (Amount : Access Fund) [accssamt] : " & Format(a.accssamt) & LINE_BREAK;
      end if;
      if( (a.accsspd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCSSPD (Pcode: Access fund) [accsspd] : " & Format(a.accsspd) & LINE_BREAK;
      end if;
      if( (a.adeduc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEDUC (Type of school/college attending) [adeduc] : " & Format(a.adeduc) & LINE_BREAK;
      end if;
      if( (a.adema /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEMA (Whether Adult EMA earnings) [adema] : " & Format(a.adema) & LINE_BREAK;
      end if;
      if( (a.ademaamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEMAAMT (Amount of Adult EMA earnings) [ademaamt] : " & Format(a.ademaamt) & LINE_BREAK;
      end if;
      if( (a.ademapd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEMAPD (Pcode: Adult EMA earnings) [ademapd] : " & Format(a.ademapd) & LINE_BREAK;
      end if;
      if( (a.age /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGE (Age of adult last birthday) [age] : " & Format(a.age) & LINE_BREAK;
      end if;
      if( (a.alg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALG (Whether Adult Learning Grant earnings) [alg] : " & Format(a.alg) & LINE_BREAK;
      end if;
      if( (a.algamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALGAMT (Amount of Adult Learning Grant earnings) [algamt] : " & Format(a.algamt) & LINE_BREAK;
      end if;
      if( (a.algpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALGPD (Pcode: Adult Learning Grant earnings) [algpd] : " & Format(a.algpd) & LINE_BREAK;
      end if;
      if( (a.aliamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALIAMT (Amount received in maintenance for self) [aliamt] : " & Format(a.aliamt) & LINE_BREAK;
      end if;
      if( (a.alimny /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALIMNY (Whether in receipt of maintenance for self) [alimny] : " & Format(a.alimny) & LINE_BREAK;
      end if;
      if( (a.alipd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALIPD (Pcode: amount received in maintenance for self) [alipd] : " & Format(a.alipd) & LINE_BREAK;
      end if;
      if( (a.alius /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALIUS (Maintenance for self - whether usual amt) [alius] : " & Format(a.alius) & LINE_BREAK;
      end if;
      if( (a.allow1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLOW1 (Regular allowance: Friend/Relative) [allow1] : " & Format(a.allow1) & LINE_BREAK;
      end if;
      if( (a.allow2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLOW2 (Regular allowance: organisation) [allow2] : " & Format(a.allow2) & LINE_BREAK;
      end if;
      if( (a.allow3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLOW3 (Regular allowance: LA/SS (foster child)) [allow3] : " & Format(a.allow3) & LINE_BREAK;
      end if;
      if( (a.allow4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLOW4 (Regular allowance: LA/SS (adoption)) [allow4] : " & Format(a.allow4) & LINE_BREAK;
      end if;
      if( (a.allpay1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPAY1 (Amount of allowance: Friend/Relative) [allpay1] : " & Format(a.allpay1) & LINE_BREAK;
      end if;
      if( (a.allpay2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPAY2 (Amount of allowance: organisation) [allpay2] : " & Format(a.allpay2) & LINE_BREAK;
      end if;
      if( (a.allpay3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPAY3 (Amount of allowance:LA/SS (foster child)) [allpay3] : " & Format(a.allpay3) & LINE_BREAK;
      end if;
      if( (a.allpay4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPAY4 (Amount of allowance:LA/SS (adoption)) [allpay4] : " & Format(a.allpay4) & LINE_BREAK;
      end if;
      if( (a.allpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPD1 (Pcode: allowance from an Friend/Relative) [allpd1] : " & Format(a.allpd1) & LINE_BREAK;
      end if;
      if( (a.allpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPD2 (Pcode: allowance from an organisation) [allpd2] : " & Format(a.allpd2) & LINE_BREAK;
      end if;
      if( (a.allpd3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPD3 (Pcode:allowance from LA/SS(foster child)) [allpd3] : " & Format(a.allpd3) & LINE_BREAK;
      end if;
      if( (a.allpd4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALLPD4 (Pcode: allowance from LA/SS(adoption)) [allpd4] : " & Format(a.allpd4) & LINE_BREAK;
      end if;
      if( (a.aluamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALUAMT (Usual amount received in maintenance for self) [aluamt] : " & Format(a.aluamt) & LINE_BREAK;
      end if;
      if( (a.alupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ALUPD (Pcode: usual amount received in maintenance for self) [alupd] : " & Format(a.alupd) & LINE_BREAK;
      end if;
      if( (a.anyacc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYACC (Whether any accounts) [anyacc] : " & Format(a.anyacc) & LINE_BREAK;
      end if;
      if( (a.anyed /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYED (In receipt of any FT or PT education) [anyed] : " & Format(a.anyed) & LINE_BREAK;
      end if;
      if( (a.anymon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYMON (Any money left in current account) [anymon] : " & Format(a.anymon) & LINE_BREAK;
      end if;
      if( (a.anypen1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN1 (Rcpt of pension from previous employer) [anypen1] : " & Format(a.anypen1) & LINE_BREAK;
      end if;
      if( (a.anypen2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN2 (Receipt of Widow's Employee Pension) [anypen2] : " & Format(a.anypen2) & LINE_BREAK;
      end if;
      if( (a.anypen3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN3 (Receipt of a personal pension) [anypen3] : " & Format(a.anypen3) & LINE_BREAK;
      end if;
      if( (a.anypen4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN4 (Receipt of TU or Friendly Soc. pension) [anypen4] : " & Format(a.anypen4) & LINE_BREAK;
      end if;
      if( (a.anypen5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN5 (Receipt of an annuity) [anypen5] : " & Format(a.anypen5) & LINE_BREAK;
      end if;
      if( (a.anypen6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN6 (Receipt of a trust or covenant) [anypen6] : " & Format(a.anypen6) & LINE_BREAK;
      end if;
      if( (a.anypen7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYPEN7 (Receipt of share of pension on divorce) [anypen7] : " & Format(a.anypen7) & LINE_BREAK;
      end if;
      if( (a.apamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "APAMT (Amount received from absent partner) [apamt] : " & Format(a.apamt) & LINE_BREAK;
      end if;
      if( (a.apdamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "APDAMT (Amount from absent partner paid directly) [apdamt] : " & Format(a.apdamt) & LINE_BREAK;
      end if;
      if( (a.apdir /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "APDIR (Whether abs partner pays HH exps. direct) [apdir] : " & Format(a.apdir) & LINE_BREAK;
      end if;
      if( (a.apdpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "APDPD (Pcode: direct payments of HH expenses) [apdpd] : " & Format(a.apdpd) & LINE_BREAK;
      end if;
      if( (a.appd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "APPD (Pcode: amount received from abs partner) [appd] : " & Format(a.appd) & LINE_BREAK;
      end if;
      if( (a.b2qfut1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B2QFUT1 (Awaiting outcome of claim: DLA (care)) [b2qfut1] : " & Format(a.b2qfut1) & LINE_BREAK;
      end if;
      if( (a.b2qfut2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B2QFUT2 (Awaiting outcome of claim: DLA (mob)) [b2qfut2] : " & Format(a.b2qfut2) & LINE_BREAK;
      end if;
      if( (a.b2qfut3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B2QFUT3 (Awaiting outcome of claim: AA) [b2qfut3] : " & Format(a.b2qfut3) & LINE_BREAK;
      end if;
      if( (a.b3qfut1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT1 (Awaiting outcome of claim: JSA) [b3qfut1] : " & Format(a.b3qfut1) & LINE_BREAK;
      end if;
      if( (a.b3qfut2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT2 (Awaiting outcome of claim: IS/MIG) [b3qfut2] : " & Format(a.b3qfut2) & LINE_BREAK;
      end if;
      if( (a.b3qfut3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT3 (Awaiting outcome of claim: IB) [b3qfut3] : " & Format(a.b3qfut3) & LINE_BREAK;
      end if;
      if( (a.b3qfut4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT4 (Awaiting outcome of claim: MA) [b3qfut4] : " & Format(a.b3qfut4) & LINE_BREAK;
      end if;
      if( (a.b3qfut5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT5 (Awaiting outcome of claim: IIDB) [b3qfut5] : " & Format(a.b3qfut5) & LINE_BREAK;
      end if;
      if( (a.b3qfut6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT6 (Awaiting outcome of claim: Pension Credit) [b3qfut6] : " & Format(a.b3qfut6) & LINE_BREAK;
      end if;
      if( (a.b3qfut7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "B3QFUT7 (Awaiting outcome of claim: Employment and Support Allowance) [b3qfut7] : " & Format(a.b3qfut7) & LINE_BREAK;
      end if;
      if( (a.ben1q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q1 (In receipt: Child Benefit) [ben1q1] : " & Format(a.ben1q1) & LINE_BREAK;
      end if;
      if( (a.ben1q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q2 (In receipt: Guardian's Allowance) [ben1q2] : " & Format(a.ben1q2) & LINE_BREAK;
      end if;
      if( (a.ben1q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q3 (In receipt: Invalid Care Allowance) [ben1q3] : " & Format(a.ben1q3) & LINE_BREAK;
      end if;
      if( (a.ben1q4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q4 (In receipt: RP or Old Person's Pension) [ben1q4] : " & Format(a.ben1q4) & LINE_BREAK;
      end if;
      if( (a.ben1q5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q5 (In receipt: Bereavement Benefits) [ben1q5] : " & Format(a.ben1q5) & LINE_BREAK;
      end if;
      if( (a.ben1q6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q6 (In receipt: Armed Forces Compensation Scheme) [ben1q6] : " & Format(a.ben1q6) & LINE_BREAK;
      end if;
      if( (a.ben1q7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN1Q7 (In receipt: Severe Disablement Allowance) [ben1q7] : " & Format(a.ben1q7) & LINE_BREAK;
      end if;
      if( (a.ben2q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN2Q1 (In receipt: DLA (care)) [ben2q1] : " & Format(a.ben2q1) & LINE_BREAK;
      end if;
      if( (a.ben2q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN2Q2 (In receipt: DLA (mobility)) [ben2q2] : " & Format(a.ben2q2) & LINE_BREAK;
      end if;
      if( (a.ben2q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN2Q3 (In receipt: Attendance Allowance) [ben2q3] : " & Format(a.ben2q3) & LINE_BREAK;
      end if;
      if( (a.ben3q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q1 (In receipt: JSA) [ben3q1] : " & Format(a.ben3q1) & LINE_BREAK;
      end if;
      if( (a.ben3q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q2 (In receipt: Income Support/MIG) [ben3q2] : " & Format(a.ben3q2) & LINE_BREAK;
      end if;
      if( (a.ben3q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q3 (In receipt: Incapacity Benefit) [ben3q3] : " & Format(a.ben3q3) & LINE_BREAK;
      end if;
      if( (a.ben3q4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q4 (In receipt: Maternity Allowance) [ben3q4] : " & Format(a.ben3q4) & LINE_BREAK;
      end if;
      if( (a.ben3q5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q5 (In receipt: IIDB) [ben3q5] : " & Format(a.ben3q5) & LINE_BREAK;
      end if;
      if( (a.ben3q6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q6 (In receipt: Pension credit) [ben3q6] : " & Format(a.ben3q6) & LINE_BREAK;
      end if;
      if( (a.ben3q7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN3Q7 (In receipt: Employment and Support Allowance) [ben3q7] : " & Format(a.ben3q7) & LINE_BREAK;
      end if;
      if( (a.ben4q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN4Q1 (Rcpt last 12 months SF grant (funeral)) [ben4q1] : " & Format(a.ben4q1) & LINE_BREAK;
      end if;
      if( (a.ben4q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN4Q2 (Rcpt last 12 months Sure start mat.Grant) [ben4q2] : " & Format(a.ben4q2) & LINE_BREAK;
      end if;
      if( (a.ben4q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN4Q3 (Rcpt last 12 months SF Loan or CC Grant) [ben4q3] : " & Format(a.ben4q3) & LINE_BREAK;
      end if;
      if( (a.ben4q4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN4Q4 (Rcpt last 12 months Health in Pregnancy Grant) [ben4q4] : " & Format(a.ben4q4) & LINE_BREAK;
      end if;
      if( (a.ben5q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q1 (Rcpt last 6 months: Extended HB/CTB/rent or rates rebate) [ben5q1] : " & Format(a.ben5q1) & LINE_BREAK;
      end if;
      if( (a.ben5q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q2 (Rcpt last 6m: Widows/Bereavement Payment) [ben5q2] : " & Format(a.ben5q2) & LINE_BREAK;
      end if;
      if( (a.ben5q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q3 (Rcpt last 6 months Child Maintenance Bonus/Premium) [ben5q3] : " & Format(a.ben5q3) & LINE_BREAK;
      end if;
      if( (a.ben5q4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q4 (Rcpt last 6 months Lone Parent's Benefit Run-On/Job Grant) [ben5q4] : " & Format(a.ben5q4) & LINE_BREAK;
      end if;
      if( (a.ben5q5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q5 (Rcpt last 6m: In-work credit) [ben5q5] : " & Format(a.ben5q5) & LINE_BREAK;
      end if;
      if( (a.ben5q6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q6 (Rcpt last 6m: Return to work credit) [ben5q6] : " & Format(a.ben5q6) & LINE_BREAK;
      end if;
      if( (a.ben5q7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q7 (Rcpt last 6m: any other NI/State benefit) [ben5q7] : " & Format(a.ben5q7) & LINE_BREAK;
      end if;
      if( (a.ben7q1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q1 (Rcpt in last 12m: Unemp/redun. insurance) [ben7q1] : " & Format(a.ben7q1) & LINE_BREAK;
      end if;
      if( (a.ben7q2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q2 (Rcpt in last 12m: TU sick/strike pay) [ben7q2] : " & Format(a.ben7q2) & LINE_BREAK;
      end if;
      if( (a.ben7q3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q3 (Rcpt in last 12m: priv. sickness benefit) [ben7q3] : " & Format(a.ben7q3) & LINE_BREAK;
      end if;
      if( (a.ben7q4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q4 (Rcpt in last 12m: accident ins. benefits) [ben7q4] : " & Format(a.ben7q4) & LINE_BREAK;
      end if;
      if( (a.ben7q5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q5 (Rcpt in last 12m: perm. health insurance) [ben7q5] : " & Format(a.ben7q5) & LINE_BREAK;
      end if;
      if( (a.ben7q6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q6 (Rcpt in last 12m: hospital savings) [ben7q6] : " & Format(a.ben7q6) & LINE_BREAK;
      end if;
      if( (a.ben7q7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q7 (Rcpt in last 12m: Friendly Soc Benefits) [ben7q7] : " & Format(a.ben7q7) & LINE_BREAK;
      end if;
      if( (a.ben7q8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q8 (Rcpt in last 12m: Critical Illness Cover) [ben7q8] : " & Format(a.ben7q8) & LINE_BREAK;
      end if;
      if( (a.ben7q9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN7Q9 (Rcpt in last 12m: Any other sickness ins) [ben7q9] : " & Format(a.ben7q9) & LINE_BREAK;
      end if;
      if( (a.camemt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAMEMT (Month last arrived in this country) [camemt] : " & Format(a.camemt) & LINE_BREAK;
      end if;
      if( (a.cameyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAMEYR (Year first arrived in this country) [cameyr] : " & Format(a.cameyr) & LINE_BREAK;
      end if;
      if( (a.cameyr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAMEYR2 (Year last arrived in this country) [cameyr2] : " & Format(a.cameyr2) & LINE_BREAK;
      end if;
      if( (a.cbaamt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CBAAMT (Estimated value of accounts/investments) [cbaamt] : " & Format(a.cbaamt) & LINE_BREAK;
      end if;
      if( (a.chkctc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKCTC (How certain whether no tax credit receipt) [chkctc] : " & Format(a.chkctc) & LINE_BREAK;
      end if;
      if( (a.chkdpco1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDPCO1 (Whether receive and contribute to 1st personal pension) [chkdpco1] : " & Format(a.chkdpco1) & LINE_BREAK;
      end if;
      if( (a.chkdpco2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDPCO2 (Whether receive and contribute to 2nd personal pension) [chkdpco2] : " & Format(a.chkdpco2) & LINE_BREAK;
      end if;
      if( (a.chkdpco3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDPCO3 (Whether receive and contribute to 3rd personal pension) [chkdpco3] : " & Format(a.chkdpco3) & LINE_BREAK;
      end if;
      if( (a.chkdpn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDPN (Whether group personal or group stakeholder pension) [chkdpn] : " & Format(a.chkdpn) & LINE_BREAK;
      end if;
      if( (a.chkdsco1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDSCO1 (Whether receive and contribute to 1st stakeholder pension) [chkdsco1] : " & Format(a.chkdsco1) & LINE_BREAK;
      end if;
      if( (a.chkdsco2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDSCO2 (Whether receive and contribute to 2nd stakeholder pension) [chkdsco2] : " & Format(a.chkdsco2) & LINE_BREAK;
      end if;
      if( (a.chkdsco3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKDSCO3 (Whether receive and contribute to 3rd stakeholder pension) [chkdsco3] : " & Format(a.chkdsco3) & LINE_BREAK;
      end if;
      if( (a.chknop /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKNOP (Interviewer confirmed: no pension) [chknop] : " & Format(a.chknop) & LINE_BREAK;
      end if;
      if( (a.claimant /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CLAIMANT (Whether signed on at UBO for last week) [claimant] : " & Format(a.claimant) & LINE_BREAK;
      end if;
      if( (a.cohabit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COHABIT (Whether cohabitee) [cohabit] : " & Format(a.cohabit) & LINE_BREAK;
      end if;
      if( (a.combid /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COMBID (HRP identifier) [combid] : " & Format(a.combid) & LINE_BREAK;
      end if;
      if( (a.contuk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONTUK (Whether lived in UK continuously since first arrival) [contuk] : " & Format(a.contuk) & LINE_BREAK;
      end if;
      if( (a.convbl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONVBL (Whether person boarder/lodger) [convbl] : " & Format(a.convbl) & LINE_BREAK;
      end if;
      if( (a.corign /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CORIGN (Country of origin) [corign] : " & Format(a.corign) & LINE_BREAK;
      end if;
      if( (a.ctclum1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTCLUM1 (In receipt: CTC lump sum under £105 covering whole year) [ctclum1] : " & Format(a.ctclum1) & LINE_BREAK;
      end if;
      if( (a.ctclum2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTCLUM2 (In receipt: Regular payments via bank, PO or giro) [ctclum2] : " & Format(a.ctclum2) & LINE_BREAK;
      end if;
      if( (a.cupchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CUPCHK (Cohabiting) [cupchk] : " & Format(a.cupchk) & LINE_BREAK;
      end if;
      if( (a.cvht /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVHT (Whether heating incl (boarders/lodgers)) [cvht] : " & Format(a.cvht) & LINE_BREAK;
      end if;
      if( (a.cvpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVPAY (Amount of rent after HB (boarders/lodgers)) [cvpay] : " & Format(a.cvpay) & LINE_BREAK;
      end if;
      if( (a.cvpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVPD (Pcode: amount of rent after HB (boarders/lodgers)) [cvpd] : " & Format(a.cvpd) & LINE_BREAK;
      end if;
      if( (a.ddaprog /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DDAPROG (Progressive health condition) [ddaprog] : " & Format(a.ddaprog) & LINE_BREAK;
      end if;
      if( (a.ddatre /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DDATRE (Difficulties - Without medication) [ddatre] : " & Format(a.ddatre) & LINE_BREAK;
      end if;
      if( (a.ddatrep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DDATREP (Illness/disability limited activities) [ddatrep] : " & Format(a.ddatrep) & LINE_BREAK;
      end if;
      if( (a.defrpen /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEFRPEN (Deferred taking up state pension) [defrpen] : " & Format(a.defrpen) & LINE_BREAK;
      end if;
      if( (a.depend /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPEND (Status indicator for adult) [depend] : " & Format(a.depend) & LINE_BREAK;
      end if;
      if( (a.disdif1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF1 (Difficulty in Mobility (moving about)) [disdif1] : " & Format(a.disdif1) & LINE_BREAK;
      end if;
      if( (a.disdif2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF2 (Difficulty with Lifting, carrying or moving objects) [disdif2] : " & Format(a.disdif2) & LINE_BREAK;
      end if;
      if( (a.disdif3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF3 (Difficulty with Manual dexterity using hands for daily tasks) [disdif3] : " & Format(a.disdif3) & LINE_BREAK;
      end if;
      if( (a.disdif4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF4 (Difficulty - Continence (bladder/bowel control)) [disdif4] : " & Format(a.disdif4) & LINE_BREAK;
      end if;
      if( (a.disdif5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF5 (Difficulty with Communication (speech, hearing or eyesight)) [disdif5] : " & Format(a.disdif5) & LINE_BREAK;
      end if;
      if( (a.disdif6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF6 (Difficulty with Memory/concentration/learning/understanding) [disdif6] : " & Format(a.disdif6) & LINE_BREAK;
      end if;
      if( (a.disdif7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF7 (Difficulty with Recognising when in physical danger) [disdif7] : " & Format(a.disdif7) & LINE_BREAK;
      end if;
      if( (a.disdif8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF8 (Difficulty with your physical co-ordination) [disdif8] : " & Format(a.disdif8) & LINE_BREAK;
      end if;
      if( (a.disdif9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIF9 (Difficulty in Other area of life) [disdif9] : " & Format(a.disdif9) & LINE_BREAK;
      end if;
      if( (a.disdifp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIFP (Ever had any long standing illness/disability) [disdifp] : " & Format(a.disdifp) & LINE_BREAK;
      end if;
      if( (a.dob /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DOB (Date of Birth (under 20's)) [dob] : " & Format(a.dob) & LINE_BREAK;
      end if;
      if( (a.dv09pens /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DV09PENS (Pension provison routing variable) [dv09pens] : " & Format(a.dv09pens) & LINE_BREAK;
      end if;
      if( (a.dvil03a /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVIL03A (DV for ILO in employment - 3 categories) [dvil03a] : " & Format(a.dvil03a) & LINE_BREAK;
      end if;
      if( (a.dvil04a /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVIL04A (DV for ILO in employment - 4 categories) [dvil04a] : " & Format(a.dvil04a) & LINE_BREAK;
      end if;
      if( (a.dvjb12ml /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVJB12ML (DV unemp/inactive but worked last 12 mts) [dvjb12ml] : " & Format(a.dvjb12ml) & LINE_BREAK;
      end if;
      if( (a.dvmardf /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVMARDF (De facto marital status) [dvmardf] : " & Format(a.dvmardf) & LINE_BREAK;
      end if;
      if( (a.ed1amt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1AMT (Amount of last repayment on 1st loan) [ed1amt] : " & Format(a.ed1amt) & LINE_BREAK;
      end if;
      if( (a.ed1borr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1BORR (Lender: 1st educational loan) [ed1borr] : " & Format(a.ed1borr) & LINE_BREAK;
      end if;
      if( (a.ed1pd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1PD (Pcode: amount of last repayment on 1st loan) [ed1pd] : " & Format(a.ed1pd) & LINE_BREAK;
      end if;
      if( (a.ed1sum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1SUM (Amount originally borrowed: 1st loan) [ed1sum] : " & Format(a.ed1sum) & LINE_BREAK;
      end if;
      if( (a.ed2amt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2AMT (Amount of last repayment on second loan) [ed2amt] : " & Format(a.ed2amt) & LINE_BREAK;
      end if;
      if( (a.ed2borr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2BORR (Lender: 2nd educational loan) [ed2borr] : " & Format(a.ed2borr) & LINE_BREAK;
      end if;
      if( (a.ed2pd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2PD (Pcode: amount of last repayment on 2nd loan) [ed2pd] : " & Format(a.ed2pd) & LINE_BREAK;
      end if;
      if( (a.ed2sum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2SUM (Amount originally borrowed: 2nd loan) [ed2sum] : " & Format(a.ed2sum) & LINE_BREAK;
      end if;
      if( (a.edatt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDATT (Education attendance) [edatt] : " & Format(a.edatt) & LINE_BREAK;
      end if;
      if( (a.edhr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDHR (Hours of study) [edhr] : " & Format(a.edhr) & LINE_BREAK;
      end if;
      if( (a.edtyp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDTYP (Education type) [edtyp] : " & Format(a.edtyp) & LINE_BREAK;
      end if;
      if( (a.eligadlt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGADLT (Eligible Adult (derived)) [eligadlt] : " & Format(a.eligadlt) & LINE_BREAK;
      end if;
      if( (a.eligchld /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGCHLD (Eligible Child (derived)) [eligchld] : " & Format(a.eligchld) & LINE_BREAK;
      end if;
      if( (a.eligschm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGSCHM (Eligible to belong to pension scheme run by employer?) [eligschm] : " & Format(a.eligschm) & LINE_BREAK;
      end if;
      if( (a.emparr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPARR (Employer's involvement in this pension scheme) [emparr] : " & Format(a.emparr) & LINE_BREAK;
      end if;
      if( (a.emppen /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPPEN (Employer pension scheme) [emppen] : " & Format(a.emppen) & LINE_BREAK;
      end if;
      if( (a.empschm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPSCHM (Whether Employer runs a pension scheme for any employee) [empschm] : " & Format(a.empschm) & LINE_BREAK;
      end if;
      if( (a.empstat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPSTAT (Employment status (adult)) [empstat] : " & Format(a.empstat) & LINE_BREAK;
      end if;
      if( (a.es2000 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ES2000 (Full employment status - derived) [es2000] : " & Format(a.es2000) & LINE_BREAK;
      end if;
      if( (a.ethgrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ETHGRP (Ethnic group) [ethgrp] : " & Format(a.ethgrp) & LINE_BREAK;
      end if;
      if( (a.everwrk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EVERWRK (Ever had a paid job or done paid work) [everwrk] : " & Format(a.everwrk) & LINE_BREAK;
      end if;
      if( (a.exthbct1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXTHBCT1 (Rcpt last 6 months Extended HB paid sep.) [exthbct1] : " & Format(a.exthbct1) & LINE_BREAK;
      end if;
      if( (a.exthbct2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXTHBCT2 (Rcpt last 6 months Extended CTB paid sep) [exthbct2] : " & Format(a.exthbct2) & LINE_BREAK;
      end if;
      if( (a.exthbct3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXTHBCT3 (Rcpt last 6 months Ex. HB/CTB comb or DK) [exthbct3] : " & Format(a.exthbct3) & LINE_BREAK;
      end if;
      if( (a.followup /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FOLLOWUP (Whether agree to other org. follow-up) [followup] : " & Format(a.followup) & LINE_BREAK;
      end if;
      if( (a.fted /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FTED (Whether presently in full time education) [fted] : " & Format(a.fted) & LINE_BREAK;
      end if;
      if( (a.ftwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FTWK (Years in full-time work) [ftwk] : " & Format(a.ftwk) & LINE_BREAK;
      end if;
      if( (a.govpis /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GOVPIS (DWP paying direct for 1 or more IS items) [govpis] : " & Format(a.govpis) & LINE_BREAK;
      end if;
      if( (a.govpjsa /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GOVPJSA (DWP paying direct for 1 or more JSA/ESA items) [govpjsa] : " & Format(a.govpjsa) & LINE_BREAK;
      end if;
      if( (a.grant /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRANT (Whether receiving an award) [grant] : " & Format(a.grant) & LINE_BREAK;
      end if;
      if( (a.grtamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTAMT1 (Current value of 1st award (excl fees)) [grtamt1] : " & Format(a.grtamt1) & LINE_BREAK;
      end if;
      if( (a.grtamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTAMT2 (Current value of 2nd award (excl fees)) [grtamt2] : " & Format(a.grtamt2) & LINE_BREAK;
      end if;
      if( (a.grtdir1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTDIR1 (Amount of 1st award paid direct) [grtdir1] : " & Format(a.grtdir1) & LINE_BREAK;
      end if;
      if( (a.grtdir2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTDIR2 (Amount of 2nd award paid direct) [grtdir2] : " & Format(a.grtdir2) & LINE_BREAK;
      end if;
      if( (a.grtnum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTNUM (Number of awards or scholarships) [grtnum] : " & Format(a.grtnum) & LINE_BREAK;
      end if;
      if( (a.grtsce1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTSCE1 (Source of first award) [grtsce1] : " & Format(a.grtsce1) & LINE_BREAK;
      end if;
      if( (a.grtsce2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTSCE2 (Source of second award) [grtsce2] : " & Format(a.grtsce2) & LINE_BREAK;
      end if;
      if( (a.grtval1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTVAL1 (Current value of 1st award (incl fees)) [grtval1] : " & Format(a.grtval1) & LINE_BREAK;
      end if;
      if( (a.grtval2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTVAL2 (Current value of 2nd award (incl fees)) [grtval2] : " & Format(a.grtval2) & LINE_BREAK;
      end if;
      if( (a.gta /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GTA (Flag for Gov.Training Allowances - Ben36) [gta] : " & Format(a.gta) & LINE_BREAK;
      end if;
      if( (a.health /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEALTH (Whether has a long standing illness) [health] : " & Format(a.health) & LINE_BREAK;
      end if;
      if( (a.hholder /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHOLDER (Whether Householder) [hholder] : " & Format(a.hholder) & LINE_BREAK;
      end if;
      if( (a.hi1qual1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL1 (Whether qualifications: From school, college or university) [hi1qual1] : " & Format(a.hi1qual1) & LINE_BREAK;
      end if;
      if( (a.hi1qual2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL2 (Whether qualifications: Connected with work) [hi1qual2] : " & Format(a.hi1qual2) & LINE_BREAK;
      end if;
      if( (a.hi1qual3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL3 (Whether qualifications: From government schemes) [hi1qual3] : " & Format(a.hi1qual3) & LINE_BREAK;
      end if;
      if( (a.hi1qual4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL4 (Whether qualifications: From an Apprenticeship) [hi1qual4] : " & Format(a.hi1qual4) & LINE_BREAK;
      end if;
      if( (a.hi1qual5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL5 (Whether qualifications: From having been educated at home) [hi1qual5] : " & Format(a.hi1qual5) & LINE_BREAK;
      end if;
      if( (a.hi1qual6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI1QUAL6 (Whether No qualifications) [hi1qual6] : " & Format(a.hi1qual6) & LINE_BREAK;
      end if;
      if( (a.hi2qual /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HI2QUAL (Highest level of qualification) [hi2qual] : " & Format(a.hi2qual) & LINE_BREAK;
      end if;
      if( (a.hprob /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPROB (Illness/disability limits activities) [hprob] : " & Format(a.hprob) & LINE_BREAK;
      end if;
      if( (a.hrpid /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HRPID (Household Reference Person Identifier) [hrpid] : " & Format(a.hrpid) & LINE_BREAK;
      end if;
      if( (a.hsvper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HSVPER (Receives Healthy Start Vouchers) [hsvper] : " & Format(a.hsvper) & LINE_BREAK;
      end if;
      if( (a.incdur /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCDUR (Year stopped work because of injury etc) [incdur] : " & Format(a.incdur) & LINE_BREAK;
      end if;
      if( (a.injlong /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INJLONG (Length of time unable to work) [injlong] : " & Format(a.injlong) & LINE_BREAK;
      end if;
      if( (a.injwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INJWK (Hours a week could/able to work) [injwk] : " & Format(a.injwk) & LINE_BREAK;
      end if;
      if( (a.invests /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INVESTS (Whether any investments) [invests] : " & Format(a.invests) & LINE_BREAK;
      end if;
      if( (a.iout /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IOUT (Individual Outcome) [iout] : " & Format(a.iout) & LINE_BREAK;
      end if;
      if( (a.isa1type /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISA1TYPE (Whether Cash in an ISA) [isa1type] : " & Format(a.isa1type) & LINE_BREAK;
      end if;
      if( (a.isa2type /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISA2TYPE (Whether Stocks and Shares in an ISA) [isa2type] : " & Format(a.isa2type) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.jobaway /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "JOBAWAY (Whether away from work in last 7 days) [jobaway] : " & Format(a.jobaway) & LINE_BREAK;
      end if;
      if( (a.lareg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LAREG (Whether registered disabled (LA/SS)) [lareg] : " & Format(a.lareg) & LINE_BREAK;
      end if;
      if( (a.likewk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LIKEWK (Whether would like a regularly paid job) [likewk] : " & Format(a.likewk) & LINE_BREAK;
      end if;
      if( (a.lktime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LKTIME (How long looking for work/Gov Training Scheme) [lktime] : " & Format(a.lktime) & LINE_BREAK;
      end if;
      if( (a.lnkdwp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKDWP (Whether consented to DWP data linking) [lnkdwp] : " & Format(a.lnkdwp) & LINE_BREAK;
      end if;
      if( (a.lnkref01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF01 (Concerns about security of their personal details) [lnkref01] : " & Format(a.lnkref01) & LINE_BREAK;
      end if;
      if( (a.lnkref02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF02 (Concerns about privacy) [lnkref02] : " & Format(a.lnkref02) & LINE_BREAK;
      end if;
      if( (a.lnkref03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF03 (Anti-government) [lnkref03] : " & Format(a.lnkref03) & LINE_BREAK;
      end if;
      if( (a.lnkref04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF04 (Previous negative experiences with DWP) [lnkref04] : " & Format(a.lnkref04) & LINE_BREAK;
      end if;
      if( (a.lnkref05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF05 (Too much information being requested) [lnkref05] : " & Format(a.lnkref05) & LINE_BREAK;
      end if;
      if( (a.lnkref06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF06 (Didn't understand data linkage request) [lnkref06] : " & Format(a.lnkref06) & LINE_BREAK;
      end if;
      if( (a.lnkref07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF07 (Can't be bothered) [lnkref07] : " & Format(a.lnkref07) & LINE_BREAK;
      end if;
      if( (a.lnkref08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF08 (Will result in unwanted further contact) [lnkref08] : " & Format(a.lnkref08) & LINE_BREAK;
      end if;
      if( (a.lnkref09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF09 (Influenced by other household member) [lnkref09] : " & Format(a.lnkref09) & LINE_BREAK;
      end if;
      if( (a.lnkref10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF10 (Temporary resident in UK no NI number) [lnkref10] : " & Format(a.lnkref10) & LINE_BREAK;
      end if;
      if( (a.lnkref11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF11 (Other reason given) [lnkref11] : " & Format(a.lnkref11) & LINE_BREAK;
      end if;
      if( (a.loan /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOAN (Whether any loan) [loan] : " & Format(a.loan) & LINE_BREAK;
      end if;
      if( (a.loannum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANNUM (Number of educational loans) [loannum] : " & Format(a.loannum) & LINE_BREAK;
      end if;
      if( (a.look /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOOK (Whether looking for work/training) [look] : " & Format(a.look) & LINE_BREAK;
      end if;
      if( (a.lookwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOOKWK (Whether wants full or part time work) [lookwk] : " & Format(a.lookwk) & LINE_BREAK;
      end if;
      if( (a.lstwrk1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LSTWRK1 (Month last did any paid work) [lstwrk1] : " & Format(a.lstwrk1) & LINE_BREAK;
      end if;
      if( (a.lstwrk2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LSTWRK2 (Year last did any paid work) [lstwrk2] : " & Format(a.lstwrk2) & LINE_BREAK;
      end if;
      if( (a.lstyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LSTYR (Weeks done regular work in last year) [lstyr] : " & Format(a.lstyr) & LINE_BREAK;
      end if;
      if( (a.mednum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDNUM (Number of prscrptn items in last 4 weeks) [mednum] : " & Format(a.mednum) & LINE_BREAK;
      end if;
      if( (a.medprpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDPRPD (Period pre-payment certificate covers) [medprpd] : " & Format(a.medprpd) & LINE_BREAK;
      end if;
      if( (a.medprpy /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDPRPY (Whether had a pre-payment certificate for last 4 weeks) [medprpy] : " & Format(a.medprpy) & LINE_BREAK;
      end if;
      if( (a.memschm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEMSCHM (Member of a pension scheme run by an employer) [memschm] : " & Format(a.memschm) & LINE_BREAK;
      end if;
      if( (a.mntamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTAMT1 (Amount received: maintenance paid to self) [mntamt1] : " & Format(a.mntamt1) & LINE_BREAK;
      end if;
      if( (a.mntamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTAMT2 (Amount received: maintenance paid via DWP) [mntamt2] : " & Format(a.mntamt2) & LINE_BREAK;
      end if;
      if( (a.mntarr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTARR1 (Maintenance arrangement: CSA make arrangements for maint.) [mntarr1] : " & Format(a.mntarr1) & LINE_BREAK;
      end if;
      if( (a.mntarr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTARR2 (Maintenance arrangement: A court order) [mntarr2] : " & Format(a.mntarr2) & LINE_BREAK;
      end if;
      if( (a.mntarr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTARR3 (Maintenance arrangement: A voluntary agreement) [mntarr3] : " & Format(a.mntarr3) & LINE_BREAK;
      end if;
      if( (a.mntarr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTARR4 (Maintenance arrangement: Other) [mntarr4] : " & Format(a.mntarr4) & LINE_BREAK;
      end if;
      if( (a.mntgov1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTGOV1 (Maintenance paid to self) [mntgov1] : " & Format(a.mntgov1) & LINE_BREAK;
      end if;
      if( (a.mntgov2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTGOV2 (Maintenance paid via the DWP, CSA) [mntgov2] : " & Format(a.mntgov2) & LINE_BREAK;
      end if;
      if( (a.mntnrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTNRP (Whether non-resident parent) [mntnrp] : " & Format(a.mntnrp) & LINE_BREAK;
      end if;
      if( (a.mntpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTPAY (Whether making maintenance payments) [mntpay] : " & Format(a.mntpay) & LINE_BREAK;
      end if;
      if( (a.mntpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTPD1 (Pcode: amount maintenance paid to self) [mntpd1] : " & Format(a.mntpd1) & LINE_BREAK;
      end if;
      if( (a.mntpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTPD2 (Pcode: amount maintenance paid via DWP) [mntpd2] : " & Format(a.mntpd2) & LINE_BREAK;
      end if;
      if( (a.mntrec /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTREC (Whether in receipt of maintenance) [mntrec] : " & Format(a.mntrec) & LINE_BREAK;
      end if;
      if( (a.mntus1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUS1 (Maintenance to self - whether usual amount) [mntus1] : " & Format(a.mntus1) & LINE_BREAK;
      end if;
      if( (a.mntus2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUS2 (Maintenance via DWP - whether usual amount) [mntus2] : " & Format(a.mntus2) & LINE_BREAK;
      end if;
      if( (a.mntusam1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUSAM1 (Maintenance to self - usual amount) [mntusam1] : " & Format(a.mntusam1) & LINE_BREAK;
      end if;
      if( (a.mntusam2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUSAM2 (Maintenance via DWP - usual amount) [mntusam2] : " & Format(a.mntusam2) & LINE_BREAK;
      end if;
      if( (a.mntuspd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUSPD1 (Pcode:maintenance to self - usual amount) [mntuspd1] : " & Format(a.mntuspd1) & LINE_BREAK;
      end if;
      if( (a.mntuspd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTUSPD2 (Pcode:maintenance via DWP - usual amount) [mntuspd2] : " & Format(a.mntuspd2) & LINE_BREAK;
      end if;
      if( (a.ms /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MS (Marital status) [ms] : " & Format(a.ms) & LINE_BREAK;
      end if;
      if( (a.natid1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID1 (English) [natid1] : " & Format(a.natid1) & LINE_BREAK;
      end if;
      if( (a.natid2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID2 (Scottish) [natid2] : " & Format(a.natid2) & LINE_BREAK;
      end if;
      if( (a.natid3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID3 (Welsh) [natid3] : " & Format(a.natid3) & LINE_BREAK;
      end if;
      if( (a.natid4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID4 (Irish) [natid4] : " & Format(a.natid4) & LINE_BREAK;
      end if;
      if( (a.natid5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID5 (British) [natid5] : " & Format(a.natid5) & LINE_BREAK;
      end if;
      if( (a.natid6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATID6 (Other answer) [natid6] : " & Format(a.natid6) & LINE_BREAK;
      end if;
      if( (a.ndeal /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NDEAL (Whether currently receiving New Deal 50+) [ndeal] : " & Format(a.ndeal) & LINE_BREAK;
      end if;
      if( (a.newdtype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEWDTYPE (Which new deal option) [newdtype] : " & Format(a.newdtype) & LINE_BREAK;
      end if;
      if( (a.niamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIAMT (Amount of last regular NI contribution) [niamt] : " & Format(a.niamt) & LINE_BREAK;
      end if;
      if( (a.niethgrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIETHGRP (NI Ethnic Group) [niethgrp] : " & Format(a.niethgrp) & LINE_BREAK;
      end if;
      if( (a.niexthbb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIEXTHBB (Rcpt last 6 month Extended HB paid.) [niexthbb] : " & Format(a.niexthbb) & LINE_BREAK;
      end if;
      if( (a.ninatid1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID1 (Whether British National Identity) [ninatid1] : " & Format(a.ninatid1) & LINE_BREAK;
      end if;
      if( (a.ninatid2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID2 (Whether Irish National Identity) [ninatid2] : " & Format(a.ninatid2) & LINE_BREAK;
      end if;
      if( (a.ninatid3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID3 (Whether Ulster National Identity) [ninatid3] : " & Format(a.ninatid3) & LINE_BREAK;
      end if;
      if( (a.ninatid4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID4 (Whether Northern Irish National Identity) [ninatid4] : " & Format(a.ninatid4) & LINE_BREAK;
      end if;
      if( (a.ninatid5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID5 (Whether English National Identity) [ninatid5] : " & Format(a.ninatid5) & LINE_BREAK;
      end if;
      if( (a.ninatid6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID6 (Whether Scottish National Identity) [ninatid6] : " & Format(a.ninatid6) & LINE_BREAK;
      end if;
      if( (a.ninatid7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID7 (Whether Welsh National Identity) [ninatid7] : " & Format(a.ninatid7) & LINE_BREAK;
      end if;
      if( (a.ninatid8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINATID8 (Whether Other answer National Identity) [ninatid8] : " & Format(a.ninatid8) & LINE_BREAK;
      end if;
      if( (a.nipd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIPD (Pcode: amount of last regular NI contrib.) [nipd] : " & Format(a.nipd) & LINE_BREAK;
      end if;
      if( (a.nireg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIREG (Whether pay a regular NI contribution) [nireg] : " & Format(a.nireg) & LINE_BREAK;
      end if;
      if( (a.nirel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIREL (Religious Denomination) [nirel] : " & Format(a.nirel) & LINE_BREAK;
      end if;
      if( (a.nitrain /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NITRAIN (Whether on Govt. training scheme) [nitrain] : " & Format(a.nitrain) & LINE_BREAK;
      end if;
      if( (a.nlper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NLPER (Person cared for) [nlper] : " & Format(a.nlper) & LINE_BREAK;
      end if;
      if( (a.nolk1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOLK1 (Prevented from working due to disability) [nolk1] : " & Format(a.nolk1) & LINE_BREAK;
      end if;
      if( (a.nolk2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOLK2 (Prevented from working due to caring) [nolk2] : " & Format(a.nolk2) & LINE_BREAK;
      end if;
      if( (a.nolk3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOLK3 (Prevented from working due to children) [nolk3] : " & Format(a.nolk3) & LINE_BREAK;
      end if;
      if( (a.nolook /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOLOOK (Main reason not looking for work (4wks)) [nolook] : " & Format(a.nolook) & LINE_BREAK;
      end if;
      if( (a.nowant /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOWANT (Main reason not wanting work in last 4wk) [nowant] : " & Format(a.nowant) & LINE_BREAK;
      end if;
      if( (a.nssec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NSSEC (Social-Economic Classifications) [nssec] : " & Format(a.nssec) & LINE_BREAK;
      end if;
      if( (a.numjob /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMJOB (Number of jobs) [numjob] : " & Format(a.numjob) & LINE_BREAK;
      end if;
      if( (a.numjob2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMJOB2 (When last working, number of jobs) [numjob2] : " & Format(a.numjob2) & LINE_BREAK;
      end if;
      if( (a.oddjob /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ODDJOB (Whether received any money for odd jobs) [oddjob] : " & Format(a.oddjob) & LINE_BREAK;
      end if;
      if( (a.oldstud /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OLDSTUD (Whether been student any time since 1990) [oldstud] : " & Format(a.oldstud) & LINE_BREAK;
      end if;
      if( (a.otabspar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTABSPAR (Paying any allowances in absence) [otabspar] : " & Format(a.otabspar) & LINE_BREAK;
      end if;
      if( (a.otamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTAMT (Amt of extra income tax in last 12 mths) [otamt] : " & Format(a.otamt) & LINE_BREAK;
      end if;
      if( (a.otapamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTAPAMT (Amount paid to absent partner) [otapamt] : " & Format(a.otapamt) & LINE_BREAK;
      end if;
      if( (a.otappd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTAPPD (Pcode: amount paid to absent partner) [otappd] : " & Format(a.otappd) & LINE_BREAK;
      end if;
      if( (a.othqual1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHQUAL1 (Other Qualification: work-related/vocational qualification) [othqual1] : " & Format(a.othqual1) & LINE_BREAK;
      end if;
      if( (a.othqual2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHQUAL2 (Other Qualification: a professional qualification) [othqual2] : " & Format(a.othqual2) & LINE_BREAK;
      end if;
      if( (a.othqual3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHQUAL3 (Other Qualification: a foreign qualification) [othqual3] : " & Format(a.othqual3) & LINE_BREAK;
      end if;
      if( (a.othtax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHTAX (Whether paid any extra income tax) [othtax] : " & Format(a.othtax) & LINE_BREAK;
      end if;
      if( (a.otinva /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTINVA (Whether any NSC-type investments) [otinva] : " & Format(a.otinva) & LINE_BREAK;
      end if;
      if( (a.pareamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAREAMT (Parental contribution (students)) [pareamt] : " & Format(a.pareamt) & LINE_BREAK;
      end if;
      if( (a.parepd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAREPD (Pcode: Parental contribution (students)) [parepd] : " & Format(a.parepd) & LINE_BREAK;
      end if;
      if( (a.penflag /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENFLAG (Whether is State Pension Age) [penflag] : " & Format(a.penflag) & LINE_BREAK;
      end if;
      if( (a.penlump /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENLUMP (How annuity bought) [penlump] : " & Format(a.penlump) & LINE_BREAK;
      end if;
      if( (a.perspen1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSPEN1 (Self arranged pension: personal pension) [perspen1] : " & Format(a.perspen1) & LINE_BREAK;
      end if;
      if( (a.perspen2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSPEN2 (Self arranged pension: stakeholder pension) [perspen2] : " & Format(a.perspen2) & LINE_BREAK;
      end if;
      if( (a.ppchk1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PPCHK1 (Whether contribution to 1st pension in last 12 months) [ppchk1] : " & Format(a.ppchk1) & LINE_BREAK;
      end if;
      if( (a.ppchk2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PPCHK2 (Whether contribution to 2nd pension in last 12 months) [ppchk2] : " & Format(a.ppchk2) & LINE_BREAK;
      end if;
      if( (a.ppchk3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PPCHK3 (Whether contribution to 3rd pension in last 12 months) [ppchk3] : " & Format(a.ppchk3) & LINE_BREAK;
      end if;
      if( (a.ppnumc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PPNUMC (Number of Pensions contributed to) [ppnumc] : " & Format(a.ppnumc) & LINE_BREAK;
      end if;
      if( (a.practice /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRACTICE (Whether practicing religion given at NIREL) [practice] : " & Format(a.practice) & LINE_BREAK;
      end if;
      if( (a.privpen /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRIVPEN (Private Pension) [privpen] : " & Format(a.privpen) & LINE_BREAK;
      end if;
      if( (a.ptwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTWK (Years in part-time work) [ptwk] : " & Format(a.ptwk) & LINE_BREAK;
      end if;
      if( (a.r01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R01 (Relationship to person 1) [r01] : " & Format(a.r01) & LINE_BREAK;
      end if;
      if( (a.r02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R02 (Relationship to person 2) [r02] : " & Format(a.r02) & LINE_BREAK;
      end if;
      if( (a.r03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R03 (Relationship to person 3) [r03] : " & Format(a.r03) & LINE_BREAK;
      end if;
      if( (a.r04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R04 (Relationship to person 4) [r04] : " & Format(a.r04) & LINE_BREAK;
      end if;
      if( (a.r05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R05 (Relationship to person 5) [r05] : " & Format(a.r05) & LINE_BREAK;
      end if;
      if( (a.r06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R06 (Relationship to person 6) [r06] : " & Format(a.r06) & LINE_BREAK;
      end if;
      if( (a.r07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R07 (Relationship to person 7) [r07] : " & Format(a.r07) & LINE_BREAK;
      end if;
      if( (a.r08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R08 (Relationship to person 8) [r08] : " & Format(a.r08) & LINE_BREAK;
      end if;
      if( (a.r09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R09 (Relationship to person 9) [r09] : " & Format(a.r09) & LINE_BREAK;
      end if;
      if( (a.r10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R10 (Relationship to person 10) [r10] : " & Format(a.r10) & LINE_BREAK;
      end if;
      if( (a.r11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R11 (Relationship to person 11) [r11] : " & Format(a.r11) & LINE_BREAK;
      end if;
      if( (a.r12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R12 (Relationship to person 12) [r12] : " & Format(a.r12) & LINE_BREAK;
      end if;
      if( (a.r13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R13 (Relationship to person 13) [r13] : " & Format(a.r13) & LINE_BREAK;
      end if;
      if( (a.r14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R14 (Relationship to person 14) [r14] : " & Format(a.r14) & LINE_BREAK;
      end if;
      if( (a.redamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REDAMT (Amount of redundancy payment) [redamt] : " & Format(a.redamt) & LINE_BREAK;
      end if;
      if( (a.redany /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REDANY (Whether received any redundancy payments) [redany] : " & Format(a.redany) & LINE_BREAK;
      end if;
      if( (a.rentprof /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTPROF (Whether profit/loss income from property) [rentprof] : " & Format(a.rentprof) & LINE_BREAK;
      end if;
      if( (a.retire /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RETIRE (Whether retired within last 12 months) [retire] : " & Format(a.retire) & LINE_BREAK;
      end if;
      if( (a.retire1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RETIRE1 (Month of Retirement) [retire1] : " & Format(a.retire1) & LINE_BREAK;
      end if;
      if( (a.retreas /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RETREAS (Reason for retiring below pension age) [retreas] : " & Format(a.retreas) & LINE_BREAK;
      end if;
      if( (a.royal1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYAL1 (Rent from any property) [royal1] : " & Format(a.royal1) & LINE_BREAK;
      end if;
      if( (a.royal2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYAL2 (Royalties -land/books/performances 12mth) [royal2] : " & Format(a.royal2) & LINE_BREAK;
      end if;
      if( (a.royal3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYAL3 (Income as sleeping partner in last 12mth) [royal3] : " & Format(a.royal3) & LINE_BREAK;
      end if;
      if( (a.royal4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYAL4 (Overseas pension in last 12 months) [royal4] : " & Format(a.royal4) & LINE_BREAK;
      end if;
      if( (a.royyr1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYYR1 (Rent before tax from other property) [royyr1] : " & Format(a.royyr1) & LINE_BREAK;
      end if;
      if( (a.royyr2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYYR2 (Amount of royalties) [royyr2] : " & Format(a.royyr2) & LINE_BREAK;
      end if;
      if( (a.royyr3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYYR3 (Amount of income as sleeping partner) [royyr3] : " & Format(a.royyr3) & LINE_BREAK;
      end if;
      if( (a.royyr4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROYYR4 (Amount of overseas pension) [royyr4] : " & Format(a.royyr4) & LINE_BREAK;
      end if;
      if( (a.rstrct /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RSTRCT (Restricted in amount/type of work done) [rstrct] : " & Format(a.rstrct) & LINE_BREAK;
      end if;
      if( (a.schchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCHCHK (Whether Child Benefit still received for this person) [schchk] : " & Format(a.schchk) & LINE_BREAK;
      end if;
      if( (a.sex /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEX (Sex) [sex] : " & Format(a.sex) & LINE_BREAK;
      end if;
      if( (a.sflntyp1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFLNTYP1 (Received Social Fund Loan: Budgeting) [sflntyp1] : " & Format(a.sflntyp1) & LINE_BREAK;
      end if;
      if( (a.sflntyp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFLNTYP2 (Received Social Fund Loan: Crisis) [sflntyp2] : " & Format(a.sflntyp2) & LINE_BREAK;
      end if;
      if( (a.sfrpis /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFRPIS (Whether repaying SF loan from IS) [sfrpis] : " & Format(a.sfrpis) & LINE_BREAK;
      end if;
      if( (a.sfrpjsa /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFRPJSA (Whether repaying SF loan from JSA/ESA) [sfrpjsa] : " & Format(a.sfrpjsa) & LINE_BREAK;
      end if;
      if( (a.sftype1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFTYPE1 (Social Fund Loan) [sftype1] : " & Format(a.sftype1) & LINE_BREAK;
      end if;
      if( (a.sftype2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFTYPE2 (Rcpt last 6 months SF grant(comm. care)) [sftype2] : " & Format(a.sftype2) & LINE_BREAK;
      end if;
      if( (a.sic /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SIC (Standard Industrial Classification 2007) [sic] : " & Format(a.sic) & LINE_BREAK;
      end if;
      if( (a.slrepamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SLREPAMT (Amount of last student loan repayment) [slrepamt] : " & Format(a.slrepamt) & LINE_BREAK;
      end if;
      if( (a.slrepay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SLREPAY (Whether making student loan repayments) [slrepay] : " & Format(a.slrepay) & LINE_BREAK;
      end if;
      if( (a.slreppd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SLREPPD (Pcode:amt of last student loan repayment) [slreppd] : " & Format(a.slreppd) & LINE_BREAK;
      end if;
      if( (a.soc2000 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SOC2000 (Standard Occupational Classification) [soc2000] : " & Format(a.soc2000) & LINE_BREAK;
      end if;
      if( (a.spcreg1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG1 (Whether registered blind with LA/SS) [spcreg1] : " & Format(a.spcreg1) & LINE_BREAK;
      end if;
      if( (a.spcreg2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG2 (Whether LA/SS registered partially sight) [spcreg2] : " & Format(a.spcreg2) & LINE_BREAK;
      end if;
      if( (a.spcreg3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG3 (Whether registered as deaf with LA/SS) [spcreg3] : " & Format(a.spcreg3) & LINE_BREAK;
      end if;
      if( (a.spnumc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNUMC (Number of stakeholder pensions) [spnumc] : " & Format(a.spnumc) & LINE_BREAK;
      end if;
      if( (a.spout /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPOUT (Why no spouse in Household) [spout] : " & Format(a.spout) & LINE_BREAK;
      end if;
      if( (a.spyrot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPYROT (Whether no spouse in Household more than 12 mnths) [spyrot] : " & Format(a.spyrot) & LINE_BREAK;
      end if;
      if( (a.srentamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SRENTAMT (Amount of rent paid (shared HH 2nd+BU)) [srentamt] : " & Format(a.srentamt) & LINE_BREAK;
      end if;
      if( (a.srentpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SRENTPD (Pcode: amount of rent paid (shared HHs)) [srentpd] : " & Format(a.srentpd) & LINE_BREAK;
      end if;
      if( (a.stakep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STAKEP (Whether paying contributions into a stakeholder pension fund) [stakep] : " & Format(a.stakep) & LINE_BREAK;
      end if;
      if( (a.start /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "START (Whether could start work within 2 wks) [start] : " & Format(a.start) & LINE_BREAK;
      end if;
      if( (a.taxcred1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXCRED1 (In receipt:Working Tax Credit) [taxcred1] : " & Format(a.taxcred1) & LINE_BREAK;
      end if;
      if( (a.taxcred2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXCRED2 (In receipt:Child Tax Credit) [taxcred2] : " & Format(a.taxcred2) & LINE_BREAK;
      end if;
      if( (a.taxfut /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXFUT (Awaiting outcome of claim: New Tax Credit) [taxfut] : " & Format(a.taxfut) & LINE_BREAK;
      end if;
      if( (a.tcever1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCEVER1 (In receipt:Working Tax Credit payments since April 2003) [tcever1] : " & Format(a.tcever1) & LINE_BREAK;
      end if;
      if( (a.tcever2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCEVER2 (In receipt:Child Tax Credit payments since April 2003) [tcever2] : " & Format(a.tcever2) & LINE_BREAK;
      end if;
      if( (a.tcrepay1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY1 (Non receipt:Repaying overpayment from earlier this year) [tcrepay1] : " & Format(a.tcrepay1) & LINE_BREAK;
      end if;
      if( (a.tcrepay2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY2 (Non receipt:Repaying overpayment from previous year) [tcrepay2] : " & Format(a.tcrepay2) & LINE_BREAK;
      end if;
      if( (a.tcrepay3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY3 (Non receipt:Not completed Tax Cred application/renewal forms) [tcrepay3] : " & Format(a.tcrepay3) & LINE_BREAK;
      end if;
      if( (a.tcrepay4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY4 (Non receipt:Income too high) [tcrepay4] : " & Format(a.tcrepay4) & LINE_BREAK;
      end if;
      if( (a.tcrepay5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY5 (Non receipt:Not eligible for other reason) [tcrepay5] : " & Format(a.tcrepay5) & LINE_BREAK;
      end if;
      if( (a.tcrepay6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCREPAY6 (Non receipt:Other) [tcrepay6] : " & Format(a.tcrepay6) & LINE_BREAK;
      end if;
      if( (a.tcthsyr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCTHSYR1 (In receipt:Working Tax Credit payments since April 2007) [tcthsyr1] : " & Format(a.tcthsyr1) & LINE_BREAK;
      end if;
      if( (a.tcthsyr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TCTHSYR2 (In receipt:Child Tax Credit payments since April 2007) [tcthsyr2] : " & Format(a.tcthsyr2) & LINE_BREAK;
      end if;
      if( (a.tdaywrk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TDAYWRK (Whether going/gone to work today) [tdaywrk] : " & Format(a.tdaywrk) & LINE_BREAK;
      end if;
      if( (a.tea /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TEA (Age completed full-time education) [tea] : " & Format(a.tea) & LINE_BREAK;
      end if;
      if( (a.tea9697 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TEA9697 (Full-time education status) [tea9697] : " & Format(a.tea9697) & LINE_BREAK;
      end if;
      if( (a.topupl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOPUPL (Whether eligible for Student loan) [topupl] : " & Format(a.topupl) & LINE_BREAK;
      end if;
      if( (a.totint /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTINT (Total interest received) [totint] : " & Format(a.totint) & LINE_BREAK;
      end if;
      if( (a.train /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRAIN (Whether on govt training scheme) [train] : " & Format(a.train) & LINE_BREAK;
      end if;
      if( (a.trainee /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRAINEE (Whether on a government scheme for employment training) [trainee] : " & Format(a.trainee) & LINE_BREAK;
      end if;
      if( (a.ttbprx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTBPRX (Estimate of weekly amount in benefits and tax credit) [ttbprx] : " & Format(a.ttbprx) & LINE_BREAK;
      end if;
      if( (a.tuborr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TUBORR (Student top up loan: amount borrowed) [tuborr] : " & Format(a.tuborr) & LINE_BREAK;
      end if;
      if( (a.typeed /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TYPEED (Type of school or college attended) [typeed] : " & Format(a.typeed) & LINE_BREAK;
      end if;
      if( (a.unpaid1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNPAID1 (Whether did any unpaid work) [unpaid1] : " & Format(a.unpaid1) & LINE_BREAK;
      end if;
      if( (a.unpaid2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNPAID2 (Unpaid work (relative's business)) [unpaid2] : " & Format(a.unpaid2) & LINE_BREAK;
      end if;
      if( (a.w1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "W1 (Age when widowed) [w1] : " & Format(a.w1) & LINE_BREAK;
      end if;
      if( (a.w2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "W2 (Whether any kids aged <16 when widowed) [w2] : " & Format(a.w2) & LINE_BREAK;
      end if;
      if( (a.wait /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WAIT (Whether waiting to take up job) [wait] : " & Format(a.wait) & LINE_BREAK;
      end if;
      if( (a.war1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WAR1 (In receipt: Armed Forces Compensation Scheme) [war1] : " & Format(a.war1) & LINE_BREAK;
      end if;
      if( (a.war2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WAR2 (In receipt: War Widows Pension) [war2] : " & Format(a.war2) & LINE_BREAK;
      end if;
      if( (a.whoresp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORESP (Whether responsible for accommodation) [whoresp] : " & Format(a.whoresp) & LINE_BREAK;
      end if;
      if( (a.whosectb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOSECTB (Council Tax Benefit for this person) [whosectb] : " & Format(a.whosectb) & LINE_BREAK;
      end if;
      if( (a.wintfuel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WINTFUEL (Whether winter fuel payment in last 12m) [wintfuel] : " & Format(a.wintfuel) & LINE_BREAK;
      end if;
      if( (a.working /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WORKING (Whether did any paid work in last week) [working] : " & Format(a.working) & LINE_BREAK;
      end if;
      if( (a.wpa /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WPA (Flag for Benefit 7) [wpa] : " & Format(a.wpa) & LINE_BREAK;
      end if;
      if( (a.wpba /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WPBA (Flag for Benefit 6) [wpba] : " & Format(a.wpba) & LINE_BREAK;
      end if;
      if( (a.wtclum1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WTCLUM1 (In receipt: WTC lump sum under £105 covering whole year) [wtclum1] : " & Format(a.wtclum1) & LINE_BREAK;
      end if;
      if( (a.wtclum2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WTCLUM2 (In receipt: Regular payments via bank, PO or giro) [wtclum2] : " & Format(a.wtclum2) & LINE_BREAK;
      end if;
      if( (a.ystrtwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YSTRTWK (Main reason not able to start work within 2 week) [ystrtwk] : " & Format(a.ystrtwk) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.able /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ABLE (Ability to work) [able] : " & Format(a.able) & LINE_BREAK;
      end if;
      if( (a.actacci /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACTACCI (Adult holds account capable of accepting Direct Payment) [actacci] : " & Format(a.actacci) & LINE_BREAK;
      end if;
      if( (a.addda /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDDA (Whether adult has a DDA defined disability) [addda] : " & Format(a.addda) & LINE_BREAK;
      end if;
      if( (a.age80 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGE80 (All adults 'over 80' recoded as '80' for anon purposes) [age80] : " & Format(a.age80) & LINE_BREAK;
      end if;
      if( (a.basacti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BASACTI (Adult - Basic Bank accounts held) [basacti] : " & Format(a.basacti) & LINE_BREAK;
      end if;
      if( (a.careab /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREAB (Number of Adults looked after in BU) [careab] : " & Format(a.careab) & LINE_BREAK;
      end if;
      if( (a.careah /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREAH (Number of Adults looked after in diff BU) [careah] : " & Format(a.careah) & LINE_BREAK;
      end if;
      if( (a.carecb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECB (Number of Children looked after in BU) [carecb] : " & Format(a.carecb) & LINE_BREAK;
      end if;
      if( (a.carech /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECH (Number of Children looked after in diff BU) [carech] : " & Format(a.carech) & LINE_BREAK;
      end if;
      if( (a.carecl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECL (Whether Client of Vol Org looked after) [carecl] : " & Format(a.carecl) & LINE_BREAK;
      end if;
      if( (a.carefl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREFL (Whether adult is an informal carer) [carefl] : " & Format(a.carefl) & LINE_BREAK;
      end if;
      if( (a.carefr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREFR (Whether Friends looked after outside the HH) [carefr] : " & Format(a.carefr) & LINE_BREAK;
      end if;
      if( (a.careot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREOT (Whether Others outside HH looked after) [careot] : " & Format(a.careot) & LINE_BREAK;
      end if;
      if( (a.carere /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARERE (Number of Relatives looked after outside HH) [carere] : " & Format(a.carere) & LINE_BREAK;
      end if;
      if( (a.chbflg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHBFLG (Child Benefit eligibility) [chbflg] : " & Format(a.chbflg) & LINE_BREAK;
      end if;
      if( (a.curacti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CURACTI (Adult - Current accounts held) [curacti] : " & Format(a.curacti) & LINE_BREAK;
      end if;
      if( (a.currjobm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CURRJOBM (Months since started current job) [currjobm] : " & Format(a.currjobm) & LINE_BREAK;
      end if;
      if( (a.disdifad /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIFAD (Disability, publication definition) [disdifad] : " & Format(a.disdifad) & LINE_BREAK;
      end if;
      if( (a.empoccp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPOCCP (Amount of employee occupational pensions) [empoccp] : " & Format(a.empoccp) & LINE_BREAK;
      end if;
      if( (a.empstatb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPSTATB (Adult - Employment Status) [empstatb] : " & Format(a.empstatb) & LINE_BREAK;
      end if;
      if( (a.empstatc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPSTATC (Adult Employment status - HBAI equivalent) [empstatc] : " & Format(a.empstatc) & LINE_BREAK;
      end if;
      if( (a.empstati /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPSTATI (Adult - Employment Status - ILO definition) [empstati] : " & Format(a.empstati) & LINE_BREAK;
      end if;
      if( (a.ethgr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ETHGR2 (Ethnicity of an Adult (harmonised ver.)) [ethgr2] : " & Format(a.ethgr2) & LINE_BREAK;
      end if;
      if( (a.gebacti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GEBACTI (Adult - Guaranteed Equity Bonds held) [gebacti] : " & Format(a.gebacti) & LINE_BREAK;
      end if;
      if( (a.giltcti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GILTCTI (Adult - Gilts held) [giltcti] : " & Format(a.giltcti) & LINE_BREAK;
      end if;
      if( (a.gross3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3 (Grossing Factor) [gross3] : " & Format(a.gross3) & LINE_BREAK;
      end if;
      if( (a.hdage /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDAGE (Adult age) [hdage] : " & Format(a.hdage) & LINE_BREAK;
      end if;
      if( (a.hdben /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDBEN (Income related benefit / tax credit flag) [hdben] : " & Format(a.hdben) & LINE_BREAK;
      end if;
      if( (a.hdindinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDINDINC (Total banded hot deck income) [hdindinc] : " & Format(a.hdindinc) & LINE_BREAK;
      end if;
      if( (a.heartval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEARTVAL (Adult - Value of Healthy Start Voucher(s)) [heartval] : " & Format(a.heartval) & LINE_BREAK;
      end if;
      if( (a.hourab /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURAB (Hours looking after adults in same BU) [hourab] : " & Format(a.hourab) & LINE_BREAK;
      end if;
      if( (a.hourah /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURAH (Hours looking after adults different BU) [hourah] : " & Format(a.hourah) & LINE_BREAK;
      end if;
      if( (a.hourcare /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCARE (Hours of care received) [hourcare] : " & Format(a.hourcare) & LINE_BREAK;
      end if;
      if( (a.hourcb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCB (Hours looking after children in same BU) [hourcb] : " & Format(a.hourcb) & LINE_BREAK;
      end if;
      if( (a.hourch /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCH (Hours looking after children in diff BU) [hourch] : " & Format(a.hourch) & LINE_BREAK;
      end if;
      if( (a.hourcl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCL (Hours looking after client of Vol Org) [hourcl] : " & Format(a.hourcl) & LINE_BREAK;
      end if;
      if( (a.hourfr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURFR (Hours looking after friends outside HH) [hourfr] : " & Format(a.hourfr) & LINE_BREAK;
      end if;
      if( (a.hourot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUROT (Hours looking after others outside HH) [hourot] : " & Format(a.hourot) & LINE_BREAK;
      end if;
      if( (a.hourre /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURRE (Hours looking after relatives outside HH) [hourre] : " & Format(a.hourre) & LINE_BREAK;
      end if;
      if( (a.hourtot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURTOT (Total hours providing informal care) [hourtot] : " & Format(a.hourtot) & LINE_BREAK;
      end if;
      if( (a.hperson /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPERSON (Adult - Person number within Household) [hperson] : " & Format(a.hperson) & LINE_BREAK;
      end if;
      if( (a.iagegr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGR2 (Individual Adult 10 Year Age Bands - Pub.) [iagegr2] : " & Format(a.iagegr2) & LINE_BREAK;
      end if;
      if( (a.iagegr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGR3 (Individual Adult 10 Year Age Bands - Anon.) [iagegr3] : " & Format(a.iagegr3) & LINE_BREAK;
      end if;
      if( (a.iagegr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGR4 (Individual Adult 5 Year Age Bands - Anon.) [iagegr4] : " & Format(a.iagegr4) & LINE_BREAK;
      end if;
      if( (a.iagegrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGRP (Individual Adult 5 Year Age Bands - Pub.) [iagegrp] : " & Format(a.iagegrp) & LINE_BREAK;
      end if;
      if( (a.incseo2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCSEO2 (Adult - Gross Earnings from Self-Emp Opt 2) [incseo2] : " & Format(a.incseo2) & LINE_BREAK;
      end if;
      if( (a.indinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INDINC (Adult - Total Income) [indinc] : " & Format(a.indinc) & LINE_BREAK;
      end if;
      if( (a.indisben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INDISBEN (Adult - Disability benefits) [indisben] : " & Format(a.indisben) & LINE_BREAK;
      end if;
      if( (a.inearns /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INEARNS (Adult - Gross Income from Employment) [inearns] : " & Format(a.inearns) & LINE_BREAK;
      end if;
      if( (a.ininv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ININV (Adult - Investment income) [ininv] : " & Format(a.ininv) & LINE_BREAK;
      end if;
      if( (a.inirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INIRBEN (Income related benefit) [inirben] : " & Format(a.inirben) & LINE_BREAK;
      end if;
      if( (a.innirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INNIRBEN (Adult - non Income related benefits) [innirben] : " & Format(a.innirben) & LINE_BREAK;
      end if;
      if( (a.inothben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INOTHBEN (Adult - Other benefits) [inothben] : " & Format(a.inothben) & LINE_BREAK;
      end if;
      if( (a.inpeninc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INPENINC (Adult - Pension income) [inpeninc] : " & Format(a.inpeninc) & LINE_BREAK;
      end if;
      if( (a.inrinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INRINC (Adult - Remaining income) [inrinc] : " & Format(a.inrinc) & LINE_BREAK;
      end if;
      if( (a.inrpinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INRPINC (Adult - Retirement pension - plus any IS/MIG/PC) [inrpinc] : " & Format(a.inrpinc) & LINE_BREAK;
      end if;
      if( (a.intvlic /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTVLIC (Adult - Amount of Income from free TV licences) [intvlic] : " & Format(a.intvlic) & LINE_BREAK;
      end if;
      if( (a.intxcred /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTXCRED (Adult - Total Amount of Tax Credits Received) [intxcred] : " & Format(a.intxcred) & LINE_BREAK;
      end if;
      if( (a.isacti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISACTI (Adult - ISAs held) [isacti] : " & Format(a.isacti) & LINE_BREAK;
      end if;
      if( (a.marital /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MARITAL (Adult - Marital Status) [marital] : " & Format(a.marital) & LINE_BREAK;
      end if;
      if( (a.mjobsect /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MJOBSECT (Job sector for main job) [mjobsect] : " & Format(a.mjobsect) & LINE_BREAK;
      end if;
      if( (a.nincseo2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINCSEO2 (Adult - Net Earnings from Self-Emp Opt 2) [nincseo2] : " & Format(a.nincseo2) & LINE_BREAK;
      end if;
      if( (a.nindinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINDINC (Adult - Net Income) [nindinc] : " & Format(a.nindinc) & LINE_BREAK;
      end if;
      if( (a.ninearns /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINEARNS (Adult - Net Income from employment) [ninearns] : " & Format(a.ninearns) & LINE_BREAK;
      end if;
      if( (a.nininv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NININV (Adult - Net Investment income) [nininv] : " & Format(a.nininv) & LINE_BREAK;
      end if;
      if( (a.ninpenin /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINPENIN (Adult - Net Pension income) [ninpenin] : " & Format(a.ninpenin) & LINE_BREAK;
      end if;
      if( (a.ninsein2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINSEIN2 (Adult - Net Earn from Self-Emp Opt 2) [ninsein2] : " & Format(a.ninsein2) & LINE_BREAK;
      end if;
      if( (a.nirel2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIREL2 (Alternative Religious Denomination) [nirel2] : " & Format(a.nirel2) & LINE_BREAK;
      end if;
      if( (a.occupnum /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OCCUPNUM (Number of occupational pensions) [occupnum] : " & Format(a.occupnum) & LINE_BREAK;
      end if;
      if( (a.pepscti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PEPSCTI (Adult - PEPs held) [pepscti] : " & Format(a.pepscti) & LINE_BREAK;
      end if;
      if( (a.poaccti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POACCTI (Adult - No. of PO accounts held) [poaccti] : " & Format(a.poaccti) & LINE_BREAK;
      end if;
      if( (a.pocardi /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POCARDI (Adult - Post Office Card Account) [pocardi] : " & Format(a.pocardi) & LINE_BREAK;
      end if;
      if( (a.prevjobm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PREVJOBM (Months from started previous job to start of current job) [prevjobm] : " & Format(a.prevjobm) & LINE_BREAK;
      end if;
      if( (a.relhrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RELHRP (Adults relationship to HRP) [relhrp] : " & Format(a.relhrp) & LINE_BREAK;
      end if;
      if( (a.sapadj /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAPADJ (SAP amount) [sapadj] : " & Format(a.sapadj) & LINE_BREAK;
      end if;
      if( (a.seincam2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEINCAM2 (Adult - Gross Earn from Self-Emp Opt 2) [seincam2] : " & Format(a.seincam2) & LINE_BREAK;
      end if;
      if( (a.smpadj /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SMPADJ (SMP amount) [smpadj] : " & Format(a.smpadj) & LINE_BREAK;
      end if;
      if( (a.sppadj /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPPADJ (SPP amount) [sppadj] : " & Format(a.sppadj) & LINE_BREAK;
      end if;
      if( (a.sspadj /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSPADJ (SSP amount) [sspadj] : " & Format(a.sspadj) & LINE_BREAK;
      end if;
      if( (a.stshcti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STSHCTI (Adult - Stocks and shares held) [stshcti] : " & Format(a.stshcti) & LINE_BREAK;
      end if;
      if( (a.taxpayer /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXPAYER (Whether or not should pay tax) [taxpayer] : " & Format(a.taxpayer) & LINE_BREAK;
      end if;
      if( (a.tesscti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TESSCTI (Adult - TESSAs held) [tesscti] : " & Format(a.tesscti) & LINE_BREAK;
      end if;
      if( (a.totgrant /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTGRANT (Adult - Total grant received for FE) [totgrant] : " & Format(a.totgrant) & LINE_BREAK;
      end if;
      if( (a.tothours /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTHOURS (Total hours worked - All Jobs) [tothours] : " & Format(a.tothours) & LINE_BREAK;
      end if;
      if( (a.totoccp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTOCCP (Total of all occupational pensions) [totoccp] : " & Format(a.totoccp) & LINE_BREAK;
      end if;
      if( (a.untrcti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNTRCTI (Adult - Unit trusts held) [untrcti] : " & Format(a.untrcti) & LINE_BREAK;
      end if;
      if( (a.uperson /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UPERSON (Adult - Person number within benefit unit) [uperson] : " & Format(a.uperson) & LINE_BREAK;
      end if;
      if( (a.widoccp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WIDOCCP (Amount of widows employee pensions) [widoccp] : " & Format(a.widoccp) & LINE_BREAK;
      end if;
      if( (a.xbonflag /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "XBONFLAG (Adult - Christmas Bonus eligibility) [xbonflag] : " & Format(a.xbonflag) & LINE_BREAK;
      end if;
      if( (a.ben5q8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q8 (Rcpt last 6m: Return to work credit) [ben5q8] : " & Format(a.ben5q8) & LINE_BREAK;
      end if;
      if( (a.ben5q9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEN5Q9 (Rcpt last 6m: any other NI/State benefit) [ben5q9] : " & Format(a.ben5q9) & LINE_BREAK;
      end if;
      if( (a.ed1int /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1INT (Whether the 1st loan carries interest) [ed1int] : " & Format(a.ed1int) & LINE_BREAK;
      end if;
      if( (a.ed1monyr /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED1MONYR (Date took out 1st loan) [ed1monyr] : " & Format(a.ed1monyr) & LINE_BREAK;
      end if;
      if( (a.ed2int /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2INT (Whether the 2nd loan carries interest) [ed2int] : " & Format(a.ed2int) & LINE_BREAK;
      end if;
      if( (a.ed2monyr /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ED2MONYR (Date took out second loan) [ed2monyr] : " & Format(a.ed2monyr) & LINE_BREAK;
      end if;
      if( (a.edtime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDTIME (Hours of study: daytime/evenings) [edtime] : " & Format(a.edtime) & LINE_BREAK;
      end if;
      if( (a.endyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDYR (End year of course) [endyr] : " & Format(a.endyr) & LINE_BREAK;
      end if;
      if( (a.ln1rpint /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LN1RPINT (1st loan repayment incl interest/capital) [ln1rpint] : " & Format(a.ln1rpint) & LINE_BREAK;
      end if;
      if( (a.ln2rpint /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LN2RPINT (2nd loan repayment incl interest/capital) [ln2rpint] : " & Format(a.ln2rpint) & LINE_BREAK;
      end if;
      if( (a.ntcdat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCDAT (Income year for NTC award) [ntcdat] : " & Format(a.ntcdat) & LINE_BREAK;
      end if;
      if( (a.ntcinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCINC (Total income for NTC award) [ntcinc] : " & Format(a.ntcinc) & LINE_BREAK;
      end if;
      if( (a.startyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STARTYR (In which year did this course start) [startyr] : " & Format(a.startyr) & LINE_BREAK;
      end if;
      if( (a.wmkit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WMKIT (Pints welfare milk received in last week) [wmkit] : " & Format(a.wmkit) & LINE_BREAK;
      end if;
      if( (a.gross3_x /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3_X (Grossing Factor - Old Version) [gross3_x] : " & Format(a.gross3_x) & LINE_BREAK;
      end if;
      if( (a.dvpens /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVPENS (Pension provison routing variable) [dvpens] : " & Format(a.dvpens) & LINE_BREAK;
      end if;
      if( (a.hbolng /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOLNG (Time been on Housing Benefit or Rent [rebate/Allowance]) [hbolng] : " & Format(a.hbolng) & LINE_BREAK;
      end if;
      if( (a.hbothamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHAMT (Amount of Housing Benefit/rent rebate/rent or rates rebate) [hbothamt] : " & Format(a.hbothamt) & LINE_BREAK;
      end if;
      if( (a.hbothbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHBU (Whether qualifies for HB (2nd+ BU)) [hbothbu] : " & Format(a.hbothbu) & LINE_BREAK;
      end if;
      if( (a.hbothpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHPD (Pcode : Housing Benefit) [hbothpd] : " & Format(a.hbothpd) & LINE_BREAK;
      end if;
      if( (a.hbothwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHWK (Number of weeks claimed Housing Benefit) [hbothwk] : " & Format(a.hbothwk) & LINE_BREAK;
      end if;
      if( (a.hbotwait /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTWAIT (Awaiting outcome of Housing Benft claim) [hbotwait] : " & Format(a.hbotwait) & LINE_BREAK;
      end if;
      if( (a.hlpgvn01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN01 (Help given: buying or bringing food or meals) [hlpgvn01] : " & Format(a.hlpgvn01) & LINE_BREAK;
      end if;
      if( (a.hlpgvn02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN02 (Help given: paying towards bills) [hlpgvn02] : " & Format(a.hlpgvn02) & LINE_BREAK;
      end if;
      if( (a.hlpgvn03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN03 (Help given: manage money or deal with benefits) [hlpgvn03] : " & Format(a.hlpgvn03) & LINE_BREAK;
      end if;
      if( (a.hlpgvn04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN04 (Help given: home repairs or decoration by paying or doing it) [hlpgvn04] : " & Format(a.hlpgvn04) & LINE_BREAK;
      end if;
      if( (a.hlpgvn05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN05 (Help given: household chores) [hlpgvn05] : " & Format(a.hlpgvn05) & LINE_BREAK;
      end if;
      if( (a.hlpgvn06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN06 (Help given: giving lifts or paying for travel costs) [hlpgvn06] : " & Format(a.hlpgvn06) & LINE_BREAK;
      end if;
      if( (a.hlpgvn07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN07 (Help given: paying for trips/holidays) [hlpgvn07] : " & Format(a.hlpgvn07) & LINE_BREAK;
      end if;
      if( (a.hlpgvn08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN08 (Help given: buying or giving clothes) [hlpgvn08] : " & Format(a.hlpgvn08) & LINE_BREAK;
      end if;
      if( (a.hlpgvn09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN09 (Help given: buying clothes/toys/other equipment for children) [hlpgvn09] : " & Format(a.hlpgvn09) & LINE_BREAK;
      end if;
      if( (a.hlpgvn10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN10 (Help given: buying a big electrical item) [hlpgvn10] : " & Format(a.hlpgvn10) & LINE_BREAK;
      end if;
      if( (a.hlpgvn11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPGVN11 (Help given: other help received) [hlpgvn11] : " & Format(a.hlpgvn11) & LINE_BREAK;
      end if;
      if( (a.hlprec01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC01 (Help received: buying or bringing food or meals) [hlprec01] : " & Format(a.hlprec01) & LINE_BREAK;
      end if;
      if( (a.hlprec02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC02 (Help received: paying towards bills) [hlprec02] : " & Format(a.hlprec02) & LINE_BREAK;
      end if;
      if( (a.hlprec03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC03 (Help received: manage money or deal with benefits) [hlprec03] : " & Format(a.hlprec03) & LINE_BREAK;
      end if;
      if( (a.hlprec04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC04 (Help received: home repairs or decoration by paying or doing) [hlprec04] : " & Format(a.hlprec04) & LINE_BREAK;
      end if;
      if( (a.hlprec05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC05 (Help received: household chores) [hlprec05] : " & Format(a.hlprec05) & LINE_BREAK;
      end if;
      if( (a.hlprec06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC06 (Help received: giving lifts or paying for travel costs) [hlprec06] : " & Format(a.hlprec06) & LINE_BREAK;
      end if;
      if( (a.hlprec07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC07 (Help received: paying for trips/holidays) [hlprec07] : " & Format(a.hlprec07) & LINE_BREAK;
      end if;
      if( (a.hlprec08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC08 (Help received: buying or giving clothes) [hlprec08] : " & Format(a.hlprec08) & LINE_BREAK;
      end if;
      if( (a.hlprec09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC09 (Help received: buying clothes/toys/other equipment for child) [hlprec09] : " & Format(a.hlprec09) & LINE_BREAK;
      end if;
      if( (a.hlprec10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC10 (Help received: buying a big electrical item) [hlprec10] : " & Format(a.hlprec10) & LINE_BREAK;
      end if;
      if( (a.hlprec11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLPREC11 (Help received: other help received) [hlprec11] : " & Format(a.hlprec11) & LINE_BREAK;
      end if;
      if( (a.lnkref1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF1 (Concerns about security of their personal details) [lnkref1] : " & Format(a.lnkref1) & LINE_BREAK;
      end if;
      if( (a.lnkref2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF2 (Concerns about privacy) [lnkref2] : " & Format(a.lnkref2) & LINE_BREAK;
      end if;
      if( (a.lnkref3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF3 (Anti-government) [lnkref3] : " & Format(a.lnkref3) & LINE_BREAK;
      end if;
      if( (a.lnkref4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF4 (Too much information being requested) [lnkref4] : " & Format(a.lnkref4) & LINE_BREAK;
      end if;
      if( (a.lnkref5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF5 (Didn't understand data linkage request) [lnkref5] : " & Format(a.lnkref5) & LINE_BREAK;
      end if;
      if( (a.lnkref6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF6 (Can't be bothered) [lnkref6] : " & Format(a.lnkref6) & LINE_BREAK;
      end if;
      if( (a.lnkref7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF7 (Will result in unwanted further contact) [lnkref7] : " & Format(a.lnkref7) & LINE_BREAK;
      end if;
      if( (a.lnkref8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF8 (Influenced by other household member) [lnkref8] : " & Format(a.lnkref8) & LINE_BREAK;
      end if;
      if( (a.lnkref9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF9 (Other reason given) [lnkref9] : " & Format(a.lnkref9) & LINE_BREAK;
      end if;
      if( (a.loangvn1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN1 (Given or lent money regularly to family/friends in last 12m.) [loangvn1] : " & Format(a.loangvn1) & LINE_BREAK;
      end if;
      if( (a.loangvn2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN2 (Given or lent money sometimes to family/friends in last 12m.) [loangvn2] : " & Format(a.loangvn2) & LINE_BREAK;
      end if;
      if( (a.loangvn3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN3 (Given or lent money to family/friends in last 12m.) [loangvn3] : " & Format(a.loangvn3) & LINE_BREAK;
      end if;
      if( (a.loanrec1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC1 (Given or lent money regularly by family/friends in last 12m.) [loanrec1] : " & Format(a.loanrec1) & LINE_BREAK;
      end if;
      if( (a.loanrec2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC2 (Given or lent money sometimes by family/friends in last 12m.) [loanrec2] : " & Format(a.loanrec2) & LINE_BREAK;
      end if;
      if( (a.loanrec3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC3 (Given or lent money by family/friends in last 12m.) [loanrec3] : " & Format(a.loanrec3) & LINE_BREAK;
      end if;
      if( (a.crunaci /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CRUNACI (Adult - Credit Union held) [crunaci] : " & Format(a.crunaci) & LINE_BREAK;
      end if;
      if( (a.enomorti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENOMORTI (Adult - Endowment not linked to a mortgage held) [enomorti] : " & Format(a.enomorti) & LINE_BREAK;
      end if;
      if( (a.fsbndcti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSBNDCTI (Adult - Fixed Rate Bonds held) [fsbndcti] : " & Format(a.fsbndcti) & LINE_BREAK;
      end if;
      if( (a.nsbocti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NSBOCTI (Adult - No. of National savings held) [nsbocti] : " & Format(a.nsbocti) & LINE_BREAK;
      end if;
      if( (a.otbscti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTBSCTI (Adult - Other building Soc held) [otbscti] : " & Format(a.otbscti) & LINE_BREAK;
      end if;
      if( (a.prbocti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRBOCTI (Adult - Premium bonds held) [prbocti] : " & Format(a.prbocti) & LINE_BREAK;
      end if;
      if( (a.sayecti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAYECTI (Adult - Save as you earn held) [sayecti] : " & Format(a.sayecti) & LINE_BREAK;
      end if;
      if( (a.sclbcti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCLBCTI (Adult - Member of Share Club) [sclbcti] : " & Format(a.sclbcti) & LINE_BREAK;
      end if;
      if( (a.sscti /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSCTI (Adult - No. of Participation in Company Share Schemes) [sscti] : " & Format(a.sscti) & LINE_BREAK;
      end if;
      if( (a.consent /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONSENT (Whether consented to data linking) [consent] : " & Format(a.consent) & LINE_BREAK;
      end if;
      if( (a.edattn1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDATTN1 (Certificate for any educ. qualifications) [edattn1] : " & Format(a.edattn1) & LINE_BREAK;
      end if;
      if( (a.edattn2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDATTN2 (Cert. for professional, vocational etc.) [edattn2] : " & Format(a.edattn2) & LINE_BREAK;
      end if;
      if( (a.edattn3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EDATTN3 (Highest qualification) [edattn3] : " & Format(a.edattn3) & LINE_BREAK;
      end if;
      if( (a.lnkons /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKONS (Whether consented to ONS data linking) [lnkons] : " & Format(a.lnkons) & LINE_BREAK;
      end if;
      if( (a.mntct /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTCT (Court order against a previous partner) [mntct] : " & Format(a.mntct) & LINE_BREAK;
      end if;
      if( (a.mntfor1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTFOR1 (Self:  Who are the payments for) [mntfor1] : " & Format(a.mntfor1) & LINE_BREAK;
      end if;
      if( (a.mntfor2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTFOR2 (CSA: Who are the payments for) [mntfor2] : " & Format(a.mntfor2) & LINE_BREAK;
      end if;
      if( (a.mnttota1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTTOTA1 (Maint to self: Different than expected) [mnttota1] : " & Format(a.mnttota1) & LINE_BREAK;
      end if;
      if( (a.mnttota2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTTOTA2 (Maint via DWP: Different than expected) [mnttota2] : " & Format(a.mnttota2) & LINE_BREAK;
      end if;
      if( (a.pconsent /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PCONSENT (Whether respondent has returned signed proxy consent form) [pconsent] : " & Format(a.pconsent) & LINE_BREAK;
      end if;
      if( (a.wtclum3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WTCLUM3 (In receipt: Regular payments via bank, PO or giro) [wtclum3] : " & Format(a.wtclum3) & LINE_BREAK;
      end if;
      if( (a.bntxcred /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BNTXCRED (Adult - Amount of Tax Credits Received as Benefit) [bntxcred] : " & Format(a.bntxcred) & LINE_BREAK;
      end if;
      if( (a.fwmlkval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FWMLKVAL (Adult - Value of Free welfare milk) [fwmlkval] : " & Format(a.fwmlkval) & LINE_BREAK;
      end if;
      if( (a.fare /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FARE (Cost of journey (where no pass)) [fare] : " & Format(a.fare) & LINE_BREAK;
      end if;
      if( (a.lnkref21 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF21 (Request for nino too intrusive) [lnkref21] : " & Format(a.lnkref21) & LINE_BREAK;
      end if;
      if( (a.lnkref22 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF22 (Didn't understand the question) [lnkref22] : " & Format(a.lnkref22) & LINE_BREAK;
      end if;
      if( (a.lnkref23 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF23 (Can't be bothered) [lnkref23] : " & Format(a.lnkref23) & LINE_BREAK;
      end if;
      if( (a.lnkref24 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF24 (Will result in unwanted contact) [lnkref24] : " & Format(a.lnkref24) & LINE_BREAK;
      end if;
      if( (a.lnkref25 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LNKREF25 (Other reason) [lnkref25] : " & Format(a.lnkref25) & LINE_BREAK;
      end if;
      if( (a.nittwmod /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NITTWMOD (Usual method of travel to work) [nittwmod] : " & Format(a.nittwmod) & LINE_BREAK;
      end if;
      if( (a.oneway /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ONEWAY (Whether one-way or return fare) [oneway] : " & Format(a.oneway) & LINE_BREAK;
      end if;
      if( (a.pssamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PSSAMT (Cost of season ticket/travel pass) [pssamt] : " & Format(a.pssamt) & LINE_BREAK;
      end if;
      if( (a.pssdate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PSSDATE (Season ticket/travel pass - length valid) [pssdate] : " & Format(a.pssdate) & LINE_BREAK;
      end if;
      if( (a.ttwcode1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWCODE1 (Respondent is passenger and contributes) [ttwcode1] : " & Format(a.ttwcode1) & LINE_BREAK;
      end if;
      if( (a.ttwcode2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWCODE2 (Respondent is driver and receives money) [ttwcode2] : " & Format(a.ttwcode2) & LINE_BREAK;
      end if;
      if( (a.ttwcode3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWCODE3 (Some other arrangement(neither of above)) [ttwcode3] : " & Format(a.ttwcode3) & LINE_BREAK;
      end if;
      if( (a.ttwcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWCOST (Cost of weekly travel to work) [ttwcost] : " & Format(a.ttwcost) & LINE_BREAK;
      end if;
      if( (a.ttwfar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWFAR (Distance travelled to work) [ttwfar] : " & Format(a.ttwfar) & LINE_BREAK;
      end if;
      if( (a.ttwfrq /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWFRQ (Frequency of journey to work) [ttwfrq] : " & Format(a.ttwfrq) & LINE_BREAK;
      end if;
      if( (a.ttwmod /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWMOD (Usual method of travel to work) [ttwmod] : " & Format(a.ttwmod) & LINE_BREAK;
      end if;
      if( (a.ttwpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWPAY (Whether pays all/some of travel costs) [ttwpay] : " & Format(a.ttwpay) & LINE_BREAK;
      end if;
      if( (a.ttwpss /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWPSS (Whether has season ticket/travelcard) [ttwpss] : " & Format(a.ttwpss) & LINE_BREAK;
      end if;
      if( (a.ttwrec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWREC (Travel costs: passengers' contributions) [ttwrec] : " & Format(a.ttwrec) & LINE_BREAK;
      end if;
      if( (a.btwacc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BTWACC (Whether accruing BTWB) [btwacc] : " & Format(a.btwacc) & LINE_BREAK;
      end if;
      if( (a.dentist /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DENTIST (Last 4 weeks: whether visited NHS dentist) [dentist] : " & Format(a.dentist) & LINE_BREAK;
      end if;
      if( (a.emppay1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPPAY1 (Whether contributing to pers/private pen) [emppay1] : " & Format(a.emppay1) & LINE_BREAK;
      end if;
      if( (a.emppay2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPPAY2 (Whether contributing to company/occ pen) [emppay2] : " & Format(a.emppay2) & LINE_BREAK;
      end if;
      if( (a.emppay3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPPAY3 (Whether contributing to stakeholder pen) [emppay3] : " & Format(a.emppay3) & LINE_BREAK;
      end if;
      if( (a.epcur /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EPCUR (Whether employer runs pension scheme) [epcur] : " & Format(a.epcur) & LINE_BREAK;
      end if;
      if( (a.eyetest /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EYETEST (Last 4 wks: whether had eye test) [eyetest] : " & Format(a.eyetest) & LINE_BREAK;
      end if;
      if( (a.hosp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOSP (Last 4 weeks: whether been to NHS hospital) [hosp] : " & Format(a.hosp) & LINE_BREAK;
      end if;
      if( (a.nhs1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS1 (Whether prscrptns free) [nhs1] : " & Format(a.nhs1) & LINE_BREAK;
      end if;
      if( (a.nhs2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS2 (Whether free dental treatment) [nhs2] : " & Format(a.nhs2) & LINE_BREAK;
      end if;
      if( (a.nhs3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS3 (Whether free eyetest) [nhs3] : " & Format(a.nhs3) & LINE_BREAK;
      end if;
      if( (a.prit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRIT (Number of free prscrptns) [prit] : " & Format(a.prit) & LINE_BREAK;
      end if;
      if( (a.prscrpt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRSCRPT (Last 4 weeks: whether NHS prscrptns) [prscrpt] : " & Format(a.prscrpt) & LINE_BREAK;
      end if;
      if( (a.specs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPECS (Last 4 wks: whether bought specs/lenses) [specs] : " & Format(a.specs) & LINE_BREAK;
      end if;
      if( (a.trav /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRAV (Whether money back at hosp. for travel) [trav] : " & Format(a.trav) & LINE_BREAK;
      end if;
      if( (a.voucher /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VOUCHER (NHS Voucher for Glasses/Contact Lenses) [voucher] : " & Format(a.voucher) & LINE_BREAK;
      end if;
      if( (a.whyfrde1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE1 (Free dentist because of a benefit) [whyfrde1] : " & Format(a.whyfrde1) & LINE_BREAK;
      end if;
      if( (a.whyfrde2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE2 (Free dentist because of cert HC2) [whyfrde2] : " & Format(a.whyfrde2) & LINE_BREAK;
      end if;
      if( (a.whyfrde3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE3 (Free dentist because of medical) [whyfrde3] : " & Format(a.whyfrde3) & LINE_BREAK;
      end if;
      if( (a.whyfrde4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE4 (Free dentist because require lens) [whyfrde4] : " & Format(a.whyfrde4) & LINE_BREAK;
      end if;
      if( (a.whyfrde5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE5 (Free dentist because pregnant) [whyfrde5] : " & Format(a.whyfrde5) & LINE_BREAK;
      end if;
      if( (a.whyfrde6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRDE6 (Free dentist because other reason) [whyfrde6] : " & Format(a.whyfrde6) & LINE_BREAK;
      end if;
      if( (a.whyfrey1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY1 (Free eyetest because of a benefit) [whyfrey1] : " & Format(a.whyfrey1) & LINE_BREAK;
      end if;
      if( (a.whyfrey2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY2 (Free eyetest because of cert HC2) [whyfrey2] : " & Format(a.whyfrey2) & LINE_BREAK;
      end if;
      if( (a.whyfrey3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY3 (Free eyetest because of medical) [whyfrey3] : " & Format(a.whyfrey3) & LINE_BREAK;
      end if;
      if( (a.whyfrey4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY4 (Free eyetest because require lens) [whyfrey4] : " & Format(a.whyfrey4) & LINE_BREAK;
      end if;
      if( (a.whyfrey5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY5 (Free eyetest because pregnant) [whyfrey5] : " & Format(a.whyfrey5) & LINE_BREAK;
      end if;
      if( (a.whyfrey6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFREY6 (Free eyetest because other reason) [whyfrey6] : " & Format(a.whyfrey6) & LINE_BREAK;
      end if;
      if( (a.whyfrpr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR1 (Free prscrptn because of a benefit) [whyfrpr1] : " & Format(a.whyfrpr1) & LINE_BREAK;
      end if;
      if( (a.whyfrpr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR2 (Free prscrptn because of cert HC2) [whyfrpr2] : " & Format(a.whyfrpr2) & LINE_BREAK;
      end if;
      if( (a.whyfrpr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR3 (Free prscrptn because of medical) [whyfrpr3] : " & Format(a.whyfrpr3) & LINE_BREAK;
      end if;
      if( (a.whyfrpr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR4 (Free prscrptn because require lens) [whyfrpr4] : " & Format(a.whyfrpr4) & LINE_BREAK;
      end if;
      if( (a.whyfrpr5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR5 (Free prscrptn because pregnant) [whyfrpr5] : " & Format(a.whyfrpr5) & LINE_BREAK;
      end if;
      if( (a.whyfrpr6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYFRPR6 (Free prscrptn because other reason) [whyfrpr6] : " & Format(a.whyfrpr6) & LINE_BREAK;
      end if;
      if( (a.whytrav1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV1 (Travel refund because of a benefit) [whytrav1] : " & Format(a.whytrav1) & LINE_BREAK;
      end if;
      if( (a.whytrav2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV2 (Travel refund because of cert HC2) [whytrav2] : " & Format(a.whytrav2) & LINE_BREAK;
      end if;
      if( (a.whytrav3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV3 (Travel refund because of medical) [whytrav3] : " & Format(a.whytrav3) & LINE_BREAK;
      end if;
      if( (a.whytrav4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV4 (Travel refund because of complex lens) [whytrav4] : " & Format(a.whytrav4) & LINE_BREAK;
      end if;
      if( (a.whytrav5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV5 (Travel refund because pregnant) [whytrav5] : " & Format(a.whytrav5) & LINE_BREAK;
      end if;
      if( (a.whytrav6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV6 (Travel refund because of other reason) [whytrav6] : " & Format(a.whytrav6) & LINE_BREAK;
      end if;
      if( (a.ttwcosts /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWCOSTS (Weekly travel to work costs) [ttwcosts] : " & Format(a.ttwcosts) & LINE_BREAK;
      end if;
      if( (a.follow /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FOLLOW (Whether agree to other org. follow-up) [follow] : " & Format(a.follow) & LINE_BREAK;
      end if;
      if( (a.future /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUTURE (May we contact you in the future) [future] : " & Format(a.future) & LINE_BREAK;
      end if;
      if( (a.isa3type /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISA3TYPE (Whether Life insurance in an ISA) [isa3type] : " & Format(a.isa3type) & LINE_BREAK;
      end if;
      if( (a.hbsupran /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBSUPRAN (Total superannuation/pension deductions) [hbsupran] : " & Format(a.hbsupran) & LINE_BREAK;
      end if;
      if( (a.netocpen /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NETOCPEN (Pension income NET of tax) [netocpen] : " & Format(a.netocpen) & LINE_BREAK;
      end if;
      if( (a.superan /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUPERAN (Total superannuation-pension cont.) [superan] : " & Format(a.superan) & LINE_BREAK;
      end if;
      if( (a.ttwmode /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTWMODE (Mode of travel to work - Pub.) [ttwmode] : " & Format(a.ttwmode) & LINE_BREAK;
      end if;
      if( (a.dptcboth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DPTCBOTH (Most recent payment method for DPTC) [dptcboth] : " & Format(a.dptcboth) & LINE_BREAK;
      end if;
      if( (a.dptclum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DPTCLUM (In receipt: DPTC lump sum) [dptclum] : " & Format(a.dptclum) & LINE_BREAK;
      end if;
      if( (a.ntcapp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCAPP (Estimate of income provided for 2003-04) [ntcapp] : " & Format(a.ntcapp) & LINE_BREAK;
      end if;
      if( (a.ntcorig1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCORIG1 (Previously in receipt: Working Families Tax Credit) [ntcorig1] : " & Format(a.ntcorig1) & LINE_BREAK;
      end if;
      if( (a.ntcorig2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCORIG2 (Previously in receipt: Disabled Person's Tax Credit) [ntcorig2] : " & Format(a.ntcorig2) & LINE_BREAK;
      end if;
      if( (a.ntcorig3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCORIG3 (Previously in receipt: Children's tax credit (via PAYE)) [ntcorig3] : " & Format(a.ntcorig3) & LINE_BREAK;
      end if;
      if( (a.ntcorig4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCORIG4 (Previously in receipt: Income Support) [ntcorig4] : " & Format(a.ntcorig4) & LINE_BREAK;
      end if;
      if( (a.ntcorig5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NTCORIG5 (Previously in receipt: Job Seekers Allowance (Income Based)) [ntcorig5] : " & Format(a.ntcorig5) & LINE_BREAK;
      end if;
      if( (a.taxcred3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXCRED3 (In receipt:Children's Tax Credit (April only)) [taxcred3] : " & Format(a.taxcred3) & LINE_BREAK;
      end if;
      if( (a.taxcred4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXCRED4 (In receipt:Working Tax Credit) [taxcred4] : " & Format(a.taxcred4) & LINE_BREAK;
      end if;
      if( (a.taxcred5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXCRED5 (In receipt:Child Tax Credit) [taxcred5] : " & Format(a.taxcred5) & LINE_BREAK;
      end if;
      if( (a.wftcboth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WFTCBOTH (Most recent payment method for WFTC) [wftcboth] : " & Format(a.wftcboth) & LINE_BREAK;
      end if;
      if( (a.wftclum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WFTCLUM (In receipt: WFTC lump sum) [wftclum] : " & Format(a.wftclum) & LINE_BREAK;
      end if;
      if( (a.gross2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS2 (Grossing Factor (December 2002)) [gross2] : " & Format(a.gross2) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Asset_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Asset";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.assetype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ASSETYPE (Asset Type) [assetype] : " & Format(a.assetype) & LINE_BREAK;
      end if;
      if( (a.seq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEQ (Seq) [seq] : " & Format(a.seq) & LINE_BREAK;
      end if;
      if( (a.accname /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCNAME (Account type) [accname] : " & Format(a.accname) & LINE_BREAK;
      end if;
      if( (a.amount /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AMOUNT (SAYE: Amount regularly paid) [amount] : " & Format(a.amount) & LINE_BREAK;
      end if;
      if( (a.anymon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANYMON (For program/admin use) [anymon] : " & Format(a.anymon) & LINE_BREAK;
      end if;
      if( (a.howmany /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWMANY (Number of shares/bonds/units held) [howmany] : " & Format(a.howmany) & LINE_BREAK;
      end if;
      if( (a.howmuch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWMUCH (Value of asset (respondent's estimate)) [howmuch] : " & Format(a.howmuch) & LINE_BREAK;
      end if;
      if( (a.howmuche /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWMUCHE (Value of asset (office edit)) [howmuche] : " & Format(a.howmuche) & LINE_BREAK;
      end if;
      if( (a.intro /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTRO (For program/admin use) [intro] : " & Format(a.intro) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.issval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSVAL (Value of NSC) [issval] : " & Format(a.issval) & LINE_BREAK;
      end if;
      if( (a.pd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PD (Pcode: SAYE: amount regularly paid) [pd] : " & Format(a.pd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.issdate /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSDATE (Date NSC issued) [issdate] : " & Format(a.issdate) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Benefit_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Benefit";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.benefit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENEFIT (Benefit Type) [benefit] : " & Format(a.benefit) & LINE_BREAK;
      end if;
      if( (a.bankstmt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BANKSTMT (Whether bank statement consulted) [bankstmt] : " & Format(a.bankstmt) & LINE_BREAK;
      end if;
      if( (a.benamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENAMT (Amount of benefit received last time) [benamt] : " & Format(a.benamt) & LINE_BREAK;
      end if;
      if( (a.benamtdk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENAMTDK (Are amounts DK as they are combined) [benamtdk] : " & Format(a.benamtdk) & LINE_BREAK;
      end if;
      if( (a.benlettr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENLETTR (Whether benefit letter consulted) [benlettr] : " & Format(a.benlettr) & LINE_BREAK;
      end if;
      if( (a.benpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENPD (Pcode: amt benefit received last time) [benpd] : " & Format(a.benpd) & LINE_BREAK;
      end if;
      if( (a.cctc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CCTC (Whether child care element included) [cctc] : " & Format(a.cctc) & LINE_BREAK;
      end if;
      if( (a.combamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COMBAMT (Total amount of combined benefits) [combamt] : " & Format(a.combamt) & LINE_BREAK;
      end if;
      if( (a.combpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COMBPD (PCode : Combined benefits) [combpd] : " & Format(a.combpd) & LINE_BREAK;
      end if;
      if( (a.howben /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWBEN (How benefit is paid (direct payment etc)) [howben] : " & Format(a.howben) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.notusamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOTUSAMT (Amount of benefit usually received) [notusamt] : " & Format(a.notusamt) & LINE_BREAK;
      end if;
      if( (a.notuspd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOTUSPD (Pcode: amt of benefit usually received) [notuspd] : " & Format(a.notuspd) & LINE_BREAK;
      end if;
      if( (a.numweeks /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMWEEKS (Number of weeks in receipt) [numweeks] : " & Format(a.numweeks) & LINE_BREAK;
      end if;
      if( (a.numyears /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMYEARS (Number of years in receipt) [numyears] : " & Format(a.numyears) & LINE_BREAK;
      end if;
      if( (a.pres /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRES (Whether receiving benefit at present) [pres] : " & Format(a.pres) & LINE_BREAK;
      end if;
      if( (a.usual /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USUAL (Whether it is amount usually get) [usual] : " & Format(a.usual) & LINE_BREAK;
      end if;
      if( (a.var1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VAR1 (Multi-purpose variable No1) [var1] : " & Format(a.var1) & LINE_BREAK;
      end if;
      if( (a.var2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VAR2 (Multi-purpose variable No2) [var2] : " & Format(a.var2) & LINE_BREAK;
      end if;
      if( (a.var3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VAR3 (Multi-purpose variable No3) [var3] : " & Format(a.var3) & LINE_BREAK;
      end if;
      if( (a.whorec1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOREC1 (Person benefit received for) [whorec1] : " & Format(a.whorec1) & LINE_BREAK;
      end if;
      if( (a.whorec2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOREC2 (Person benefit received for) [whorec2] : " & Format(a.whorec2) & LINE_BREAK;
      end if;
      if( (a.whorec3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOREC3 (Person benefit received for) [whorec3] : " & Format(a.whorec3) & LINE_BREAK;
      end if;
      if( (a.whorec4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOREC4 (Person benefit received for) [whorec4] : " & Format(a.whorec4) & LINE_BREAK;
      end if;
      if( (a.whorec5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOREC5 (Person benefit received for) [whorec5] : " & Format(a.whorec5) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.ttbprx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TTBPRX (Estimate of weekly amount in benefits and tax credit) [ttbprx] : " & Format(a.ttbprx) & LINE_BREAK;
      end if;
      if( (a.bookcard /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BOOKCARD (Book/Card to hand) [bookcard] : " & Format(a.bookcard) & LINE_BREAK;
      end if;
      if( (a.combbk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COMBBK (Whether other benefits paid using book) [combbk] : " & Format(a.combbk) & LINE_BREAK;
      end if;
      if( (a.ordbkno /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ORDBKNO (Order book number) [ordbkno] : " & Format(a.ordbkno) & LINE_BREAK;
      end if;
      if( (a.payslipb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYSLIPB (Whether payslip consulted) [payslipb] : " & Format(a.payslipb) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Benunit_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Benunit";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.adbtbl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADBTBL (Keep up with bills and regular debt repayments) [adbtbl] : " & Format(a.adbtbl) & LINE_BREAK;
      end if;
      if( (a.adddec /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDDEC (enough money to keep your home in a decent state of décor) [adddec] : " & Format(a.adddec) & LINE_BREAK;
      end if;
      if( (a.addeples /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDEPLES (hobby or leisure activity) [addeples] : " & Format(a.addeples) & LINE_BREAK;
      end if;
      if( (a.addhol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDHOL (hols. away from home one week a year+ not staying with rels.) [addhol] : " & Format(a.addhol) & LINE_BREAK;
      end if;
      if( (a.addins /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDINS (household contents insurance) [addins] : " & Format(a.addins) & LINE_BREAK;
      end if;
      if( (a.addmel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDMEL (friends/family round for drink or meal at least once a month) [addmel] : " & Format(a.addmel) & LINE_BREAK;
      end if;
      if( (a.addmon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDMON (make savings of £10 a month or more) [addmon] : " & Format(a.addmon) & LINE_BREAK;
      end if;
      if( (a.addshoe /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDSHOE (two pairs of all weather shoes for each adult in household) [addshoe] : " & Format(a.addshoe) & LINE_BREAK;
      end if;
      if( (a.adepfur /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEPFUR (replace any worn out furniture) [adepfur] : " & Format(a.adepfur) & LINE_BREAK;
      end if;
      if( (a.af1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AF1 (replace or repair broken electrical goods) [af1] : " & Format(a.af1) & LINE_BREAK;
      end if;
      if( (a.afdep2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AFDEP2 (money to spend each week on yourself, not on your family) [afdep2] : " & Format(a.afdep2) & LINE_BREAK;
      end if;
      if( (a.billnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT1 (Why not pay bills: no money for this) [billnt1] : " & Format(a.billnt1) & LINE_BREAK;
      end if;
      if( (a.billnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT2 (Why not pay bills: not priority on current income) [billnt2] : " & Format(a.billnt2) & LINE_BREAK;
      end if;
      if( (a.billnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT3 (Why not pay bills: health / disability prevents me) [billnt3] : " & Format(a.billnt3) & LINE_BREAK;
      end if;
      if( (a.billnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT4 (Why not pay bills: too much trouble / too tiring) [billnt4] : " & Format(a.billnt4) & LINE_BREAK;
      end if;
      if( (a.billnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT5 (Why not pay bills: no one to do this with or help me) [billnt5] : " & Format(a.billnt5) & LINE_BREAK;
      end if;
      if( (a.billnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT6 (Why not pay bills: not something I want) [billnt6] : " & Format(a.billnt6) & LINE_BREAK;
      end if;
      if( (a.billnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT7 (Why not pay bills: not relevant to me) [billnt7] : " & Format(a.billnt7) & LINE_BREAK;
      end if;
      if( (a.billnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT8 (Why not pay bills: other reason) [billnt8] : " & Format(a.billnt8) & LINE_BREAK;
      end if;
      if( (a.billnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLNT9 (Do not know) [billnt9] : " & Format(a.billnt9) & LINE_BREAK;
      end if;
      if( (a.cdelply /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDELPLY (outdoor space/facilities nearby where kids play in safety) [cdelply] : " & Format(a.cdelply) & LINE_BREAK;
      end if;
      if( (a.cdepact /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPACT (Attends regular organised activity outside school each week) [cdepact] : " & Format(a.cdepact) & LINE_BREAK;
      end if;
      if( (a.cdepbed /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPBED (enough bedrooms for every child over 10) [cdepbed] : " & Format(a.cdepbed) & LINE_BREAK;
      end if;
      if( (a.cdepcel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPCEL (celebrations on special occasions) [cdepcel] : " & Format(a.cdepcel) & LINE_BREAK;
      end if;
      if( (a.cdepeqp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPEQP (leisure equipment such as sports equipment or a bicycle) [cdepeqp] : " & Format(a.cdepeqp) & LINE_BREAK;
      end if;
      if( (a.cdephol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPHOL (a holiday away from home at least 1 week a year with family) [cdephol] : " & Format(a.cdephol) & LINE_BREAK;
      end if;
      if( (a.cdeples /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPLES (a hobby or leisure activity) [cdeples] : " & Format(a.cdeples) & LINE_BREAK;
      end if;
      if( (a.cdepsum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPSUM (swimming at least once a month) [cdepsum] : " & Format(a.cdepsum) & LINE_BREAK;
      end if;
      if( (a.cdeptea /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPTEA (have friends round for tea or a snack once a fortnight) [cdeptea] : " & Format(a.cdeptea) & LINE_BREAK;
      end if;
      if( (a.cdeptrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPTRP (go on a school trip at least once a term) [cdeptrp] : " & Format(a.cdeptrp) & LINE_BREAK;
      end if;
      if( (a.cdepveg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDEPVEG (Eat fresh fruit or veg every day) [cdepveg] : " & Format(a.cdepveg) & LINE_BREAK;
      end if;
      if( (a.cdpcoat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDPCOAT (Have a warm winter coat) [cdpcoat] : " & Format(a.cdpcoat) & LINE_BREAK;
      end if;
      if( (a.coatnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT1 (Why no waterproof coat: no money for this) [coatnt1] : " & Format(a.coatnt1) & LINE_BREAK;
      end if;
      if( (a.coatnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT2 (Why no waterproof coat: not priority on current income) [coatnt2] : " & Format(a.coatnt2) & LINE_BREAK;
      end if;
      if( (a.coatnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT3 (Why no waterproof coat: health / disability prevents me) [coatnt3] : " & Format(a.coatnt3) & LINE_BREAK;
      end if;
      if( (a.coatnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT4 (Why no waterproof coat: too much trouble / too tiring) [coatnt4] : " & Format(a.coatnt4) & LINE_BREAK;
      end if;
      if( (a.coatnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT5 (Why no waterproof coat: no one to do this with or help me) [coatnt5] : " & Format(a.coatnt5) & LINE_BREAK;
      end if;
      if( (a.coatnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT6 (Why no waterproof coat: not something I want) [coatnt6] : " & Format(a.coatnt6) & LINE_BREAK;
      end if;
      if( (a.coatnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT7 (Why no waterproof coat: not relevant to me) [coatnt7] : " & Format(a.coatnt7) & LINE_BREAK;
      end if;
      if( (a.coatnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT8 (Why no waterproof coat: other reason) [coatnt8] : " & Format(a.coatnt8) & LINE_BREAK;
      end if;
      if( (a.coatnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COATNT9 (Do not know) [coatnt9] : " & Format(a.coatnt9) & LINE_BREAK;
      end if;
      if( (a.cooknt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT1 (Why not replace cooker: no money for this) [cooknt1] : " & Format(a.cooknt1) & LINE_BREAK;
      end if;
      if( (a.cooknt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT2 (Why not replace cooker: not priority on current income) [cooknt2] : " & Format(a.cooknt2) & LINE_BREAK;
      end if;
      if( (a.cooknt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT3 (Why not replace cooker: health / disability prevents me) [cooknt3] : " & Format(a.cooknt3) & LINE_BREAK;
      end if;
      if( (a.cooknt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT4 (Why not replace cooker: too much trouble / too tiring) [cooknt4] : " & Format(a.cooknt4) & LINE_BREAK;
      end if;
      if( (a.cooknt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT5 (Why not replace cooker: no one to do this with or help me) [cooknt5] : " & Format(a.cooknt5) & LINE_BREAK;
      end if;
      if( (a.cooknt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT6 (Why not replace cooker: not something I want) [cooknt6] : " & Format(a.cooknt6) & LINE_BREAK;
      end if;
      if( (a.cooknt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT7 (Why not replace cooker: not relevant to me) [cooknt7] : " & Format(a.cooknt7) & LINE_BREAK;
      end if;
      if( (a.cooknt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT8 (Why not replace cooker: other reason) [cooknt8] : " & Format(a.cooknt8) & LINE_BREAK;
      end if;
      if( (a.cooknt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COOKNT9 (Do not know) [cooknt9] : " & Format(a.cooknt9) & LINE_BREAK;
      end if;
      if( (a.cplay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CPLAY (Go to a playgroup at least once a week) [cplay] : " & Format(a.cplay) & LINE_BREAK;
      end if;
      if( (a.dampnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT1 (Why no damp free home: no money for this) [dampnt1] : " & Format(a.dampnt1) & LINE_BREAK;
      end if;
      if( (a.dampnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT2 (Why no damp free home: not priority on current income) [dampnt2] : " & Format(a.dampnt2) & LINE_BREAK;
      end if;
      if( (a.dampnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT3 (Why no damp free home: health / disability prevents me) [dampnt3] : " & Format(a.dampnt3) & LINE_BREAK;
      end if;
      if( (a.dampnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT4 (Why no damp free home: too much trouble / too tiring) [dampnt4] : " & Format(a.dampnt4) & LINE_BREAK;
      end if;
      if( (a.dampnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT5 (Why no damp free home: no one to do this with or help me) [dampnt5] : " & Format(a.dampnt5) & LINE_BREAK;
      end if;
      if( (a.dampnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT6 (Why no damp free home: not something I want) [dampnt6] : " & Format(a.dampnt6) & LINE_BREAK;
      end if;
      if( (a.dampnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT7 (Why no damp free home: not relevant to me) [dampnt7] : " & Format(a.dampnt7) & LINE_BREAK;
      end if;
      if( (a.dampnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT8 (Why no damp free home: other reason) [dampnt8] : " & Format(a.dampnt8) & LINE_BREAK;
      end if;
      if( (a.dampnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAMPNT9 (Do not know) [dampnt9] : " & Format(a.dampnt9) & LINE_BREAK;
      end if;
      if( (a.debt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT1 (Behind with the electricity bill) [debt1] : " & Format(a.debt1) & LINE_BREAK;
      end if;
      if( (a.debt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT2 (Behind with the gas bill) [debt2] : " & Format(a.debt2) & LINE_BREAK;
      end if;
      if( (a.debt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT3 (Behind with other fuel bills like coal or oil) [debt3] : " & Format(a.debt3) & LINE_BREAK;
      end if;
      if( (a.debt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT4 (Behind with Council Tax) [debt4] : " & Format(a.debt4) & LINE_BREAK;
      end if;
      if( (a.debt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT5 (Behind with insurance policies) [debt5] : " & Format(a.debt5) & LINE_BREAK;
      end if;
      if( (a.debt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT6 (Behind with telephone bill) [debt6] : " & Format(a.debt6) & LINE_BREAK;
      end if;
      if( (a.debt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT7 (Behind with television/video rental or HP) [debt7] : " & Format(a.debt7) & LINE_BREAK;
      end if;
      if( (a.debt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT8 (Behind with other HP payments) [debt8] : " & Format(a.debt8) & LINE_BREAK;
      end if;
      if( (a.debt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEBT9 (Behind with water rates/rates(NI)) [debt9] : " & Format(a.debt9) & LINE_BREAK;
      end if;
      if( (a.frndnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT1 (Why not see friends/family: no money for this) [frndnt1] : " & Format(a.frndnt1) & LINE_BREAK;
      end if;
      if( (a.frndnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT2 (Why not see friends/family: not priority on current income) [frndnt2] : " & Format(a.frndnt2) & LINE_BREAK;
      end if;
      if( (a.frndnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT3 (Why not see friends/family: health / disability prevents me) [frndnt3] : " & Format(a.frndnt3) & LINE_BREAK;
      end if;
      if( (a.frndnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT4 (Why not see friends/family: too much trouble / too tiring) [frndnt4] : " & Format(a.frndnt4) & LINE_BREAK;
      end if;
      if( (a.frndnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT5 (Why not see friends/family: no one to do this with or help) [frndnt5] : " & Format(a.frndnt5) & LINE_BREAK;
      end if;
      if( (a.frndnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT6 (Why not see friends/family: not something I want) [frndnt6] : " & Format(a.frndnt6) & LINE_BREAK;
      end if;
      if( (a.frndnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT7 (Why not see friends/family: not relevant to me) [frndnt7] : " & Format(a.frndnt7) & LINE_BREAK;
      end if;
      if( (a.frndnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT8 (Why not see friends/family: other reason) [frndnt8] : " & Format(a.frndnt8) & LINE_BREAK;
      end if;
      if( (a.frndnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FRNDNT9 (Do not know) [frndnt9] : " & Format(a.frndnt9) & LINE_BREAK;
      end if;
      if( (a.hairnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT1 (Why hair not done/cut regularly: no money for this) [hairnt1] : " & Format(a.hairnt1) & LINE_BREAK;
      end if;
      if( (a.hairnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT2 (Why hair not done/cut regularly: not priority on current inc) [hairnt2] : " & Format(a.hairnt2) & LINE_BREAK;
      end if;
      if( (a.hairnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT3 (Why hair not done/cut regularly: health/disability prevents) [hairnt3] : " & Format(a.hairnt3) & LINE_BREAK;
      end if;
      if( (a.hairnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT4 (Why hair not done/cut regularly: too much trouble/too tiring) [hairnt4] : " & Format(a.hairnt4) & LINE_BREAK;
      end if;
      if( (a.hairnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT5 (Why hair not done/cut regularly: no one to do this with/help) [hairnt5] : " & Format(a.hairnt5) & LINE_BREAK;
      end if;
      if( (a.hairnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT6 (Why hair not done/cut regularly: not something I want) [hairnt6] : " & Format(a.hairnt6) & LINE_BREAK;
      end if;
      if( (a.hairnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT7 (Why hair not done/cut regularly: not relevant to me) [hairnt7] : " & Format(a.hairnt7) & LINE_BREAK;
      end if;
      if( (a.hairnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT8 (Why hair not done/cut regularly: other reason) [hairnt8] : " & Format(a.hairnt8) & LINE_BREAK;
      end if;
      if( (a.hairnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HAIRNT9 (Do not know) [hairnt9] : " & Format(a.hairnt9) & LINE_BREAK;
      end if;
      if( (a.hbolng /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOLNG (Time been on Housing Benefit or Rent [rebate/Allowance]) [hbolng] : " & Format(a.hbolng) & LINE_BREAK;
      end if;
      if( (a.hbothamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHAMT (Amount of Housing Benefit/rent rebate/rent or rates rebate) [hbothamt] : " & Format(a.hbothamt) & LINE_BREAK;
      end if;
      if( (a.hbothbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHBU (Whether qualifies for HB (2nd+ BU)) [hbothbu] : " & Format(a.hbothbu) & LINE_BREAK;
      end if;
      if( (a.hbothmn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHMN (Month began current Housing Benefit claim) [hbothmn] : " & Format(a.hbothmn) & LINE_BREAK;
      end if;
      if( (a.hbothpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHPD (Pcode : Housing Benefit) [hbothpd] : " & Format(a.hbothpd) & LINE_BREAK;
      end if;
      if( (a.hbothwk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHWK (Number of weeks claimed Housing Benefit) [hbothwk] : " & Format(a.hbothwk) & LINE_BREAK;
      end if;
      if( (a.hbothyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTHYR (Year began current Housing Benefit claim) [hbothyr] : " & Format(a.hbothyr) & LINE_BREAK;
      end if;
      if( (a.hbotwait /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBOTWAIT (Awaiting outcome of Housing Benft claim) [hbotwait] : " & Format(a.hbotwait) & LINE_BREAK;
      end if;
      if( (a.heatnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT1 (Why heating etc not in working order: no money for this) [heatnt1] : " & Format(a.heatnt1) & LINE_BREAK;
      end if;
      if( (a.heatnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT2 (Why heating etc not in working order: not priority on income) [heatnt2] : " & Format(a.heatnt2) & LINE_BREAK;
      end if;
      if( (a.heatnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT3 (Why heating etc not in working order: health/disability) [heatnt3] : " & Format(a.heatnt3) & LINE_BREAK;
      end if;
      if( (a.heatnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT4 (Why heating etc not in working order:too much trouble/tiring) [heatnt4] : " & Format(a.heatnt4) & LINE_BREAK;
      end if;
      if( (a.heatnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT5 (Why heating etc not in working order: no one to do this with) [heatnt5] : " & Format(a.heatnt5) & LINE_BREAK;
      end if;
      if( (a.heatnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT6 (Why heating etc not in working order: not something I want) [heatnt6] : " & Format(a.heatnt6) & LINE_BREAK;
      end if;
      if( (a.heatnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT7 (Why heating etc not in working order: not relevant to me) [heatnt7] : " & Format(a.heatnt7) & LINE_BREAK;
      end if;
      if( (a.heatnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT8 (Why heating etc not in working order: other reason) [heatnt8] : " & Format(a.heatnt8) & LINE_BREAK;
      end if;
      if( (a.heatnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEATNT9 (Do not know) [heatnt9] : " & Format(a.heatnt9) & LINE_BREAK;
      end if;
      if( (a.helpgv01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV01 (Help given: buying or bringing food or meals) [helpgv01] : " & Format(a.helpgv01) & LINE_BREAK;
      end if;
      if( (a.helpgv02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV02 (Help given: paying towards bills) [helpgv02] : " & Format(a.helpgv02) & LINE_BREAK;
      end if;
      if( (a.helpgv03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV03 (Help given: manage money or deal with benefits) [helpgv03] : " & Format(a.helpgv03) & LINE_BREAK;
      end if;
      if( (a.helpgv04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV04 (Help given: home repairs or decoration by paying or doing it) [helpgv04] : " & Format(a.helpgv04) & LINE_BREAK;
      end if;
      if( (a.helpgv05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV05 (Help given: household chores) [helpgv05] : " & Format(a.helpgv05) & LINE_BREAK;
      end if;
      if( (a.helpgv06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV06 (Help given: giving lifts or paying for travel costs) [helpgv06] : " & Format(a.helpgv06) & LINE_BREAK;
      end if;
      if( (a.helpgv07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV07 (Help given: paying for trips/holidays) [helpgv07] : " & Format(a.helpgv07) & LINE_BREAK;
      end if;
      if( (a.helpgv08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV08 (Help given: buying or giving clothes) [helpgv08] : " & Format(a.helpgv08) & LINE_BREAK;
      end if;
      if( (a.helpgv09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV09 (Help given: buying clothes/toys/other equipment for children) [helpgv09] : " & Format(a.helpgv09) & LINE_BREAK;
      end if;
      if( (a.helpgv10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV10 (Help given: buying a big electrical item) [helpgv10] : " & Format(a.helpgv10) & LINE_BREAK;
      end if;
      if( (a.helpgv11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPGV11 (Help given: other help received) [helpgv11] : " & Format(a.helpgv11) & LINE_BREAK;
      end if;
      if( (a.helprc01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC01 (Help received: buying or bringing food or meals) [helprc01] : " & Format(a.helprc01) & LINE_BREAK;
      end if;
      if( (a.helprc02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC02 (Help received: paying towards bills) [helprc02] : " & Format(a.helprc02) & LINE_BREAK;
      end if;
      if( (a.helprc03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC03 (Help received: manage money or deal with benefits) [helprc03] : " & Format(a.helprc03) & LINE_BREAK;
      end if;
      if( (a.helprc04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC04 (Help received: home repairs or decoration by paying or doing) [helprc04] : " & Format(a.helprc04) & LINE_BREAK;
      end if;
      if( (a.helprc05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC05 (Help received: household chores) [helprc05] : " & Format(a.helprc05) & LINE_BREAK;
      end if;
      if( (a.helprc06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC06 (Help received: giving lifts or paying for travel costs) [helprc06] : " & Format(a.helprc06) & LINE_BREAK;
      end if;
      if( (a.helprc07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC07 (Help received: paying for trips/holidays) [helprc07] : " & Format(a.helprc07) & LINE_BREAK;
      end if;
      if( (a.helprc08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC08 (Help received: buying or giving clothes) [helprc08] : " & Format(a.helprc08) & LINE_BREAK;
      end if;
      if( (a.helprc09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC09 (Help received: buying clothes/toys/other equipment for child) [helprc09] : " & Format(a.helprc09) & LINE_BREAK;
      end if;
      if( (a.helprc10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC10 (Help received: buying a big electrical item) [helprc10] : " & Format(a.helprc10) & LINE_BREAK;
      end if;
      if( (a.helprc11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HELPRC11 (Help received: other help received) [helprc11] : " & Format(a.helprc11) & LINE_BREAK;
      end if;
      if( (a.holnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT1 (Why no holiday: no money for this) [holnt1] : " & Format(a.holnt1) & LINE_BREAK;
      end if;
      if( (a.holnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT2 (Why no holiday: not priority on current income) [holnt2] : " & Format(a.holnt2) & LINE_BREAK;
      end if;
      if( (a.holnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT3 (Why no holiday: health / disability prevents me) [holnt3] : " & Format(a.holnt3) & LINE_BREAK;
      end if;
      if( (a.holnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT4 (Why no holiday: too much trouble / too tiring) [holnt4] : " & Format(a.holnt4) & LINE_BREAK;
      end if;
      if( (a.holnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT5 (Why no holiday: no one to do this with or help me) [holnt5] : " & Format(a.holnt5) & LINE_BREAK;
      end if;
      if( (a.holnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT6 (Why no holiday: not something I want) [holnt6] : " & Format(a.holnt6) & LINE_BREAK;
      end if;
      if( (a.holnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT7 (Why no holiday: not relevant to me) [holnt7] : " & Format(a.holnt7) & LINE_BREAK;
      end if;
      if( (a.holnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT8 (Why no holiday: other reason) [holnt8] : " & Format(a.holnt8) & LINE_BREAK;
      end if;
      if( (a.holnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOLNT9 (Do not know) [holnt9] : " & Format(a.holnt9) & LINE_BREAK;
      end if;
      if( (a.homent1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT1 (Why home not in good repair: no money for this) [homent1] : " & Format(a.homent1) & LINE_BREAK;
      end if;
      if( (a.homent2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT2 (Why home not in good repair: not priority on current income) [homent2] : " & Format(a.homent2) & LINE_BREAK;
      end if;
      if( (a.homent3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT3 (Why home not in good repair: health / disability prevents me) [homent3] : " & Format(a.homent3) & LINE_BREAK;
      end if;
      if( (a.homent4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT4 (Why home not in good repair: too much trouble / too tiring) [homent4] : " & Format(a.homent4) & LINE_BREAK;
      end if;
      if( (a.homent5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT5 (Why home not in good repair: no one to do this with or help) [homent5] : " & Format(a.homent5) & LINE_BREAK;
      end if;
      if( (a.homent6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT6 (Why home not in good repair: not something I want) [homent6] : " & Format(a.homent6) & LINE_BREAK;
      end if;
      if( (a.homent7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT7 (Why home not in good repair: not relevant to me) [homent7] : " & Format(a.homent7) & LINE_BREAK;
      end if;
      if( (a.homent8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT8 (Why home not in good repair: other reason) [homent8] : " & Format(a.homent8) & LINE_BREAK;
      end if;
      if( (a.homent9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOMENT9 (Do not know) [homent9] : " & Format(a.homent9) & LINE_BREAK;
      end if;
      if( (a.houshe1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUSHE1 (are you able to keep this accommodation warm enough) [houshe1] : " & Format(a.houshe1) & LINE_BREAK;
      end if;
      if( (a.incchnge /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCCHNGE (Whether income changed in last 12 months) [incchnge] : " & Format(a.incchnge) & LINE_BREAK;
      end if;
      if( (a.inchilow /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCHILOW (How much present income higher/lower than 12 months ago) [inchilow] : " & Format(a.inchilow) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.kidinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDINC (>1 child in BU any get inc. from job/tru) [kidinc] : " & Format(a.kidinc) & LINE_BREAK;
      end if;
      if( (a.mealnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT1 (Why no meal: no money for this) [mealnt1] : " & Format(a.mealnt1) & LINE_BREAK;
      end if;
      if( (a.mealnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT2 (Why no meal: not priority on current income) [mealnt2] : " & Format(a.mealnt2) & LINE_BREAK;
      end if;
      if( (a.mealnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT3 (Why no meal: health / disability prevents me) [mealnt3] : " & Format(a.mealnt3) & LINE_BREAK;
      end if;
      if( (a.mealnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT4 (Why no meal: too much trouble / too tiring) [mealnt4] : " & Format(a.mealnt4) & LINE_BREAK;
      end if;
      if( (a.mealnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT5 (Why no meal: no one to do this with or help me) [mealnt5] : " & Format(a.mealnt5) & LINE_BREAK;
      end if;
      if( (a.mealnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT6 (Why no meal: not something I want) [mealnt6] : " & Format(a.mealnt6) & LINE_BREAK;
      end if;
      if( (a.mealnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT7 (Why no meal: not relevant to me) [mealnt7] : " & Format(a.mealnt7) & LINE_BREAK;
      end if;
      if( (a.mealnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT8 (Why no meal: other reason) [mealnt8] : " & Format(a.mealnt8) & LINE_BREAK;
      end if;
      if( (a.mealnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEALNT9 (Do not know) [mealnt9] : " & Format(a.mealnt9) & LINE_BREAK;
      end if;
      if( (a.nhhchild /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHHCHILD (Whether any external child in education) [nhhchild] : " & Format(a.nhhchild) & LINE_BREAK;
      end if;
      if( (a.oabill /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OABILL (Are you able to pay regular bills) [oabill] : " & Format(a.oabill) & LINE_BREAK;
      end if;
      if( (a.oacoat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OACOAT (Do you have a warm waterproof coat) [oacoat] : " & Format(a.oacoat) & LINE_BREAK;
      end if;
      if( (a.oacook /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OACOOK (Would you be able to replace your cooker if it broke down) [oacook] : " & Format(a.oacook) & LINE_BREAK;
      end if;
      if( (a.oadamp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OADAMP (Do you have a damp-free home) [oadamp] : " & Format(a.oadamp) & LINE_BREAK;
      end if;
      if( (a.oaexpns /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAEXPNS (Would you be able to pay an unexpected expense of £200) [oaexpns] : " & Format(a.oaexpns) & LINE_BREAK;
      end if;
      if( (a.oafrnd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAFRND (Do you see your friends or family at least once a month) [oafrnd] : " & Format(a.oafrnd) & LINE_BREAK;
      end if;
      if( (a.oahair /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHAIR (Do you have your hair done or cut regularly) [oahair] : " & Format(a.oahair) & LINE_BREAK;
      end if;
      if( (a.oaheat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHEAT (Are your heating, electrics, plumbing and drains working) [oaheat] : " & Format(a.oaheat) & LINE_BREAK;
      end if;
      if( (a.oahol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOL (Do you take a holiday away from home) [oahol] : " & Format(a.oahol) & LINE_BREAK;
      end if;
      if( (a.oahome /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOME (Is your home kept in a good state of repair) [oahome] : " & Format(a.oahome) & LINE_BREAK;
      end if;
      if( (a.oahowpy1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY1 (How pay £200: use own income but cut back on essentials) [oahowpy1] : " & Format(a.oahowpy1) & LINE_BREAK;
      end if;
      if( (a.oahowpy2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY2 (How pay £200: use own income not cut back on essentials) [oahowpy2] : " & Format(a.oahowpy2) & LINE_BREAK;
      end if;
      if( (a.oahowpy3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY3 (How pay £200: use savings) [oahowpy3] : " & Format(a.oahowpy3) & LINE_BREAK;
      end if;
      if( (a.oahowpy4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY4 (How pay £200: use a form of credit) [oahowpy4] : " & Format(a.oahowpy4) & LINE_BREAK;
      end if;
      if( (a.oahowpy5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY5 (How pay £200: get the money from friends/family as gift/loan) [oahowpy5] : " & Format(a.oahowpy5) & LINE_BREAK;
      end if;
      if( (a.oahowpy6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOWPY6 (How pay £200: other) [oahowpy6] : " & Format(a.oahowpy6) & LINE_BREAK;
      end if;
      if( (a.oameal /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAMEAL (Do you eat at least one filling meal a day) [oameal] : " & Format(a.oameal) & LINE_BREAK;
      end if;
      if( (a.oaout /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAOUT (Do you go out socially at least once a month) [oaout] : " & Format(a.oaout) & LINE_BREAK;
      end if;
      if( (a.oaphon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAPHON (Do you have telephone (landline)to use, whenever you need it) [oaphon] : " & Format(a.oaphon) & LINE_BREAK;
      end if;
      if( (a.oataxi /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OATAXI (Do you have access to a car or taxi, whenever you need it) [oataxi] : " & Format(a.oataxi) & LINE_BREAK;
      end if;
      if( (a.oawarm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAWARM (Is your home kept adequately warm) [oawarm] : " & Format(a.oawarm) & LINE_BREAK;
      end if;
      if( (a.outnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT1 (Why not go out: no money for this) [outnt1] : " & Format(a.outnt1) & LINE_BREAK;
      end if;
      if( (a.outnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT2 (Why not go out: not priority on current income) [outnt2] : " & Format(a.outnt2) & LINE_BREAK;
      end if;
      if( (a.outnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT3 (Why not go out: health / disability prevents me) [outnt3] : " & Format(a.outnt3) & LINE_BREAK;
      end if;
      if( (a.outnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT4 (Why not go out: too much trouble / too tiring) [outnt4] : " & Format(a.outnt4) & LINE_BREAK;
      end if;
      if( (a.outnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT5 (Why not go out: no one to do this with or help me) [outnt5] : " & Format(a.outnt5) & LINE_BREAK;
      end if;
      if( (a.outnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT6 (Why not go out: not something I want) [outnt6] : " & Format(a.outnt6) & LINE_BREAK;
      end if;
      if( (a.outnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT7 (Why not go out: not relevant to me) [outnt7] : " & Format(a.outnt7) & LINE_BREAK;
      end if;
      if( (a.outnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT8 (Why not go out: other reason) [outnt8] : " & Format(a.outnt8) & LINE_BREAK;
      end if;
      if( (a.outnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTNT9 (Do not know) [outnt9] : " & Format(a.outnt9) & LINE_BREAK;
      end if;
      if( (a.phonnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT1 (Why no phone: no money for this) [phonnt1] : " & Format(a.phonnt1) & LINE_BREAK;
      end if;
      if( (a.phonnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT2 (Why no phone: not priority on current income) [phonnt2] : " & Format(a.phonnt2) & LINE_BREAK;
      end if;
      if( (a.phonnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT3 (Why no phone: health / disability prevents me) [phonnt3] : " & Format(a.phonnt3) & LINE_BREAK;
      end if;
      if( (a.phonnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT4 (Why no phone: too much trouble / too tiring) [phonnt4] : " & Format(a.phonnt4) & LINE_BREAK;
      end if;
      if( (a.phonnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT5 (Why no phone: no one to do this with or help me) [phonnt5] : " & Format(a.phonnt5) & LINE_BREAK;
      end if;
      if( (a.phonnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT6 (Why no phone: not something I want) [phonnt6] : " & Format(a.phonnt6) & LINE_BREAK;
      end if;
      if( (a.phonnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT7 (Why no phone: not relevant to me) [phonnt7] : " & Format(a.phonnt7) & LINE_BREAK;
      end if;
      if( (a.phonnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT8 (Why no phone: other reason) [phonnt8] : " & Format(a.phonnt8) & LINE_BREAK;
      end if;
      if( (a.phonnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PHONNT9 (Do not know) [phonnt9] : " & Format(a.phonnt9) & LINE_BREAK;
      end if;
      if( (a.taxint1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT1 (Why no car/taxi: no money for this) [taxint1] : " & Format(a.taxint1) & LINE_BREAK;
      end if;
      if( (a.taxint2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT2 (Why no car/taxi: not priority on current income) [taxint2] : " & Format(a.taxint2) & LINE_BREAK;
      end if;
      if( (a.taxint3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT3 (Why no car/taxi: health / disability prevents me) [taxint3] : " & Format(a.taxint3) & LINE_BREAK;
      end if;
      if( (a.taxint4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT4 (Why no car/taxi: too much trouble / too tiring) [taxint4] : " & Format(a.taxint4) & LINE_BREAK;
      end if;
      if( (a.taxint5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT5 (Why no car/taxi: no one to do this with or help me) [taxint5] : " & Format(a.taxint5) & LINE_BREAK;
      end if;
      if( (a.taxint6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT6 (Why no car/taxi: not something I want) [taxint6] : " & Format(a.taxint6) & LINE_BREAK;
      end if;
      if( (a.taxint7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT7 (Why no car/taxi: not relevant to me) [taxint7] : " & Format(a.taxint7) & LINE_BREAK;
      end if;
      if( (a.taxint8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT8 (Why no car/taxi: other reason) [taxint8] : " & Format(a.taxint8) & LINE_BREAK;
      end if;
      if( (a.taxint9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXINT9 (Do not know) [taxint9] : " & Format(a.taxint9) & LINE_BREAK;
      end if;
      if( (a.totsav /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTSAV (Estimated value of accounts/investments) [totsav] : " & Format(a.totsav) & LINE_BREAK;
      end if;
      if( (a.warmnt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT1 (Why home not warm: no money for this) [warmnt1] : " & Format(a.warmnt1) & LINE_BREAK;
      end if;
      if( (a.warmnt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT2 (Why home not warm: not priority on current income) [warmnt2] : " & Format(a.warmnt2) & LINE_BREAK;
      end if;
      if( (a.warmnt3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT3 (Why home not warm: health / disability prevents me) [warmnt3] : " & Format(a.warmnt3) & LINE_BREAK;
      end if;
      if( (a.warmnt4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT4 (Why home not warm: too much trouble / too tiring) [warmnt4] : " & Format(a.warmnt4) & LINE_BREAK;
      end if;
      if( (a.warmnt5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT5 (Why home not warm: no one to do this with or help me) [warmnt5] : " & Format(a.warmnt5) & LINE_BREAK;
      end if;
      if( (a.warmnt6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT6 (Why home not warm: not something I want) [warmnt6] : " & Format(a.warmnt6) & LINE_BREAK;
      end if;
      if( (a.warmnt7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT7 (Why home not warm: not relevant to me) [warmnt7] : " & Format(a.warmnt7) & LINE_BREAK;
      end if;
      if( (a.warmnt8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT8 (Why home not warm: other reason) [warmnt8] : " & Format(a.warmnt8) & LINE_BREAK;
      end if;
      if( (a.warmnt9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WARMNT9 (Do not know) [warmnt9] : " & Format(a.warmnt9) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.adddabu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDDABU (Number of adults within BU who have a DDA defined disability) [adddabu] : " & Format(a.adddabu) & LINE_BREAK;
      end if;
      if( (a.adultb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADULTB (Number of adults in BU) [adultb] : " & Format(a.adultb) & LINE_BREAK;
      end if;
      if( (a.boarder /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BOARDER (Rent - paid by Boarder) [boarder] : " & Format(a.boarder) & LINE_BREAK;
      end if;
      if( (a.bpeninc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BPENINC (BU - Pension income) [bpeninc] : " & Format(a.bpeninc) & LINE_BREAK;
      end if;
      if( (a.bseinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BSEINC (BU - Gross Self-Employment Earnings) [bseinc] : " & Format(a.bseinc) & LINE_BREAK;
      end if;
      if( (a.buagegr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUAGEGR2 (Revised Age of Head of BU (Pub.)) [buagegr2] : " & Format(a.buagegr2) & LINE_BREAK;
      end if;
      if( (a.buagegr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUAGEGR3 (Age of Head of BU - 10 Year Age Bands - Anon.) [buagegr3] : " & Format(a.buagegr3) & LINE_BREAK;
      end if;
      if( (a.buagegr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUAGEGR4 (Age of Head of BU - 5 Year Age Bands - Anon.) [buagegr4] : " & Format(a.buagegr4) & LINE_BREAK;
      end if;
      if( (a.buagegrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUAGEGRP (Age of Head of Benefit Unit-Pub.) [buagegrp] : " & Format(a.buagegrp) & LINE_BREAK;
      end if;
      if( (a.budisben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUDISBEN (BU - Disability benefits) [budisben] : " & Format(a.budisben) & LINE_BREAK;
      end if;
      if( (a.buearns /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUEARNS (BU - Gross Income from Employment) [buearns] : " & Format(a.buearns) & LINE_BREAK;
      end if;
      if( (a.buethgr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUETHGR2 (Ethnicity of Head of BENUNIT (Pub. 2003-04)) [buethgr2] : " & Format(a.buethgr2) & LINE_BREAK;
      end if;
      if( (a.buinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUINC (BU - Total Income) [buinc] : " & Format(a.buinc) & LINE_BREAK;
      end if;
      if( (a.buinv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUINV (BU - Investment income) [buinv] : " & Format(a.buinv) & LINE_BREAK;
      end if;
      if( (a.buirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUIRBEN (BU - income related benefits) [buirben] : " & Format(a.buirben) & LINE_BREAK;
      end if;
      if( (a.bukids /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUKIDS (No. Children in BU by No. Parents -Pub.) [bukids] : " & Format(a.bukids) & LINE_BREAK;
      end if;
      if( (a.bunirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUNIRBEN (BU - non income related benefits) [bunirben] : " & Format(a.bunirben) & LINE_BREAK;
      end if;
      if( (a.buothben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUOTHBEN (BU - Other benefits) [buothben] : " & Format(a.buothben) & LINE_BREAK;
      end if;
      if( (a.burent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BURENT (Gross Rent for BU) [burent] : " & Format(a.burent) & LINE_BREAK;
      end if;
      if( (a.burinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BURINC (BU - Remaining income) [burinc] : " & Format(a.burinc) & LINE_BREAK;
      end if;
      if( (a.burpinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BURPINC (Retirement pension + IS) [burpinc] : " & Format(a.burpinc) & LINE_BREAK;
      end if;
      if( (a.butvlic /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUTVLIC (BU - Amount of Income from free TV licences) [butvlic] : " & Format(a.butvlic) & LINE_BREAK;
      end if;
      if( (a.butxcred /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUTXCRED (BU - Amount of Tax Credits Received) [butxcred] : " & Format(a.butxcred) & LINE_BREAK;
      end if;
      if( (a.chddabu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHDDABU (Number of children within BU who have a DDA defined disabili) [chddabu] : " & Format(a.chddabu) & LINE_BREAK;
      end if;
      if( (a.depchldb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPCHLDB (Number of dependent children in BU) [depchldb] : " & Format(a.depchldb) & LINE_BREAK;
      end if;
      if( (a.disindhb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISINDHB (Blindness) [disindhb] : " & Format(a.disindhb) & LINE_BREAK;
      end if;
      if( (a.ecostabu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ECOSTABU (Benefit Unit Economic status - ILO definition) [ecostabu] : " & Format(a.ecostabu) & LINE_BREAK;
      end if;
      if( (a.ecstatbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ECSTATBU (BU Economic status) [ecstatbu] : " & Format(a.ecstatbu) & LINE_BREAK;
      end if;
      if( (a.famtypb2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTYPB2 (Family Type - with gender and couples status) [famtypb2] : " & Format(a.famtypb2) & LINE_BREAK;
      end if;
      if( (a.famtypbs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTYPBS (Family Type - with gender) [famtypbs] : " & Format(a.famtypbs) & LINE_BREAK;
      end if;
      if( (a.famtypbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTYPBU (Family Type) [famtypbu] : " & Format(a.famtypbu) & LINE_BREAK;
      end if;
      if( (a.fsmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMBU (BU - Value of Free school meals) [fsmbu] : " & Format(a.fsmbu) & LINE_BREAK;
      end if;
      if( (a.fsmlkbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMLKBU (BU - Value of Free school milk) [fsmlkbu] : " & Format(a.fsmlkbu) & LINE_BREAK;
      end if;
      if( (a.gross3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3 (Grossing Factor) [gross3] : " & Format(a.gross3) & LINE_BREAK;
      end if;
      if( (a.hbindbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBINDBU (BU - in receipt of HB, CTB, IS/PC/ESA[IR] indicator) [hbindbu] : " & Format(a.hbindbu) & LINE_BREAK;
      end if;
      if( (a.hbindbu2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBINDBU2 (BU - in receipt of HB, CTB, IS/PC/JSA[IB]/ESA[IR] indicator) [hbindbu2] : " & Format(a.hbindbu2) & LINE_BREAK;
      end if;
      if( (a.heartbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEARTBU (BU - Value of Healthy Start Vouchers) [heartbu] : " & Format(a.heartbu) & LINE_BREAK;
      end if;
      if( (a.kid04 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID04 (No. of dependent children aged 0-4 inc.) [kid04] : " & Format(a.kid04) & LINE_BREAK;
      end if;
      if( (a.kid1115 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID1115 (No. of dependent children aged 11-15 inc.) [kid1115] : " & Format(a.kid1115) & LINE_BREAK;
      end if;
      if( (a.kid1619 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID1619 (No. of dependent children aged 16-19 inc.) [kid1619] : " & Format(a.kid1619) & LINE_BREAK;
      end if;
      if( (a.kid510 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID510 (No. of dependent children aged 5-10 inc.) [kid510] : " & Format(a.kid510) & LINE_BREAK;
      end if;
      if( (a.lodger /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LODGER (Rent - paid by lodger) [lodger] : " & Format(a.lodger) & LINE_BREAK;
      end if;
      if( (a.newfamb2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEWFAMB2 (Family type with couples status - HBAI equivalent) [newfamb2] : " & Format(a.newfamb2) & LINE_BREAK;
      end if;
      if( (a.newfambu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEWFAMBU (Family type - HBAI equivalent) [newfambu] : " & Format(a.newfambu) & LINE_BREAK;
      end if;
      if( (a.oabilimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OABILIMP (Imputed OABILL) [oabilimp] : " & Format(a.oabilimp) & LINE_BREAK;
      end if;
      if( (a.oacoaimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OACOAIMP (Imputed OACOAT) [oacoaimp] : " & Format(a.oacoaimp) & LINE_BREAK;
      end if;
      if( (a.oacooimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OACOOIMP (Imputed OACOOK) [oacooimp] : " & Format(a.oacooimp) & LINE_BREAK;
      end if;
      if( (a.oadamimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OADAMIMP (Imputed OADAMP) [oadamimp] : " & Format(a.oadamimp) & LINE_BREAK;
      end if;
      if( (a.oaexpimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAEXPIMP (Imputed OAEXPNS) [oaexpimp] : " & Format(a.oaexpimp) & LINE_BREAK;
      end if;
      if( (a.oafrnimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAFRNIMP (Imputed OAFRND) [oafrnimp] : " & Format(a.oafrnimp) & LINE_BREAK;
      end if;
      if( (a.oahaiimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHAIIMP (Imputed OAHAIR) [oahaiimp] : " & Format(a.oahaiimp) & LINE_BREAK;
      end if;
      if( (a.oaheaimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHEAIMP (Imputed OAHEAT) [oaheaimp] : " & Format(a.oaheaimp) & LINE_BREAK;
      end if;
      if( (a.oaholimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOLIMP (Imputed OAHOL) [oaholimp] : " & Format(a.oaholimp) & LINE_BREAK;
      end if;
      if( (a.oahomimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHOMIMP (Imputed OAHOME) [oahomimp] : " & Format(a.oahomimp) & LINE_BREAK;
      end if;
      if( (a.oameaimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAMEAIMP (Imputed OAMEAL) [oameaimp] : " & Format(a.oameaimp) & LINE_BREAK;
      end if;
      if( (a.oaoutimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAOUTIMP (Imputed OAOUT) [oaoutimp] : " & Format(a.oaoutimp) & LINE_BREAK;
      end if;
      if( (a.oaphoimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAPHOIMP (Imputed OAPHON) [oaphoimp] : " & Format(a.oaphoimp) & LINE_BREAK;
      end if;
      if( (a.oataximp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OATAXIMP (Imputed OATAXI) [oataximp] : " & Format(a.oataximp) & LINE_BREAK;
      end if;
      if( (a.oawarimp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAWARIMP (Imputed OAWARM) [oawarimp] : " & Format(a.oawarimp) & LINE_BREAK;
      end if;
      if( (a.subltamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUBLTAMT (Rent received from Subletting) [subltamt] : " & Format(a.subltamt) & LINE_BREAK;
      end if;
      if( (a.totcapb3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTCAPB3 (BU - Total capital - v3) [totcapb3] : " & Format(a.totcapb3) & LINE_BREAK;
      end if;
      if( (a.totsavbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTSAVBU (Recoded TOTSAV for benunit) [totsavbu] : " & Format(a.totsavbu) & LINE_BREAK;
      end if;
      if( (a.tuburent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TUBURENT (Take up - rent for bu) [tuburent] : " & Format(a.tuburent) & LINE_BREAK;
      end if;
      if( (a.youngch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YOUNGCH (Age of youngest child) [youngch] : " & Format(a.youngch) & LINE_BREAK;
      end if;
      if( (a.cbaamt1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CBAAMT1 (Estimated value of accounts/investments) [cbaamt1] : " & Format(a.cbaamt1) & LINE_BREAK;
      end if;
      if( (a.cbaamt2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CBAAMT2 (Estimated value of accounts/investments) [cbaamt2] : " & Format(a.cbaamt2) & LINE_BREAK;
      end if;
      if( (a.incold /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCOLD (Total income between April 2007 and March 2008) [incold] : " & Format(a.incold) & LINE_BREAK;
      end if;
      if( (a.loangvn1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN1 (Given or lent money regularly to family/friends in last 12m.) [loangvn1] : " & Format(a.loangvn1) & LINE_BREAK;
      end if;
      if( (a.loangvn2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN2 (Given or lent money sometimes to family/friends in last 12m.) [loangvn2] : " & Format(a.loangvn2) & LINE_BREAK;
      end if;
      if( (a.loangvn3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANGVN3 (Given or lent money to family/friends in last 12m.) [loangvn3] : " & Format(a.loangvn3) & LINE_BREAK;
      end if;
      if( (a.loanrec1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC1 (Given or lent money regularly by family/friends in last 12m.) [loanrec1] : " & Format(a.loanrec1) & LINE_BREAK;
      end if;
      if( (a.loanrec2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC2 (Given or lent money sometimes by family/friends in last 12m.) [loanrec2] : " & Format(a.loanrec2) & LINE_BREAK;
      end if;
      if( (a.loanrec3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANREC3 (Given or lent money by family/friends in last 12m.) [loanrec3] : " & Format(a.loanrec3) & LINE_BREAK;
      end if;
      if( (a.gross3_x /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3_X (Grossing Factor - Old Version) [gross3_x] : " & Format(a.gross3_x) & LINE_BREAK;
      end if;
      if( (a.totcapb2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTCAPB2 (BU - Total capital - v2) [totcapb2] : " & Format(a.totcapb2) & LINE_BREAK;
      end if;
      if( (a.actaccb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACTACCB (Adult in BU holds account capable of accepting Direct Paymen) [actaccb] : " & Format(a.actaccb) & LINE_BREAK;
      end if;
      if( (a.basactb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BASACTB (BU - No. of Basic Bank accounts held) [basactb] : " & Format(a.basactb) & LINE_BREAK;
      end if;
      if( (a.crunacb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CRUNACB (BU - No. of Credit Union held) [crunacb] : " & Format(a.crunacb) & LINE_BREAK;
      end if;
      if( (a.curactb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CURACTB (BU - No. of Current accounts held) [curactb] : " & Format(a.curactb) & LINE_BREAK;
      end if;
      if( (a.depdeds /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPDEDS (BU - Non-dependency Class) [depdeds] : " & Format(a.depdeds) & LINE_BREAK;
      end if;
      if( (a.ecotypbu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ECOTYPBU (Economic status indicator - HBAI equivalent) [ecotypbu] : " & Format(a.ecotypbu) & LINE_BREAK;
      end if;
      if( (a.enomortb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENOMORTB (BU - No. of Endowment not linked to a mortgage held) [enomortb] : " & Format(a.enomortb) & LINE_BREAK;
      end if;
      if( (a.famtype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTYPE (Family type) [famtype] : " & Format(a.famtype) & LINE_BREAK;
      end if;
      if( (a.fsbndctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSBNDCTB (BU - No. of Fixed Rate Bonds held) [fsbndctb] : " & Format(a.fsbndctb) & LINE_BREAK;
      end if;
      if( (a.gebactb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GEBACTB (BU - No. of Guaranteed Equity Bonds held) [gebactb] : " & Format(a.gebactb) & LINE_BREAK;
      end if;
      if( (a.giltctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GILTCTB (BU - No. of Gilts held) [giltctb] : " & Format(a.giltctb) & LINE_BREAK;
      end if;
      if( (a.isactb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISACTB (BU - No. of ISAs held) [isactb] : " & Format(a.isactb) & LINE_BREAK;
      end if;
      if( (a.lastwork /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LASTWORK (Time since head last worked - Pub.) [lastwork] : " & Format(a.lastwork) & LINE_BREAK;
      end if;
      if( (a.nsboctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NSBOCTB (BU - No. of National savings held) [nsboctb] : " & Format(a.nsboctb) & LINE_BREAK;
      end if;
      if( (a.otbsctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTBSCTB (BU - No. of Other building Soc held) [otbsctb] : " & Format(a.otbsctb) & LINE_BREAK;
      end if;
      if( (a.pepsctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PEPSCTB (BU - No. of PEPs held) [pepsctb] : " & Format(a.pepsctb) & LINE_BREAK;
      end if;
      if( (a.poacctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POACCTB (BU - No. of PO accounts held) [poacctb] : " & Format(a.poacctb) & LINE_BREAK;
      end if;
      if( (a.pocardb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POCARDB (BU - No. of Post Office Card Account) [pocardb] : " & Format(a.pocardb) & LINE_BREAK;
      end if;
      if( (a.prboctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRBOCTB (BU - No. of Premium bonds held) [prboctb] : " & Format(a.prboctb) & LINE_BREAK;
      end if;
      if( (a.sayectb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAYECTB (BU - No. of Save as you earn held) [sayectb] : " & Format(a.sayectb) & LINE_BREAK;
      end if;
      if( (a.sclbctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCLBCTB (BU - No. of Member of Share Club) [sclbctb] : " & Format(a.sclbctb) & LINE_BREAK;
      end if;
      if( (a.ssctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSCTB (BU - No. of Participation in Company Share Schemes) [ssctb] : " & Format(a.ssctb) & LINE_BREAK;
      end if;
      if( (a.stshctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STSHCTB (BU - No. of Stocks and shares held) [stshctb] : " & Format(a.stshctb) & LINE_BREAK;
      end if;
      if( (a.tessctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TESSCTB (BU - No. of TESSAs held) [tessctb] : " & Format(a.tessctb) & LINE_BREAK;
      end if;
      if( (a.untrctb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNTRCTB (BU - No. of Unit trusts held) [untrctb] : " & Format(a.untrctb) & LINE_BREAK;
      end if;
      if( (a.famthbai /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTHBAI (Family type - HBAI definition) [famthbai] : " & Format(a.famthbai) & LINE_BREAK;
      end if;
      if( (a.fwmlkbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FWMLKBU (BU - Value of Free welfare milk) [fwmlkbu] : " & Format(a.fwmlkbu) & LINE_BREAK;
      end if;
      if( (a.totcapbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTCAPBU (BU - Total capital - original) [totcapbu] : " & Format(a.totcapbu) & LINE_BREAK;
      end if;
      if( (a.kid1618 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID1618 (No. of dependant children aged 16-18 inc.) [kid1618] : " & Format(a.kid1618) & LINE_BREAK;
      end if;
      if( (a.buethgrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUETHGRP (Ethnicity of Head of Benefit Unit (Pub. Pre-2003-04)) [buethgrp] : " & Format(a.buethgrp) & LINE_BREAK;
      end if;
      if( (a.kidsbu0 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU0 (Number of Dependents under age 1) [kidsbu0] : " & Format(a.kidsbu0) & LINE_BREAK;
      end if;
      if( (a.kidsbu1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU1 (Number of Dependents aged 1) [kidsbu1] : " & Format(a.kidsbu1) & LINE_BREAK;
      end if;
      if( (a.kidsbu10 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU10 (Number of Dependents aged 10) [kidsbu10] : " & Format(a.kidsbu10) & LINE_BREAK;
      end if;
      if( (a.kidsbu11 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU11 (Number of Dependents aged 11) [kidsbu11] : " & Format(a.kidsbu11) & LINE_BREAK;
      end if;
      if( (a.kidsbu12 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU12 (Number of Dependents aged 12) [kidsbu12] : " & Format(a.kidsbu12) & LINE_BREAK;
      end if;
      if( (a.kidsbu13 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU13 (Number of Dependents aged 13) [kidsbu13] : " & Format(a.kidsbu13) & LINE_BREAK;
      end if;
      if( (a.kidsbu14 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU14 (Number of Dependents aged 14) [kidsbu14] : " & Format(a.kidsbu14) & LINE_BREAK;
      end if;
      if( (a.kidsbu15 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU15 (Number of Dependents aged 15) [kidsbu15] : " & Format(a.kidsbu15) & LINE_BREAK;
      end if;
      if( (a.kidsbu16 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU16 (Number of Dependents aged 16) [kidsbu16] : " & Format(a.kidsbu16) & LINE_BREAK;
      end if;
      if( (a.kidsbu17 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU17 (Number of Dependents aged 17) [kidsbu17] : " & Format(a.kidsbu17) & LINE_BREAK;
      end if;
      if( (a.kidsbu18 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU18 (Number of Dependents aged 18) [kidsbu18] : " & Format(a.kidsbu18) & LINE_BREAK;
      end if;
      if( (a.kidsbu2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU2 (Number of Dependents aged 2) [kidsbu2] : " & Format(a.kidsbu2) & LINE_BREAK;
      end if;
      if( (a.kidsbu3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU3 (Number of Dependents aged 3) [kidsbu3] : " & Format(a.kidsbu3) & LINE_BREAK;
      end if;
      if( (a.kidsbu4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU4 (Number of Dependents aged 4) [kidsbu4] : " & Format(a.kidsbu4) & LINE_BREAK;
      end if;
      if( (a.kidsbu5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU5 (Number of Dependents aged 5) [kidsbu5] : " & Format(a.kidsbu5) & LINE_BREAK;
      end if;
      if( (a.kidsbu6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU6 (Number of Dependents aged 6) [kidsbu6] : " & Format(a.kidsbu6) & LINE_BREAK;
      end if;
      if( (a.kidsbu7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU7 (Number of Dependents aged 7) [kidsbu7] : " & Format(a.kidsbu7) & LINE_BREAK;
      end if;
      if( (a.kidsbu8 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU8 (Number of Dependents aged 8) [kidsbu8] : " & Format(a.kidsbu8) & LINE_BREAK;
      end if;
      if( (a.kidsbu9 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU9 (Number of Dependents aged 9) [kidsbu9] : " & Format(a.kidsbu9) & LINE_BREAK;
      end if;
      if( (a.gross2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS2 (Grossing Factor (December 2002)) [gross2] : " & Format(a.gross2) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Care_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Care";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.needper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEEDPER (Person receiving help) [needper] : " & Format(a.needper) & LINE_BREAK;
      end if;
      if( (a.daynight /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DAYNIGHT (Whether help given day or night or both) [daynight] : " & Format(a.daynight) & LINE_BREAK;
      end if;
      if( (a.freq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FREQ (Frequency of help) [freq] : " & Format(a.freq) & LINE_BREAK;
      end if;
      if( (a.hour01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR01 (Hours spent given care by person 1) [hour01] : " & Format(a.hour01) & LINE_BREAK;
      end if;
      if( (a.hour02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR02 (Hours spent given care by person 2) [hour02] : " & Format(a.hour02) & LINE_BREAK;
      end if;
      if( (a.hour03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR03 (Hours spent given care by person 3) [hour03] : " & Format(a.hour03) & LINE_BREAK;
      end if;
      if( (a.hour04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR04 (Hours spent given care by person 4) [hour04] : " & Format(a.hour04) & LINE_BREAK;
      end if;
      if( (a.hour05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR05 (Hours spent given care by person 5) [hour05] : " & Format(a.hour05) & LINE_BREAK;
      end if;
      if( (a.hour06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR06 (Hours spent given care by person 6) [hour06] : " & Format(a.hour06) & LINE_BREAK;
      end if;
      if( (a.hour07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR07 (Hours spent given care by person 7) [hour07] : " & Format(a.hour07) & LINE_BREAK;
      end if;
      if( (a.hour08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR08 (Hours spent given care by person 8) [hour08] : " & Format(a.hour08) & LINE_BREAK;
      end if;
      if( (a.hour09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR09 (Hours spent given care by person 9) [hour09] : " & Format(a.hour09) & LINE_BREAK;
      end if;
      if( (a.hour10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR10 (Hours spent given care by person 10) [hour10] : " & Format(a.hour10) & LINE_BREAK;
      end if;
      if( (a.hour11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR11 (Hours spent given care by person 11) [hour11] : " & Format(a.hour11) & LINE_BREAK;
      end if;
      if( (a.hour12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR12 (Hours spent given care by person 12) [hour12] : " & Format(a.hour12) & LINE_BREAK;
      end if;
      if( (a.hour13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR13 (Hours spent given care by person 13) [hour13] : " & Format(a.hour13) & LINE_BREAK;
      end if;
      if( (a.hour14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR14 (Hours spent given care by person 14) [hour14] : " & Format(a.hour14) & LINE_BREAK;
      end if;
      if( (a.hour15 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR15 (Hours spent given care by Relative) [hour15] : " & Format(a.hour15) & LINE_BREAK;
      end if;
      if( (a.hour16 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR16 (Hours spent given care by Friends) [hour16] : " & Format(a.hour16) & LINE_BREAK;
      end if;
      if( (a.hour17 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR17 (Hours spent given care by LA Help) [hour17] : " & Format(a.hour17) & LINE_BREAK;
      end if;
      if( (a.hour18 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR18 (Hours spent given care by Domestic) [hour18] : " & Format(a.hour18) & LINE_BREAK;
      end if;
      if( (a.hour19 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR19 (Hours spent given care by Nurse) [hour19] : " & Format(a.hour19) & LINE_BREAK;
      end if;
      if( (a.hour20 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUR20 (Hours spent given care by Helpers) [hour20] : " & Format(a.hour20) & LINE_BREAK;
      end if;
      if( (a.howlng01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG01 (How long spent given care by person 1) [howlng01] : " & Format(a.howlng01) & LINE_BREAK;
      end if;
      if( (a.howlng02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG02 (How long spent given care by person 2) [howlng02] : " & Format(a.howlng02) & LINE_BREAK;
      end if;
      if( (a.howlng03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG03 (How long spent given care by person 3) [howlng03] : " & Format(a.howlng03) & LINE_BREAK;
      end if;
      if( (a.howlng04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG04 (How long spent given care by person 4) [howlng04] : " & Format(a.howlng04) & LINE_BREAK;
      end if;
      if( (a.howlng05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG05 (How long spent given care by person 5) [howlng05] : " & Format(a.howlng05) & LINE_BREAK;
      end if;
      if( (a.howlng06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG06 (How long spent given care by person 6) [howlng06] : " & Format(a.howlng06) & LINE_BREAK;
      end if;
      if( (a.howlng07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG07 (How long spent given care by person 7) [howlng07] : " & Format(a.howlng07) & LINE_BREAK;
      end if;
      if( (a.howlng08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG08 (How long spent given care by person 8) [howlng08] : " & Format(a.howlng08) & LINE_BREAK;
      end if;
      if( (a.howlng09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG09 (How long spent given care by person 9) [howlng09] : " & Format(a.howlng09) & LINE_BREAK;
      end if;
      if( (a.howlng10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG10 (How long spent given care by person 10) [howlng10] : " & Format(a.howlng10) & LINE_BREAK;
      end if;
      if( (a.howlng11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG11 (How long spent given care by person 11) [howlng11] : " & Format(a.howlng11) & LINE_BREAK;
      end if;
      if( (a.howlng12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG12 (How long spent given care by person 12) [howlng12] : " & Format(a.howlng12) & LINE_BREAK;
      end if;
      if( (a.howlng13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG13 (How long spent given care by person 13) [howlng13] : " & Format(a.howlng13) & LINE_BREAK;
      end if;
      if( (a.howlng14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG14 (How long spent given care by person 14) [howlng14] : " & Format(a.howlng14) & LINE_BREAK;
      end if;
      if( (a.howlng15 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG15 (How long spent given care by Relative) [howlng15] : " & Format(a.howlng15) & LINE_BREAK;
      end if;
      if( (a.howlng16 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG16 (How long spent given care by Friends) [howlng16] : " & Format(a.howlng16) & LINE_BREAK;
      end if;
      if( (a.howlng17 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG17 (How long spent given care by LA Help) [howlng17] : " & Format(a.howlng17) & LINE_BREAK;
      end if;
      if( (a.howlng18 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG18 (How long spent given care by Domestic) [howlng18] : " & Format(a.howlng18) & LINE_BREAK;
      end if;
      if( (a.howlng19 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG19 (How long spent given care by Nurse) [howlng19] : " & Format(a.howlng19) & LINE_BREAK;
      end if;
      if( (a.howlng20 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOWLNG20 (How long spent given care by Helpers) [howlng20] : " & Format(a.howlng20) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.wholoo01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO01 (Whether care given by person 1) [wholoo01] : " & Format(a.wholoo01) & LINE_BREAK;
      end if;
      if( (a.wholoo02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO02 (Whether care given by person 2) [wholoo02] : " & Format(a.wholoo02) & LINE_BREAK;
      end if;
      if( (a.wholoo03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO03 (Whether care given by person 3) [wholoo03] : " & Format(a.wholoo03) & LINE_BREAK;
      end if;
      if( (a.wholoo04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO04 (Whether care given by person 4) [wholoo04] : " & Format(a.wholoo04) & LINE_BREAK;
      end if;
      if( (a.wholoo05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO05 (Whether care given by person 5) [wholoo05] : " & Format(a.wholoo05) & LINE_BREAK;
      end if;
      if( (a.wholoo06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO06 (Whether care given by person 6) [wholoo06] : " & Format(a.wholoo06) & LINE_BREAK;
      end if;
      if( (a.wholoo07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO07 (Whether care given by person 7) [wholoo07] : " & Format(a.wholoo07) & LINE_BREAK;
      end if;
      if( (a.wholoo08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO08 (Whether care given by person 8) [wholoo08] : " & Format(a.wholoo08) & LINE_BREAK;
      end if;
      if( (a.wholoo09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO09 (Whether care given by person 9) [wholoo09] : " & Format(a.wholoo09) & LINE_BREAK;
      end if;
      if( (a.wholoo10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO10 (Whether care given by person 10) [wholoo10] : " & Format(a.wholoo10) & LINE_BREAK;
      end if;
      if( (a.wholoo11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO11 (Whether care given by Person 11) [wholoo11] : " & Format(a.wholoo11) & LINE_BREAK;
      end if;
      if( (a.wholoo12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO12 (Whether care given by Person 12) [wholoo12] : " & Format(a.wholoo12) & LINE_BREAK;
      end if;
      if( (a.wholoo13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO13 (Whether care given by Person 13) [wholoo13] : " & Format(a.wholoo13) & LINE_BREAK;
      end if;
      if( (a.wholoo14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO14 (Whether care given by Person 14) [wholoo14] : " & Format(a.wholoo14) & LINE_BREAK;
      end if;
      if( (a.wholoo15 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO15 (Whether care given by Relatives) [wholoo15] : " & Format(a.wholoo15) & LINE_BREAK;
      end if;
      if( (a.wholoo16 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO16 (Whether care given by Friends) [wholoo16] : " & Format(a.wholoo16) & LINE_BREAK;
      end if;
      if( (a.wholoo17 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO17 (Whether care given by LA help) [wholoo17] : " & Format(a.wholoo17) & LINE_BREAK;
      end if;
      if( (a.wholoo18 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO18 (Whether care given by Domestic) [wholoo18] : " & Format(a.wholoo18) & LINE_BREAK;
      end if;
      if( (a.wholoo19 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO19 (Whether care given by Nurse) [wholoo19] : " & Format(a.wholoo19) & LINE_BREAK;
      end if;
      if( (a.wholoo20 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOLOO20 (Whether care given by Helpers) [wholoo20] : " & Format(a.wholoo20) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Child_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Child";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.adeduc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADEDUC (Type of school/college attending) [adeduc] : " & Format(a.adeduc) & LINE_BREAK;
      end if;
      if( (a.age /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGE (Age of child last birthday) [age] : " & Format(a.age) & LINE_BREAK;
      end if;
      if( (a.care /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARE (Whether childcare arrangements made) [care] : " & Format(a.care) & LINE_BREAK;
      end if;
      if( (a.cddaprg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDDAPRG (Progressive health condition) [cddaprg] : " & Format(a.cddaprg) & LINE_BREAK;
      end if;
      if( (a.cddatre /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDDATRE (Difficulties - Without medication) [cddatre] : " & Format(a.cddatre) & LINE_BREAK;
      end if;
      if( (a.cddatrep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDDATREP (Illness/disability limited activities) [cddatrep] : " & Format(a.cddatrep) & LINE_BREAK;
      end if;
      if( (a.cdisdif1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF1 (Difficulty in Mobility (moving about)) [cdisdif1] : " & Format(a.cdisdif1) & LINE_BREAK;
      end if;
      if( (a.cdisdif2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF2 (Difficulty with Lifting, carrying or moving objects) [cdisdif2] : " & Format(a.cdisdif2) & LINE_BREAK;
      end if;
      if( (a.cdisdif3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF3 (Difficulty with Manual dexterity using hands for daily tasks) [cdisdif3] : " & Format(a.cdisdif3) & LINE_BREAK;
      end if;
      if( (a.cdisdif4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF4 (Difficulty - Continence (bladder/bowel control)) [cdisdif4] : " & Format(a.cdisdif4) & LINE_BREAK;
      end if;
      if( (a.cdisdif5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF5 (Difficulty with Communication (speech, hearing or eyesight)) [cdisdif5] : " & Format(a.cdisdif5) & LINE_BREAK;
      end if;
      if( (a.cdisdif6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF6 (Difficulty with Memory/concentration/learning/understanding) [cdisdif6] : " & Format(a.cdisdif6) & LINE_BREAK;
      end if;
      if( (a.cdisdif7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF7 (Difficulty with Recognising when in physical danger) [cdisdif7] : " & Format(a.cdisdif7) & LINE_BREAK;
      end if;
      if( (a.cdisdif8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF8 (Difficulty with your physical co-ordination) [cdisdif8] : " & Format(a.cdisdif8) & LINE_BREAK;
      end if;
      if( (a.cdisdif9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIF9 (Difficulty in Other area of life) [cdisdif9] : " & Format(a.cdisdif9) & LINE_BREAK;
      end if;
      if( (a.cdisdifp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CDISDIFP (Ever had any long standing illness/disability) [cdisdifp] : " & Format(a.cdisdifp) & LINE_BREAK;
      end if;
      if( (a.cfund /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CFUND (Does child have a Child Trust Fund?) [cfund] : " & Format(a.cfund) & LINE_BREAK;
      end if;
      if( (a.cfundh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CFUNDH (Total in Child Trust Fund) [cfundh] : " & Format(a.cfundh) & LINE_BREAK;
      end if;
      if( (a.cfundtp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CFUNDTP (Child Trust Fund Type) [cfundtp] : " & Format(a.cfundtp) & LINE_BREAK;
      end if;
      if( (a.chamtern /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMTERN (Earnings received from spare time job) [chamtern] : " & Format(a.chamtern) & LINE_BREAK;
      end if;
      if( (a.chamttst /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMTTST (Income received from a Trust) [chamttst] : " & Format(a.chamttst) & LINE_BREAK;
      end if;
      if( (a.chca /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHCA (Does helper receive Carer's Allowance in his/her own right?) [chca] : " & Format(a.chca) & LINE_BREAK;
      end if;
      if( (a.chdla1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHDLA1 (Whether receives CARE COMPONENT of DLA) [chdla1] : " & Format(a.chdla1) & LINE_BREAK;
      end if;
      if( (a.chdla2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHDLA2 (Whether receives MOBILITY COMPONENT DLA) [chdla2] : " & Format(a.chdla2) & LINE_BREAK;
      end if;
      if( (a.chealth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEALTH (Any long standing illness/disability) [chealth] : " & Format(a.chealth) & LINE_BREAK;
      end if;
      if( (a.chearns1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEARNS1 (Child Earnings: Spare time job) [chearns1] : " & Format(a.chearns1) & LINE_BREAK;
      end if;
      if( (a.chearns2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEARNS2 (Child Earnings: Employment training) [chearns2] : " & Format(a.chearns2) & LINE_BREAK;
      end if;
      if( (a.chearns3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEARNS3 (Child Earnings: Trust) [chearns3] : " & Format(a.chearns3) & LINE_BREAK;
      end if;
      if( (a.chema /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEMA (Whether Child EMA Earnings) [chema] : " & Format(a.chema) & LINE_BREAK;
      end if;
      if( (a.chemaamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEMAAMT (Amount of Child EMA Earnings) [chemaamt] : " & Format(a.chemaamt) & LINE_BREAK;
      end if;
      if( (a.chemapd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEMAPD (Pcode: Child EMA Earnings) [chemapd] : " & Format(a.chemapd) & LINE_BREAK;
      end if;
      if( (a.chpdern /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPDERN (Pcode: earnings received from job) [chpdern] : " & Format(a.chpdern) & LINE_BREAK;
      end if;
      if( (a.chpdtst /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPDTST (Pcode: income received from a Trust) [chpdtst] : " & Format(a.chpdtst) & LINE_BREAK;
      end if;
      if( (a.chprob /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPROB (Illness/disability limits activities) [chprob] : " & Format(a.chprob) & LINE_BREAK;
      end if;
      if( (a.chsave /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHSAVE (Any savings, bonds, stocks, shares etc) [chsave] : " & Format(a.chsave) & LINE_BREAK;
      end if;
      if( (a.chtrnamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHTRNAMT (Amount from employment training 16-19 year olds only) [chtrnamt] : " & Format(a.chtrnamt) & LINE_BREAK;
      end if;
      if( (a.chtrnpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHTRNPD (Pcode: Employment Training  Earnings 16-19 year olds only) [chtrnpd] : " & Format(a.chtrnpd) & LINE_BREAK;
      end if;
      if( (a.cohabit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COHABIT (Whether cohabitee) [cohabit] : " & Format(a.cohabit) & LINE_BREAK;
      end if;
      if( (a.convbl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONVBL (Whether person boarder/lodger) [convbl] : " & Format(a.convbl) & LINE_BREAK;
      end if;
      if( (a.cvht /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVHT (Whether heating incl (boarders/lodgers)) [cvht] : " & Format(a.cvht) & LINE_BREAK;
      end if;
      if( (a.cvpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVPAY (Amount of rent after HB (boarders/lodgers)) [cvpay] : " & Format(a.cvpay) & LINE_BREAK;
      end if;
      if( (a.cvpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CVPD (Pcode: amount of rent after HB (boarders/lodgers)) [cvpd] : " & Format(a.cvpd) & LINE_BREAK;
      end if;
      if( (a.depend /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPEND (Status indicator for adult) [depend] : " & Format(a.depend) & LINE_BREAK;
      end if;
      if( (a.dob /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DOB (Date of Birth) [dob] : " & Format(a.dob) & LINE_BREAK;
      end if;
      if( (a.eligadlt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGADLT (Eligible Adult (derived)) [eligadlt] : " & Format(a.eligadlt) & LINE_BREAK;
      end if;
      if( (a.eligchld /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGCHLD (Eligible Child (derived)) [eligchld] : " & Format(a.eligchld) & LINE_BREAK;
      end if;
      if( (a.fted /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FTED (Whether presently in full time education) [fted] : " & Format(a.fted) & LINE_BREAK;
      end if;
      if( (a.fundamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT1 (How much did parent put into fund) [fundamt1] : " & Format(a.fundamt1) & LINE_BREAK;
      end if;
      if( (a.fundamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT2 (How much did outside hh parent put into fund) [fundamt2] : " & Format(a.fundamt2) & LINE_BREAK;
      end if;
      if( (a.fundamt3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT3 (How much did Grandparents put into fund) [fundamt3] : " & Format(a.fundamt3) & LINE_BREAK;
      end if;
      if( (a.fundamt4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT4 (How much did Other relatives put into fund) [fundamt4] : " & Format(a.fundamt4) & LINE_BREAK;
      end if;
      if( (a.fundamt5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT5 (How much did Friend put into fund) [fundamt5] : " & Format(a.fundamt5) & LINE_BREAK;
      end if;
      if( (a.fundamt6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUNDAMT6 (How much did Other put into fund) [fundamt6] : " & Format(a.fundamt6) & LINE_BREAK;
      end if;
      if( (a.givcfnd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND1 (CTF Cont: Child’s Parent inside household) [givcfnd1] : " & Format(a.givcfnd1) & LINE_BREAK;
      end if;
      if( (a.givcfnd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND2 (CTF Cont: Child’s Parent outside household) [givcfnd2] : " & Format(a.givcfnd2) & LINE_BREAK;
      end if;
      if( (a.givcfnd3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND3 (CTF Cont: Child’s Grandparents) [givcfnd3] : " & Format(a.givcfnd3) & LINE_BREAK;
      end if;
      if( (a.givcfnd4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND4 (CTF Cont: Child’s Other relatives) [givcfnd4] : " & Format(a.givcfnd4) & LINE_BREAK;
      end if;
      if( (a.givcfnd5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND5 (CTF Cont: Friend of the family) [givcfnd5] : " & Format(a.givcfnd5) & LINE_BREAK;
      end if;
      if( (a.givcfnd6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVCFND6 (CTF Cont: Other) [givcfnd6] : " & Format(a.givcfnd6) & LINE_BREAK;
      end if;
      if( (a.grant /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRANT (Whether receiving an award) [grant] : " & Format(a.grant) & LINE_BREAK;
      end if;
      if( (a.grtamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTAMT1 (Current value of 1st award (excl fees)) [grtamt1] : " & Format(a.grtamt1) & LINE_BREAK;
      end if;
      if( (a.grtamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTAMT2 (Current value of 2nd award (excl fees)) [grtamt2] : " & Format(a.grtamt2) & LINE_BREAK;
      end if;
      if( (a.grtdir1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTDIR1 (Amount of 1st award paid direct) [grtdir1] : " & Format(a.grtdir1) & LINE_BREAK;
      end if;
      if( (a.grtdir2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTDIR2 (Amount of 2nd award paid direct) [grtdir2] : " & Format(a.grtdir2) & LINE_BREAK;
      end if;
      if( (a.grtnum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTNUM (Number of awards or scholarships) [grtnum] : " & Format(a.grtnum) & LINE_BREAK;
      end if;
      if( (a.grtsce1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTSCE1 (Source of first award) [grtsce1] : " & Format(a.grtsce1) & LINE_BREAK;
      end if;
      if( (a.grtsce2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTSCE2 (Source of second award) [grtsce2] : " & Format(a.grtsce2) & LINE_BREAK;
      end if;
      if( (a.grtval1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTVAL1 (Current value of 1st award (incl fees)) [grtval1] : " & Format(a.grtval1) & LINE_BREAK;
      end if;
      if( (a.grtval2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRTVAL2 (Current value of 2nd award (incl fees)) [grtval2] : " & Format(a.grtval2) & LINE_BREAK;
      end if;
      if( (a.hholder /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHOLDER (Householder status) [hholder] : " & Format(a.hholder) & LINE_BREAK;
      end if;
      if( (a.hsvper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HSVPER (Receives Healthy Start Vouchers) [hsvper] : " & Format(a.hsvper) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.lareg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LAREG (Whether registered disabled (LA/SS)) [lareg] : " & Format(a.lareg) & LINE_BREAK;
      end if;
      if( (a.mednum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDNUM (Number of prscrptn items in last 4 weeks) [mednum] : " & Format(a.mednum) & LINE_BREAK;
      end if;
      if( (a.medprpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDPRPD (Period pre-payment certificate covers) [medprpd] : " & Format(a.medprpd) & LINE_BREAK;
      end if;
      if( (a.medprpy /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDPRPY (Whether had a pre-payment certificate for last 4 weeks) [medprpy] : " & Format(a.medprpy) & LINE_BREAK;
      end if;
      if( (a.ms /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MS (Marital status) [ms] : " & Format(a.ms) & LINE_BREAK;
      end if;
      if( (a.parent1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PARENT1 (Person number of 1st parent) [parent1] : " & Format(a.parent1) & LINE_BREAK;
      end if;
      if( (a.parent2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PARENT2 (Person number of 2nd parent) [parent2] : " & Format(a.parent2) & LINE_BREAK;
      end if;
      if( (a.r01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R01 (Relationship to person 1) [r01] : " & Format(a.r01) & LINE_BREAK;
      end if;
      if( (a.r02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R02 (Relationship to person 2) [r02] : " & Format(a.r02) & LINE_BREAK;
      end if;
      if( (a.r03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R03 (Relationship to person 3) [r03] : " & Format(a.r03) & LINE_BREAK;
      end if;
      if( (a.r04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R04 (Relationship to person 4) [r04] : " & Format(a.r04) & LINE_BREAK;
      end if;
      if( (a.r05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R05 (Relationship to person 5) [r05] : " & Format(a.r05) & LINE_BREAK;
      end if;
      if( (a.r06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R06 (Relationship to person 6) [r06] : " & Format(a.r06) & LINE_BREAK;
      end if;
      if( (a.r07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R07 (Relationship to person 7) [r07] : " & Format(a.r07) & LINE_BREAK;
      end if;
      if( (a.r08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R08 (Relationship to person 8) [r08] : " & Format(a.r08) & LINE_BREAK;
      end if;
      if( (a.r09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R09 (Relationship to person 9) [r09] : " & Format(a.r09) & LINE_BREAK;
      end if;
      if( (a.r10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R10 (Relationship to person 10) [r10] : " & Format(a.r10) & LINE_BREAK;
      end if;
      if( (a.r11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R11 (Relationship to person 11) [r11] : " & Format(a.r11) & LINE_BREAK;
      end if;
      if( (a.r12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R12 (Relationship to person 12) [r12] : " & Format(a.r12) & LINE_BREAK;
      end if;
      if( (a.r13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R13 (Relationship to person 13) [r13] : " & Format(a.r13) & LINE_BREAK;
      end if;
      if( (a.r14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "R14 (Relationship to person 14) [r14] : " & Format(a.r14) & LINE_BREAK;
      end if;
      if( (a.schchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCHCHK (Whether Child Benefit still received for this person) [schchk] : " & Format(a.schchk) & LINE_BREAK;
      end if;
      if( (a.sex /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEX (Sex) [sex] : " & Format(a.sex) & LINE_BREAK;
      end if;
      if( (a.smkit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SMKIT (Bottles of free school milk in last week) [smkit] : " & Format(a.smkit) & LINE_BREAK;
      end if;
      if( (a.smlit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SMLIT (Free school meals in last week) [smlit] : " & Format(a.smlit) & LINE_BREAK;
      end if;
      if( (a.spcreg1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG1 (Whether registered blind with LA) [spcreg1] : " & Format(a.spcreg1) & LINE_BREAK;
      end if;
      if( (a.spcreg2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG2 (Whether LA registered partially sighted) [spcreg2] : " & Format(a.spcreg2) & LINE_BREAK;
      end if;
      if( (a.spcreg3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPCREG3 (Whether registered as deaf with LA) [spcreg3] : " & Format(a.spcreg3) & LINE_BREAK;
      end if;
      if( (a.spout /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPOUT (Why no spouse in Household) [spout] : " & Format(a.spout) & LINE_BREAK;
      end if;
      if( (a.srentamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SRENTAMT (Amount of rent paid (shared HH 2nd+BU)) [srentamt] : " & Format(a.srentamt) & LINE_BREAK;
      end if;
      if( (a.srentpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SRENTPD (Pcode: amount of rent paid (shared HHs)) [srentpd] : " & Format(a.srentpd) & LINE_BREAK;
      end if;
      if( (a.totsave /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTSAVE (Estimated value of accounts/investments) [totsave] : " & Format(a.totsave) & LINE_BREAK;
      end if;
      if( (a.trainee /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRAINEE (Whether on a government scheme for employment training) [trainee] : " & Format(a.trainee) & LINE_BREAK;
      end if;
      if( (a.typeed /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TYPEED (Type of school or college attended) [typeed] : " & Format(a.typeed) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.careab /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREAB (Number of Adults looked after in BU) [careab] : " & Format(a.careab) & LINE_BREAK;
      end if;
      if( (a.careah /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREAH (Number of Adults looked after in diff BU) [careah] : " & Format(a.careah) & LINE_BREAK;
      end if;
      if( (a.carecb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECB (Number of Children looked after in BU) [carecb] : " & Format(a.carecb) & LINE_BREAK;
      end if;
      if( (a.carech /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECH (Number of Children looked after in diff BU) [carech] : " & Format(a.carech) & LINE_BREAK;
      end if;
      if( (a.carecl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARECL (Whether Client of Vol Org looked after) [carecl] : " & Format(a.carecl) & LINE_BREAK;
      end if;
      if( (a.carefl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREFL (Whether child is an informal carer) [carefl] : " & Format(a.carefl) & LINE_BREAK;
      end if;
      if( (a.carefr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREFR (Whether Friends looked after outside the HH) [carefr] : " & Format(a.carefr) & LINE_BREAK;
      end if;
      if( (a.careot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAREOT (Whether Others outside HH looked after) [careot] : " & Format(a.careot) & LINE_BREAK;
      end if;
      if( (a.carere /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARERE (Number of Relatives looked after outside HH) [carere] : " & Format(a.carere) & LINE_BREAK;
      end if;
      if( (a.chdda /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHDDA (Whether child has a DDA defined disability) [chdda] : " & Format(a.chdda) & LINE_BREAK;
      end if;
      if( (a.chearns /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHEARNS (Child - Income from Employment) [chearns] : " & Format(a.chearns) & LINE_BREAK;
      end if;
      if( (a.chincdv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINCDV (Child - Total income) [chincdv] : " & Format(a.chincdv) & LINE_BREAK;
      end if;
      if( (a.chrinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRINC (Child - Remaining income) [chrinc] : " & Format(a.chrinc) & LINE_BREAK;
      end if;
      if( (a.disdifch /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISDIFCH (Disability, publication definition) [disdifch] : " & Format(a.disdifch) & LINE_BREAK;
      end if;
      if( (a.fsmlkval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMLKVAL (Child - Value of Free school milk) [fsmlkval] : " & Format(a.fsmlkval) & LINE_BREAK;
      end if;
      if( (a.fsmval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMVAL (Child - Value of Free school meals) [fsmval] : " & Format(a.fsmval) & LINE_BREAK;
      end if;
      if( (a.hdagech /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDAGECH (Child age) [hdagech] : " & Format(a.hdagech) & LINE_BREAK;
      end if;
      if( (a.heartval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEARTVAL (Child - Value of Healthy Start Voucher(s)) [heartval] : " & Format(a.heartval) & LINE_BREAK;
      end if;
      if( (a.hourab /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURAB (Hours looking after adults in same BU) [hourab] : " & Format(a.hourab) & LINE_BREAK;
      end if;
      if( (a.hourah /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURAH (Hours looking after adults different BU) [hourah] : " & Format(a.hourah) & LINE_BREAK;
      end if;
      if( (a.hourcb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCB (Hours looking after children in same BU) [hourcb] : " & Format(a.hourcb) & LINE_BREAK;
      end if;
      if( (a.hourch /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCH (Hours looking after children in diff BU) [hourch] : " & Format(a.hourch) & LINE_BREAK;
      end if;
      if( (a.hourcl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURCL (Hours looking after client of Vol Org) [hourcl] : " & Format(a.hourcl) & LINE_BREAK;
      end if;
      if( (a.hourfr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURFR (Hours looking after friends outside HH) [hourfr] : " & Format(a.hourfr) & LINE_BREAK;
      end if;
      if( (a.hourot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOUROT (Hours looking after others outside HH) [hourot] : " & Format(a.hourot) & LINE_BREAK;
      end if;
      if( (a.hourre /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURRE (Hours looking after relatives outside HH) [hourre] : " & Format(a.hourre) & LINE_BREAK;
      end if;
      if( (a.hourtot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURTOT (Total hours providing informal care) [hourtot] : " & Format(a.hourtot) & LINE_BREAK;
      end if;
      if( (a.hperson /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPERSON (Child - Person number within Household) [hperson] : " & Format(a.hperson) & LINE_BREAK;
      end if;
      if( (a.iagegr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGR2 (Individual Child 10 Year Age Bands - Pub.) [iagegr2] : " & Format(a.iagegr2) & LINE_BREAK;
      end if;
      if( (a.iagegrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IAGEGRP (Individual Child 5 Year Age Bands - Pub.) [iagegrp] : " & Format(a.iagegrp) & LINE_BREAK;
      end if;
      if( (a.relhrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RELHRP (Childs relationship to HRP) [relhrp] : " & Format(a.relhrp) & LINE_BREAK;
      end if;
      if( (a.totgntch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTGNTCH (Child - Educational grants) [totgntch] : " & Format(a.totgntch) & LINE_BREAK;
      end if;
      if( (a.tuacam /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TUACAM (Take Up - Applicable childcare amount) [tuacam] : " & Format(a.tuacam) & LINE_BREAK;
      end if;
      if( (a.uperson /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UPERSON (Child - Person number within benefit unit) [uperson] : " & Format(a.uperson) & LINE_BREAK;
      end if;
      if( (a.xbonflag /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "XBONFLAG (Child - Christmas Bonus eligibility) [xbonflag] : " & Format(a.xbonflag) & LINE_BREAK;
      end if;
      if( (a.chwkern /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHWKERN (Number of weeks held spare time job) [chwkern] : " & Format(a.chwkern) & LINE_BREAK;
      end if;
      if( (a.chwktst /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHWKTST (Number of weeks had income from a Trust) [chwktst] : " & Format(a.chwktst) & LINE_BREAK;
      end if;
      if( (a.chyrern /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHYRERN (Whether had income from job all year) [chyrern] : " & Format(a.chyrern) & LINE_BREAK;
      end if;
      if( (a.chyrtst /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHYRTST (Whether had income from Trust all year) [chyrtst] : " & Format(a.chyrtst) & LINE_BREAK;
      end if;
      if( (a.endyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDYR (End year of course) [endyr] : " & Format(a.endyr) & LINE_BREAK;
      end if;
      if( (a.legdep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LEGDEP (Who receives CB for child.) [legdep] : " & Format(a.legdep) & LINE_BREAK;
      end if;
      if( (a.startyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STARTYR (In which year did this course start) [startyr] : " & Format(a.startyr) & LINE_BREAK;
      end if;
      if( (a.wmkit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WMKIT (Pints welfare milk received in last week) [wmkit] : " & Format(a.wmkit) & LINE_BREAK;
      end if;
      if( (a.fwmlkval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FWMLKVAL (Child - Value of Free welfare milk) [fwmlkval] : " & Format(a.fwmlkval) & LINE_BREAK;
      end if;
      if( (a.dentist /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DENTIST (Last 4 weeks: whether visited NHS dentist) [dentist] : " & Format(a.dentist) & LINE_BREAK;
      end if;
      if( (a.eyetest /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EYETEST (Last 4 wks: whether had eye test) [eyetest] : " & Format(a.eyetest) & LINE_BREAK;
      end if;
      if( (a.hosp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOSP (Last 4 weeks: whether been to NHS hospital) [hosp] : " & Format(a.hosp) & LINE_BREAK;
      end if;
      if( (a.nhs1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS1 (Whether prscrptns free) [nhs1] : " & Format(a.nhs1) & LINE_BREAK;
      end if;
      if( (a.nhs2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS2 (Whether free dental treatment) [nhs2] : " & Format(a.nhs2) & LINE_BREAK;
      end if;
      if( (a.nhs3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHS3 (Whether free eyetest) [nhs3] : " & Format(a.nhs3) & LINE_BREAK;
      end if;
      if( (a.prit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRIT (Number of free prscrptns) [prit] : " & Format(a.prit) & LINE_BREAK;
      end if;
      if( (a.prscrpt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRSCRPT (Last 4 weeks: whether NHS prscrptns) [prscrpt] : " & Format(a.prscrpt) & LINE_BREAK;
      end if;
      if( (a.specs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPECS (Last 4 wks: whether bought specs/lenses) [specs] : " & Format(a.specs) & LINE_BREAK;
      end if;
      if( (a.trav /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRAV (Whether money back at hosp. for travel) [trav] : " & Format(a.trav) & LINE_BREAK;
      end if;
      if( (a.voucher /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VOUCHER (NHS Voucher for Glasses/Contact Lenses) [voucher] : " & Format(a.voucher) & LINE_BREAK;
      end if;
      if( (a.whytrav1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV1 (Travel refund because of a benefit) [whytrav1] : " & Format(a.whytrav1) & LINE_BREAK;
      end if;
      if( (a.whytrav2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV2 (Travel refund because of cert HC2) [whytrav2] : " & Format(a.whytrav2) & LINE_BREAK;
      end if;
      if( (a.whytrav3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV3 (Travel refund because of medical) [whytrav3] : " & Format(a.whytrav3) & LINE_BREAK;
      end if;
      if( (a.whytrav4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV4 (Travel refund because of complex lens) [whytrav4] : " & Format(a.whytrav4) & LINE_BREAK;
      end if;
      if( (a.whytrav5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV5 (Travel refund because pregnant) [whytrav5] : " & Format(a.whytrav5) & LINE_BREAK;
      end if;
      if( (a.whytrav6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYTRAV6 (Travel refund because of other reason) [whytrav6] : " & Format(a.whytrav6) & LINE_BREAK;
      end if;
      if( (a.benccdis /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENCCDIS (Does benefit account for childcare cost) [benccdis] : " & Format(a.benccdis) & LINE_BREAK;
      end if;
      if( (a.chamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMT1 (Costs of childcare during term time) [chamt1] : " & Format(a.chamt1) & LINE_BREAK;
      end if;
      if( (a.chamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMT2 (Costs of childcare during holidays) [chamt2] : " & Format(a.chamt2) & LINE_BREAK;
      end if;
      if( (a.chamt3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMT3 (Costs of childcare during term time (paid by other)) [chamt3] : " & Format(a.chamt3) & LINE_BREAK;
      end if;
      if( (a.chamt4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMT4 (Costs of childcare during holidays (paid by other)) [chamt4] : " & Format(a.chamt4) & LINE_BREAK;
      end if;
      if( (a.chfar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHFAR (Time from home to where Chld lookedafter) [chfar] : " & Format(a.chfar) & LINE_BREAK;
      end if;
      if( (a.chhr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHHR1 (Hours a week child-care in term-time) [chhr1] : " & Format(a.chhr1) & LINE_BREAK;
      end if;
      if( (a.chhr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHHR2 (Hours a week child-care in the holidays) [chhr2] : " & Format(a.chhr2) & LINE_BREAK;
      end if;
      if( (a.chlook01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK01 (Childcare from: close relative) [chlook01] : " & Format(a.chlook01) & LINE_BREAK;
      end if;
      if( (a.chlook02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK02 (Childcare from: other relative) [chlook02] : " & Format(a.chlook02) & LINE_BREAK;
      end if;
      if( (a.chlook03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK03 (Childcare from: friend/neighbour) [chlook03] : " & Format(a.chlook03) & LINE_BREAK;
      end if;
      if( (a.chlook04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK04 (Childcare from: childminder) [chlook04] : " & Format(a.chlook04) & LINE_BREAK;
      end if;
      if( (a.chlook05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK05 (Childcare from: nursery/school/playgroup) [chlook05] : " & Format(a.chlook05) & LINE_BREAK;
      end if;
      if( (a.chlook06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK06 (Childcare from: creche) [chlook06] : " & Format(a.chlook06) & LINE_BREAK;
      end if;
      if( (a.chlook07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK07 (Childcare from: employer provide nursery) [chlook07] : " & Format(a.chlook07) & LINE_BREAK;
      end if;
      if( (a.chlook08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK08 (Childcare from: nanny/au pair) [chlook08] : " & Format(a.chlook08) & LINE_BREAK;
      end if;
      if( (a.chlook09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK09 (Childcare from: before/after school or holiday play scheme) [chlook09] : " & Format(a.chlook09) & LINE_BREAK;
      end if;
      if( (a.chlook10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK10 (Childcare from: other) [chlook10] : " & Format(a.chlook10) & LINE_BREAK;
      end if;
      if( (a.chpay1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPAY1 (Whether payment in kind for childcare) [chpay1] : " & Format(a.chpay1) & LINE_BREAK;
      end if;
      if( (a.chpay2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPAY2 (Whether childcare on an exchange basis) [chpay2] : " & Format(a.chpay2) & LINE_BREAK;
      end if;
      if( (a.chpay3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPAY3 (Whether Payment made by 'Other') [chpay3] : " & Format(a.chpay3) & LINE_BREAK;
      end if;
      if( (a.clone /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CLONE (Whether anyone else pays for child to have childcare) [clone] : " & Format(a.clone) & LINE_BREAK;
      end if;
      if( (a.cost /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COST (Whether childcare costs anything) [cost] : " & Format(a.cost) & LINE_BREAK;
      end if;
      if( (a.registr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTR1 (Whether childminder registered) [registr1] : " & Format(a.registr1) & LINE_BREAK;
      end if;
      if( (a.registr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTR2 (Whether nursery/playgroup registered) [registr2] : " & Format(a.registr2) & LINE_BREAK;
      end if;
      if( (a.registr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTR3 (Whether creche registered) [registr3] : " & Format(a.registr3) & LINE_BREAK;
      end if;
      if( (a.registr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTR4 (Whether employer nursery registered) [registr4] : " & Format(a.registr4) & LINE_BREAK;
      end if;
      if( (a.registr5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTR5 (Whether nanny/aupair registered) [registr5] : " & Format(a.registr5) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Endowment_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Endowment";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.mortseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTSEQ (Mortgage Sequence Number) [mortseq] : " & Format(a.mortseq) & LINE_BREAK;
      end if;
      if( (a.endowseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDOWSEQ (Endowseq) [endowseq] : " & Format(a.endowseq) & LINE_BREAK;
      end if;
      if( (a.incinint /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCININT (Whether premium included in MORINPAY) [incinint] : " & Format(a.incinint) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.menpolam /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MENPOLAM (Last prem on End. Policy/Isa/Unit T.) [menpolam] : " & Format(a.menpolam) & LINE_BREAK;
      end if;
      if( (a.menpolpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MENPOLPD (Pcode: last premium on endowment policy) [menpolpd] : " & Format(a.menpolpd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.menstyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MENSTYR (Year (endowment/isa etc) taken out) [menstyr] : " & Format(a.menstyr) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : ExtChild_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== ExtChild";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.extseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXTSEQ (Extseq) [extseq] : " & Format(a.extseq) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.nhhamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHHAMT (Fees/maintenance for external child) [nhhamt] : " & Format(a.nhhamt) & LINE_BREAK;
      end if;
      if( (a.nhhfee /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHHFEE (Whether payments made for external child) [nhhfee] : " & Format(a.nhhfee) & LINE_BREAK;
      end if;
      if( (a.nhhintro /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHHINTRO (Any other children outside hh in ft/pt educ) [nhhintro] : " & Format(a.nhhintro) & LINE_BREAK;
      end if;
      if( (a.nhhpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NHHPD (Pcode:fees/maint for external child) [nhhpd] : " & Format(a.nhhpd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : GovPay_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== GovPay";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.benefit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENEFIT (Benefit Type) [benefit] : " & Format(a.benefit) & LINE_BREAK;
      end if;
      if( (a.govpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GOVPAY (Deduction Type) [govpay] : " & Format(a.govpay) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Hbai_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Hbai";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.mnoeahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNOEAHCX (The average of S_OE_AHC, excluding the self-employed) [mnoeahcx] : " & Format(a.mnoeahcx) & LINE_BREAK;
      end if;
      if( (a.mdoeahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDOEAHCX (The median of S_OE_AHC, excluding the self-employed) [mdoeahcx] : " & Format(a.mdoeahcx) & LINE_BREAK;
      end if;
      if( (a.mnmcahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNMCAHCX (The average of S_MC_AHC, excluding the self-employed) [mnmcahcx] : " & Format(a.mnmcahcx) & LINE_BREAK;
      end if;
      if( (a.mdmcahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDMCAHCX (The median of S_MC_AHC, excluding the self-employed) [mdmcahcx] : " & Format(a.mdmcahcx) & LINE_BREAK;
      end if;
      if( (a.mnoebhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNOEBHCX (The average of S_OE_BHC, excluding the self-employed) [mnoebhcx] : " & Format(a.mnoebhcx) & LINE_BREAK;
      end if;
      if( (a.mdoebhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDOEBHCX (The median of S_OE_BHC, excluding the self-employed) [mdoebhcx] : " & Format(a.mdoebhcx) & LINE_BREAK;
      end if;
      if( (a.mnmcbhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNMCBHCX (The average of S_MC_BHC, excluding the self-employed) [mnmcbhcx] : " & Format(a.mnmcbhcx) & LINE_BREAK;
      end if;
      if( (a.mdmcbhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDMCBHCX (The median of S_MC_BHC, excluding the self-employed) [mdmcbhcx] : " & Format(a.mdmcbhcx) & LINE_BREAK;
      end if;
      if( (a.mnoeahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNOEAHC (The average of S_OE_AHC) [mnoeahc] : " & Format(a.mnoeahc) & LINE_BREAK;
      end if;
      if( (a.mdoeahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDOEAHC (The median of S_OE_AHC) [mdoeahc] : " & Format(a.mdoeahc) & LINE_BREAK;
      end if;
      if( (a.mnmcahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNMCAHC (The average of S_MC_AHC) [mnmcahc] : " & Format(a.mnmcahc) & LINE_BREAK;
      end if;
      if( (a.mdmcahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDMCAHC (The median of S_MC_AHC) [mdmcahc] : " & Format(a.mdmcahc) & LINE_BREAK;
      end if;
      if( (a.mnoebhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNOEBHC (The average of S_OE_BHC) [mnoebhc] : " & Format(a.mnoebhc) & LINE_BREAK;
      end if;
      if( (a.mdoebhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDOEBHC (The median of S_OE_BHC) [mdoebhc] : " & Format(a.mdoebhc) & LINE_BREAK;
      end if;
      if( (a.mnmcbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNMCBHC (The average of S_MC_BHC) [mnmcbhc] : " & Format(a.mnmcbhc) & LINE_BREAK;
      end if;
      if( (a.mdmcbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDMCBHC (The median of S_MC_BHC) [mdmcbhc] : " & Format(a.mdmcbhc) & LINE_BREAK;
      end if;
      if( (a.snphcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SNPHCOST (Average of housing costs for rich non-pensioner households) [snphcost] : " & Format(a.snphcost) & LINE_BREAK;
      end if;
      if( (a.sphcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPHCOST (Average of housing costs for rich pensioner households) [sphcost] : " & Format(a.sphcost) & LINE_BREAK;
      end if;
      if( (a.benunits /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNITS (Number of Benefit Units within the household) [benunits] : " & Format(a.benunits) & LINE_BREAK;
      end if;
      if( (a.gvtregn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GVTREGN (Government Office Region) [gvtregn] : " & Format(a.gvtregn) & LINE_BREAK;
      end if;
      if( (a.hhstat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHSTAT (Household status (conventional/shared)) [hhstat] : " & Format(a.hhstat) & LINE_BREAK;
      end if;
      if( (a.tenure /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TENURE (Tenure) [tenure] : " & Format(a.tenure) & LINE_BREAK;
      end if;
      if( (a.adulth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADULTH (Number of adults in household) [adulth] : " & Format(a.adulth) & LINE_BREAK;
      end if;
      if( (a.depchldh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPCHLDH (Number of dependant children in the household) [depchldh] : " & Format(a.depchldh) & LINE_BREAK;
      end if;
      if( (a.ptentyp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTENTYP2 (Tenure Type - Published) [ptentyp2] : " & Format(a.ptentyp2) & LINE_BREAK;
      end if;
      if( (a.tentyp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TENTYP2 (The tenure type of the household) [tentyp2] : " & Format(a.tentyp2) & LINE_BREAK;
      end if;
      if( (a.watsewrt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATSEWRT (Total Water and Sewerage) [watsewrt] : " & Format(a.watsewrt) & LINE_BREAK;
      end if;
      if( (a.sewerage /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWERAGE (Sewerage charges for households in Scotland) [sewerage] : " & Format(a.sewerage) & LINE_BREAK;
      end if;
      if( (a.cwathh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CWATHH (Total amount of water and sewerage charges for the household (Scotland)) [cwathh] : " & Format(a.cwathh) & LINE_BREAK;
      end if;
      if( (a.totsthh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTSTHH (FES - Total structural insurance) [totsthh] : " & Format(a.totsthh) & LINE_BREAK;
      end if;
      if( (a.totstrhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTSTRHH (FRS - Total structural insurance) [totstrhh] : " & Format(a.totstrhh) & LINE_BREAK;
      end if;
      if( (a.charghh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGHH (Total household service charges) [charghh] : " & Format(a.charghh) & LINE_BREAK;
      end if;
      if( (a.hbmort /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBMORT (FES equivalent - mortgage interest component of housing costs) [hbmort] : " & Format(a.hbmort) & LINE_BREAK;
      end if;
      if( (a.hbxmort /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBXMORT (FRS extended - mortgage interest component of housing costs) [hbxmort] : " & Format(a.hbxmort) & LINE_BREAK;
      end if;
      if( (a.hrenthh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HRENTHH (FES equivalent - gross rent for the household) [hrenthh] : " & Format(a.hrenthh) & LINE_BREAK;
      end if;
      if( (a.erenthh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERENTHH (FRS extended - rent component of housing costs for the household) [erenthh] : " & Format(a.erenthh) & LINE_BREAK;
      end if;
      if( (a.hbenhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENHH (Household housing benefit income) [hbenhh] : " & Format(a.hbenhh) & LINE_BREAK;
      end if;
      if( (a.watsewhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATSEWHH (Total amount of water and sewerage charges for the household) [watsewhh] : " & Format(a.watsewhh) & LINE_BREAK;
      end if;
      if( (a.hhcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHCOST (FES equivalent - total housing costs) [hhcost] : " & Format(a.hhcost) & LINE_BREAK;
      end if;
      if( (a.ehcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EHCOST (FRS extended - total housing costs.) [ehcost] : " & Format(a.ehcost) & LINE_BREAK;
      end if;
      if( (a.bhcdef /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BHCDEF (Used to deflate BHC income to the average of the survey year) [bhcdef] : " & Format(a.bhcdef) & LINE_BREAK;
      end if;
      if( (a.ahcdef /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AHCDEF (Used to deflate AHC income to the average of the survey year) [ahcdef] : " & Format(a.ahcdef) & LINE_BREAK;
      end if;
      if( (a.ctrebam1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTREBAM1 (Amount of council tax rebate the household receives) [ctrebam1] : " & Format(a.ctrebam1) & LINE_BREAK;
      end if;
      if( (a.cwatadj /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CWATADJ (Amount household water charges reduced by through Scottish water charge discount scheme) [cwatadj] : " & Format(a.cwatadj) & LINE_BREAK;
      end if;
      if( (a.adultb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADULTB (Number of adults in benefit unit) [adultb] : " & Format(a.adultb) & LINE_BREAK;
      end if;
      if( (a.egrincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EGRINCBU (FRS extended - gross income for the benefit unit) [egrincbu] : " & Format(a.egrincbu) & LINE_BREAK;
      end if;
      if( (a.entincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINCBU (FRS extended - net income for the benefit unit) [entincbu] : " & Format(a.entincbu) & LINE_BREAK;
      end if;
      if( (a.hgrernhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRERNHH (FES equivalent - gross earnings for the houshold) [hgrernhh] : " & Format(a.hgrernhh) & LINE_BREAK;
      end if;
      if( (a.hnternhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTERNHH (FES equivalent - net earnings for the household) [hnternhh] : " & Format(a.hnternhh) & LINE_BREAK;
      end if;
      if( (a.hgrinvhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRINVHH (FES equivalent - gross investment income for the household) [hgrinvhh] : " & Format(a.hgrinvhh) & LINE_BREAK;
      end if;
      if( (a.hntinvhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTINVHH (FES equivalent - net investment income for the household) [hntinvhh] : " & Format(a.hntinvhh) & LINE_BREAK;
      end if;
      if( (a.hgrocchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGROCCHH (FES equivalent - gross occupational pension income for the household) [hgrocchh] : " & Format(a.hgrocchh) & LINE_BREAK;
      end if;
      if( (a.hntocchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTOCCHH (FES equivalent - net occupational pension income for the household) [hntocchh] : " & Format(a.hntocchh) & LINE_BREAK;
      end if;
      if( (a.chbenhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHBENHH (Amount of disability benefits paid to a child for the household) [chbenhh] : " & Format(a.chbenhh) & LINE_BREAK;
      end if;
      if( (a.hbeninhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENINHH (FES equivalent - total benefit income for the household) [hbeninhh] : " & Format(a.hbeninhh) & LINE_BREAK;
      end if;
      if( (a.hpribnhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPRIBNHH (FES equivalent - private benefit income for the household) [hpribnhh] : " & Format(a.hpribnhh) & LINE_BREAK;
      end if;
      if( (a.hmiscihh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HMISCIHH (FES equivalent - total miscellaneous income for the household) [hmiscihh] : " & Format(a.hmiscihh) & LINE_BREAK;
      end if;
      if( (a.sfrpahh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFRPAHH (Amount of social fund repayments from the household) [sfrpahh] : " & Format(a.sfrpahh) & LINE_BREAK;
      end if;
      if( (a.hgrinchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRINCHH (FES equivalent - gross income for the household) [hgrinchh] : " & Format(a.hgrinchh) & LINE_BREAK;
      end if;
      if( (a.hntinchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTINCHH (FES equivalent - net income for the household) [hntinchh] : " & Format(a.hntinchh) & LINE_BREAK;
      end if;
      if( (a.inchilhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCHILHH (Total childrens income in the household) [inchilhh] : " & Format(a.inchilhh) & LINE_BREAK;
      end if;
      if( (a.egrernhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EGRERNHH (FRS extended - gross earnings for the household) [egrernhh] : " & Format(a.egrernhh) & LINE_BREAK;
      end if;
      if( (a.enternhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTERNHH (FRS extended - net earnings for the household) [enternhh] : " & Format(a.enternhh) & LINE_BREAK;
      end if;
      if( (a.ebeninhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EBENINHH (FRS extended - total benefit income for the household) [ebeninhh] : " & Format(a.ebeninhh) & LINE_BREAK;
      end if;
      if( (a.epribnhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EPRIBNHH (FRS extended - private benefit income for the household) [epribnhh] : " & Format(a.epribnhh) & LINE_BREAK;
      end if;
      if( (a.emiscihh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMISCIHH (FRS extended - total miscellaneous income for the household) [emiscihh] : " & Format(a.emiscihh) & LINE_BREAK;
      end if;
      if( (a.eothdehh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDEHH (FRS extended - other deductions for the household) [eothdehh] : " & Format(a.eothdehh) & LINE_BREAK;
      end if;
      if( (a.egrinchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EGRINCHH (FRS extended - gross income for the household) [egrinchh] : " & Format(a.egrinchh) & LINE_BREAK;
      end if;
      if( (a.entinchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINCHH (FRS extended - net income for the household) [entinchh] : " & Format(a.entinchh) & LINE_BREAK;
      end if;
      if( (a.tvlichh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TVLICHH (Amount of concessionary TV licence allocated to the household) [tvlichh] : " & Format(a.tvlichh) & LINE_BREAK;
      end if;
      if( (a.g_newhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWHH (FRS extended - household grossing factor) [g_newhh] : " & Format(a.g_newhh) & LINE_BREAK;
      end if;
      if( (a.gnewhhp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GNEWHHP (Household level population weight) [gnewhhp] : " & Format(a.gnewhhp) & LINE_BREAK;
      end if;
      if( (a.esgjobhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGJOBHH (FRS extended - SPId gross employment income for the household) [esgjobhh] : " & Format(a.esgjobhh) & LINE_BREAK;
      end if;
      if( (a.esgrsehh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGRSEHH (FRS extended - SPId gross self-employment income for the household) [esgrsehh] : " & Format(a.esgrsehh) & LINE_BREAK;
      end if;
      if( (a.esginvhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGINVHH (FRS extended - SPId gross investment income for the household) [esginvhh] : " & Format(a.esginvhh) & LINE_BREAK;
      end if;
      if( (a.esgocchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGOCCHH (FRS extended - SPId gross occupational pension income for the household) [esgocchh] : " & Format(a.esgocchh) & LINE_BREAK;
      end if;
      if( (a.esmischh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESMISCHH (FRS extended - SPId miscellaneous income for the household) [esmischh] : " & Format(a.esmischh) & LINE_BREAK;
      end if;
      if( (a.espribhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESPRIBHH (FRS extended - SPId private benefit income for the household) [espribhh] : " & Format(a.espribhh) & LINE_BREAK;
      end if;
      if( (a.esbenihh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESBENIHH (FRS extended - SPId total benefit income for the household) [esbenihh] : " & Format(a.esbenihh) & LINE_BREAK;
      end if;
      if( (a.esothdhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHDHH (FRS extended - SPId  other deductions for the household) [esothdhh] : " & Format(a.esothdhh) & LINE_BREAK;
      end if;
      if( (a.esginchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGINCHH (FRS extended - SPId  gross income for the household) [esginchh] : " & Format(a.esginchh) & LINE_BREAK;
      end if;
      if( (a.esninchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINCHH (FRS extended - SPId  household net income) [esninchh] : " & Format(a.esninchh) & LINE_BREAK;
      end if;
      if( (a.ericphh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERICPHH (Household SPI flag - pensioner) [ericphh] : " & Format(a.ericphh) & LINE_BREAK;
      end if;
      if( (a.ericnphh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERICNPHH (Household SPI flag - non pensioner) [ericnphh] : " & Format(a.ericnphh) & LINE_BREAK;
      end if;
      if( (a.gs_newhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWHH (FRS extended - SPId household grossing factor) [gs_newhh] : " & Format(a.gs_newhh) & LINE_BREAK;
      end if;
      if( (a.gs_newpph /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWPPH (SPId household level population weight) [gs_newpph] : " & Format(a.gs_newpph) & LINE_BREAK;
      end if;
      if( (a.es_hcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ES_HCOST (FRS extended - SPId total housing costs) [es_hcost] : " & Format(a.es_hcost) & LINE_BREAK;
      end if;
      if( (a.esahchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESAHCHH (FRS extended - SPId after housing costs income) [esahchh] : " & Format(a.esahchh) & LINE_BREAK;
      end if;
      if( (a.eahchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EAHCHH (FRS extended - unequivalised, undeflated, un-spid after housing costs income for the household) [eahchh] : " & Format(a.eahchh) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Position of benefit unit in household) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.depchldb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPCHLDB (Number of dependant children in the benefit unit) [depchldb] : " & Format(a.depchldb) & LINE_BREAK;
      end if;
      if( (a.eqmcoup /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQMCOUP (Status of adults in the benefit unit (McClements)) [eqmcoup] : " & Format(a.eqmcoup) & LINE_BREAK;
      end if;
      if( (a.eqmbhckd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQMBHCKD (McClements equivalence factor for all children in household - BHC) [eqmbhckd] : " & Format(a.eqmbhckd) & LINE_BREAK;
      end if;
      if( (a.eqmahckd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQMAHCKD (McClements equivalence factor for all children in household - AHC) [eqmahckd] : " & Format(a.eqmahckd) & LINE_BREAK;
      end if;
      if( (a.eqmbhchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQMBHCHH (Household level McClements equivalence scale for BHC income) [eqmbhchh] : " & Format(a.eqmbhchh) & LINE_BREAK;
      end if;
      if( (a.eqmahchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQMAHCHH (Household level McClements equivalence scale for AHC income) [eqmahchh] : " & Format(a.eqmahchh) & LINE_BREAK;
      end if;
      if( (a.over14 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OVER14 (Number of children over 14 years of age in the household (OECD)) [over14] : " & Format(a.over14) & LINE_BREAK;
      end if;
      if( (a.under14 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNDER14 (Number of children under 14 years of age in the household (OECD)) [under14] : " & Format(a.under14) & LINE_BREAK;
      end if;
      if( (a.eqobhchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQOBHCHH (Household level OECD equivalence scale for BHC income) [eqobhchh] : " & Format(a.eqobhchh) & LINE_BREAK;
      end if;
      if( (a.eqoahchh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQOAHCHH (Household level OECD equivalence scale for AHC income) [eqoahchh] : " & Format(a.eqoahchh) & LINE_BREAK;
      end if;
      if( (a.mc_bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MC_BHC (FRS extended - deflated, equivalised BHC income (McClements)) [mc_bhc] : " & Format(a.mc_bhc) & LINE_BREAK;
      end if;
      if( (a.oe_bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OE_BHC (FRS extended - deflated, equivalised BHC income (OECD)) [oe_bhc] : " & Format(a.oe_bhc) & LINE_BREAK;
      end if;
      if( (a.mc_gro /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MC_GRO (FRS extended - deflated, equivalised gross income (McClements)) [mc_gro] : " & Format(a.mc_gro) & LINE_BREAK;
      end if;
      if( (a.oe_gro /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OE_GRO (FRS extended - deflated, equivalised gross income (OECD)) [oe_gro] : " & Format(a.oe_gro) & LINE_BREAK;
      end if;
      if( (a.mc_ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MC_AHC (FRS extended - deflated, equivalised AHC income (McClements)) [mc_ahc] : " & Format(a.mc_ahc) & LINE_BREAK;
      end if;
      if( (a.oe_ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OE_AHC (FRS extended - deflated, equivalised AHC income (OECD)) [oe_ahc] : " & Format(a.oe_ahc) & LINE_BREAK;
      end if;
      if( (a.s_mc_bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_MC_BHC (FRS extended - deflated, equivalised, new SPI BHC income (McClements)) [s_mc_bhc] : " & Format(a.s_mc_bhc) & LINE_BREAK;
      end if;
      if( (a.s_oe_bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_OE_BHC (FRS extended - deflated, equivalised, new SPI BHC income (OECD)) [s_oe_bhc] : " & Format(a.s_oe_bhc) & LINE_BREAK;
      end if;
      if( (a.s_mc_gro /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_MC_GRO (FRS extended - deflated, equivalised, new SPI gross income (McClements)) [s_mc_gro] : " & Format(a.s_mc_gro) & LINE_BREAK;
      end if;
      if( (a.s_oe_gro /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_OE_GRO (FRS extended - deflated, equivalised, new SPI gross income (OECD)) [s_oe_gro] : " & Format(a.s_oe_gro) & LINE_BREAK;
      end if;
      if( (a.s_mc_ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_MC_AHC (FRS extended - deflated, equivalised, new SPI AHC income (McClements)) [s_mc_ahc] : " & Format(a.s_mc_ahc) & LINE_BREAK;
      end if;
      if( (a.s_oe_ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "S_OE_AHC (FRS extended - deflated, equivalised, new SPI AHC income (OECD)) [s_oe_ahc] : " & Format(a.s_oe_ahc) & LINE_BREAK;
      end if;
      if( (a.sehhflg /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEHHFLG (Number of full time self-employed persons in the household) [sehhflg] : " & Format(a.sehhflg) & LINE_BREAK;
      end if;
      if( (a.ethgrphh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ETHGRPHH (Ethnic group of household) [ethgrphh] : " & Format(a.ethgrphh) & LINE_BREAK;
      end if;
      if( (a.oldsehhflg /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OLDSEHHFLG (Number of full time self-employed persons in the household (old derivation using FRS variable EMPSTATC)) [oldsehhflg] : " & Format(a.oldsehhflg) & LINE_BREAK;
      end if;
      if( (a.fsmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMBU (BU-Value of Free school meals) [fsmbu] : " & Format(a.fsmbu) & LINE_BREAK;
      end if;
      if( (a.fsmlkbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSMLKBU (BU-Value of Free school milk) [fsmlkbu] : " & Format(a.fsmlkbu) & LINE_BREAK;
      end if;
      if( (a.hbenbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENBU (Benefit unit level housing benefit income) [hbenbu] : " & Format(a.hbenbu) & LINE_BREAK;
      end if;
      if( (a.ehbenbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EHBENBU (FRS extended - housing benefit for benefit unit) [ehbenbu] : " & Format(a.ehbenbu) & LINE_BREAK;
      end if;
      if( (a.srentbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SRENTBU (Ben unit accumulation of rent paid by adults in shared households) [srentbu] : " & Format(a.srentbu) & LINE_BREAK;
      end if;
      if( (a.rentbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTBU (FES equivalent - rent component of housing costs for the benefit unit) [rentbu] : " & Format(a.rentbu) & LINE_BREAK;
      end if;
      if( (a.erentbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERENTBU (FRS extended - rent component of housing costs for the benefit unit) [erentbu] : " & Format(a.erentbu) & LINE_BREAK;
      end if;
      if( (a.insebu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INSEBU (Total net self-employment earnings for the benefit unit) [insebu] : " & Format(a.insebu) & LINE_BREAK;
      end if;
      if( (a.ginsebu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GINSEBU (Total gross self-employment income for benefit unit) [ginsebu] : " & Format(a.ginsebu) & LINE_BREAK;
      end if;
      if( (a.chbenbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHBENBU (Amount of disability benefits paid to a child for the benefit unit) [chbenbu] : " & Format(a.chbenbu) & LINE_BREAK;
      end if;
      if( (a.hgrernbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRERNBU (FES equivalent - gross earnings for the benefit unit) [hgrernbu] : " & Format(a.hgrernbu) & LINE_BREAK;
      end if;
      if( (a.hnternbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTERNBU (FES equivalent - net earnings for the benefit unit) [hnternbu] : " & Format(a.hnternbu) & LINE_BREAK;
      end if;
      if( (a.hgrinvbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRINVBU (FES equivalent - gross investment income for the benefit unit) [hgrinvbu] : " & Format(a.hgrinvbu) & LINE_BREAK;
      end if;
      if( (a.hntinvbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTINVBU (FES equivalent - net investment income for the benefit unit) [hntinvbu] : " & Format(a.hntinvbu) & LINE_BREAK;
      end if;
      if( (a.hgroccbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGROCCBU (FES equivalent - gross occupational pension income for the benefit unit) [hgroccbu] : " & Format(a.hgroccbu) & LINE_BREAK;
      end if;
      if( (a.hntoccbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTOCCBU (FES equivalent - net occupational pension income for the benefit unit) [hntoccbu] : " & Format(a.hntoccbu) & LINE_BREAK;
      end if;
      if( (a.hbeninbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENINBU (FES equivalent - total benefit income for the benefit unit) [hbeninbu] : " & Format(a.hbeninbu) & LINE_BREAK;
      end if;
      if( (a.hpribnbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPRIBNBU (FES equivalent - private benefit income for the benefit unit) [hpribnbu] : " & Format(a.hpribnbu) & LINE_BREAK;
      end if;
      if( (a.hmiscibu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HMISCIBU (FES equivalent - total miscellaneous income for the benefit unit) [hmiscibu] : " & Format(a.hmiscibu) & LINE_BREAK;
      end if;
      if( (a.sfrpabu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SFRPABU (Amount of social fund repayments from the benefit unit) [sfrpabu] : " & Format(a.sfrpabu) & LINE_BREAK;
      end if;
      if( (a.hgrincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HGRINCBU (FES equivalent - gross income for the benefit unit) [hgrincbu] : " & Format(a.hgrincbu) & LINE_BREAK;
      end if;
      if( (a.hntincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HNTINCBU (FES equivalent - net income for the benefit unit) [hntincbu] : " & Format(a.hntincbu) & LINE_BREAK;
      end if;
      if( (a.egrernbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EGRERNBU (FRS extended - gross earnings for the benefit unit) [egrernbu] : " & Format(a.egrernbu) & LINE_BREAK;
      end if;
      if( (a.enternbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTERNBU (FRS extended - net earnings for the benefit unit) [enternbu] : " & Format(a.enternbu) & LINE_BREAK;
      end if;
      if( (a.ebeninbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EBENINBU (FRS extended - total benefit income for the benefit unit) [ebeninbu] : " & Format(a.ebeninbu) & LINE_BREAK;
      end if;
      if( (a.epribnbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EPRIBNBU (FRS extended - private benefit income for the benefit unit) [epribnbu] : " & Format(a.epribnbu) & LINE_BREAK;
      end if;
      if( (a.emiscibu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMISCIBU (FRS extended - total miscellaneous income for the benefit unit) [emiscibu] : " & Format(a.emiscibu) & LINE_BREAK;
      end if;
      if( (a.eothdebu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDEBU (FRS extended - other deductions for the benefit unit) [eothdebu] : " & Format(a.eothdebu) & LINE_BREAK;
      end if;
      if( (a.winpaybu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WINPAYBU (Total winter fuel payment for benefit unit) [winpaybu] : " & Format(a.winpaybu) & LINE_BREAK;
      end if;
      if( (a.tvlicbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TVLICBU (Amount of concessionary TV licence allocated to the benunit) [tvlicbu] : " & Format(a.tvlicbu) & LINE_BREAK;
      end if;
      if( (a.ecobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ECOBU (Economic status of the benefit unit) [ecobu] : " & Format(a.ecobu) & LINE_BREAK;
      end if;
      if( (a.oldecobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OLDECOBU (Economic status of the benefit unit (old derivation using FRS variable EMPSTATC)) [oldecobu] : " & Format(a.oldecobu) & LINE_BREAK;
      end if;
      if( (a.disabflg /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DISABFLG (Number of disabled adults in the benefit unit) [disabflg] : " & Format(a.disabflg) & LINE_BREAK;
      end if;
      if( (a.fambu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMBU (The family type of the benefit unit (pre-0102 - replaced with NEWFAMBU)) [fambu] : " & Format(a.fambu) & LINE_BREAK;
      end if;
      if( (a.newfambu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEWFAMBU (New family type for the benefit unit) [newfambu] : " & Format(a.newfambu) & LINE_BREAK;
      end if;
      if( (a.personhd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSONHD (Person Number of the head of the benefit unit within household) [personhd] : " & Format(a.personhd) & LINE_BREAK;
      end if;
      if( (a.personsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSONSP (Person Number of the spouse of the benefit unit within household) [personsp] : " & Format(a.personsp) & LINE_BREAK;
      end if;
      if( (a.kidecobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDECOBU (Childrens economic status) [kidecobu] : " & Format(a.kidecobu) & LINE_BREAK;
      end if;
      if( (a.oldkidecobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OLDKIDECOBU (Childrens economic status (old derivation using FRS variable EMPSTATC)) [oldkidecobu] : " & Format(a.oldkidecobu) & LINE_BREAK;
      end if;
      if( (a.kid0_1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID0_1 (Number of children aged 0 and 1 in the benefit unit) [kid0_1] : " & Format(a.kid0_1) & LINE_BREAK;
      end if;
      if( (a.kid2_4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID2_4 (Number of children aged 2,3 and 4 in the benefit unit) [kid2_4] : " & Format(a.kid2_4) & LINE_BREAK;
      end if;
      if( (a.kid5_7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID5_7 (Number of children aged 5, 6 and 7 in the benefit unit) [kid5_7] : " & Format(a.kid5_7) & LINE_BREAK;
      end if;
      if( (a.kid8_10 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID8_10 (Number of children aged 8, 9 and 10 in the benefit unit) [kid8_10] : " & Format(a.kid8_10) & LINE_BREAK;
      end if;
      if( (a.kid11_12 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID11_12 (Number of children aged 11 and 12 in the benefit unit) [kid11_12] : " & Format(a.kid11_12) & LINE_BREAK;
      end if;
      if( (a.kid13_15 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID13_15 (Number of children aged 13, 14 and 15 in the benefit unit) [kid13_15] : " & Format(a.kid13_15) & LINE_BREAK;
      end if;
      if( (a.kid16_19 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID16_19 (Number of children aged 16, 17 and 19 in the benefit unit) [kid16_19] : " & Format(a.kid16_19) & LINE_BREAK;
      end if;
      if( (a.boys /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BOYS (Number of boys in benefit unit) [boys] : " & Format(a.boys) & LINE_BREAK;
      end if;
      if( (a.wtcbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WTCBU (Amount of Working Tax Credit for the Benefit Unit) [wtcbu] : " & Format(a.wtcbu) & LINE_BREAK;
      end if;
      if( (a.ctcbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTCBU (Amount of Child Tax Credit for the Benefit Unit) [ctcbu] : " & Format(a.ctcbu) & LINE_BREAK;
      end if;
      if( (a.isbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISBU (Total income support for the benefit unit) [isbu] : " & Format(a.isbu) & LINE_BREAK;
      end if;
      if( (a.inchilbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCHILBU (Total childrens income in the benefit unit) [inchilbu] : " & Format(a.inchilbu) & LINE_BREAK;
      end if;
      if( (a.g_newbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWBU (FRS extended - benefit unit grossing factor) [g_newbu] : " & Format(a.g_newbu) & LINE_BREAK;
      end if;
      if( (a.g_newpp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWPP (FRS extended - population grossing factor) [g_newpp] : " & Format(a.g_newpp) & LINE_BREAK;
      end if;
      if( (a.g_newch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWCH (FRS extended - dependant children grossing factor) [g_newch] : " & Format(a.g_newch) & LINE_BREAK;
      end if;
      if( (a.g_newad /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWAD (FRS extended - adult grossing factor) [g_newad] : " & Format(a.g_newad) & LINE_BREAK;
      end if;
      if( (a.g_newpn /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWPN (FRS extended - pensioner grossing factor) [g_newpn] : " & Format(a.g_newpn) & LINE_BREAK;
      end if;
      if( (a.g_newwa /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "G_NEWWA (FRS extended - working-age adult grossing factor) [g_newwa] : " & Format(a.g_newwa) & LINE_BREAK;
      end if;
      if( (a.esgjobbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGJOBBU (FRS extended - SPId gross employment income for the benefit unit) [esgjobbu] : " & Format(a.esgjobbu) & LINE_BREAK;
      end if;
      if( (a.esgrsebu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGRSEBU (FRS extended - SPId gross self-employment income for the benefit unit) [esgrsebu] : " & Format(a.esgrsebu) & LINE_BREAK;
      end if;
      if( (a.esginvbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGINVBU (FRS extended - SPId gross investment income for the benefit unit) [esginvbu] : " & Format(a.esginvbu) & LINE_BREAK;
      end if;
      if( (a.esgoccbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGOCCBU (FRS extended - SPId gross occupational pension income for the benefit unit) [esgoccbu] : " & Format(a.esgoccbu) & LINE_BREAK;
      end if;
      if( (a.esmiscbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESMISCBU (FRS extended - SPId total miscellaneous income for the benefit unit) [esmiscbu] : " & Format(a.esmiscbu) & LINE_BREAK;
      end if;
      if( (a.espribbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESPRIBBU (FRS extended - SPId private benefit income for the benefit unit) [espribbu] : " & Format(a.espribbu) & LINE_BREAK;
      end if;
      if( (a.esbenibu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESBENIBU (FRS extended - SPId total benefit income for the benefit unit) [esbenibu] : " & Format(a.esbenibu) & LINE_BREAK;
      end if;
      if( (a.esothdbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHDBU (FRS extended - SPId  other deductions for the benefit unit) [esothdbu] : " & Format(a.esothdbu) & LINE_BREAK;
      end if;
      if( (a.esgincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGINCBU (FRS extended - SPId gross income for the benefit unit.) [esgincbu] : " & Format(a.esgincbu) & LINE_BREAK;
      end if;
      if( (a.esnincbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINCBU (FRS extended - SPId net income for the benefit unit) [esnincbu] : " & Format(a.esnincbu) & LINE_BREAK;
      end if;
      if( (a.ericpbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERICPBU (Benefit unit SPI flag - pensioner) [ericpbu] : " & Format(a.ericpbu) & LINE_BREAK;
      end if;
      if( (a.ericnpbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERICNPBU (Benefit unit SPI flag - non pensioner) [ericnpbu] : " & Format(a.ericnpbu) & LINE_BREAK;
      end if;
      if( (a.gs_newbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWBU (FRS extended - SPId benefit unit grossing factor) [gs_newbu] : " & Format(a.gs_newbu) & LINE_BREAK;
      end if;
      if( (a.gs_newpp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWPP (FRS extended - SPId population grossing factor) [gs_newpp] : " & Format(a.gs_newpp) & LINE_BREAK;
      end if;
      if( (a.gs_newch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWCH (FRS extended - SPId dependant children grossing factor) [gs_newch] : " & Format(a.gs_newch) & LINE_BREAK;
      end if;
      if( (a.gs_newad /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWAD (FRS extended - SPId adult grossing factor) [gs_newad] : " & Format(a.gs_newad) & LINE_BREAK;
      end if;
      if( (a.gs_newpn /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWPN (FRS extended - SPId pensioner grossing factor) [gs_newpn] : " & Format(a.gs_newpn) & LINE_BREAK;
      end if;
      if( (a.gs_newwa /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GS_NEWWA (FRS extended - SPId working-age adults grossing factor) [gs_newwa] : " & Format(a.gs_newwa) & LINE_BREAK;
      end if;
      if( (a.mbhcdec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MBHCDEC (BHC deciles from S_MC_BHC income variable, including self-employed (McClements)) [mbhcdec] : " & Format(a.mbhcdec) & LINE_BREAK;
      end if;
      if( (a.mqinbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MQINBHC (BHC quintiles from S_MC_BHC income variable, including self-employed) [mqinbhc] : " & Format(a.mqinbhc) & LINE_BREAK;
      end if;
      if( (a.obhcdec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OBHCDEC (BHC deciles from S_OE_BHC income variable, including self-employed (OECD)) [obhcdec] : " & Format(a.obhcdec) & LINE_BREAK;
      end if;
      if( (a.oqinbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OQINBHC (BHC quintiles from S_OE_BHC income variable, including self-employed) [oqinbhc] : " & Format(a.oqinbhc) & LINE_BREAK;
      end if;
      if( (a.mahcdec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MAHCDEC (AHC deciles from S_MC_AHC income variable, including self-employed (McClements)) [mahcdec] : " & Format(a.mahcdec) & LINE_BREAK;
      end if;
      if( (a.mqinahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MQINAHC (AHC quintiles from S_MC_AHC income variable, including self-employed) [mqinahc] : " & Format(a.mqinahc) & LINE_BREAK;
      end if;
      if( (a.oahcdec /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHCDEC (AHC deciles from S_OE_AHC income variable, including self-employed (OECD)) [oahcdec] : " & Format(a.oahcdec) & LINE_BREAK;
      end if;
      if( (a.oqinahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OQINAHC (AHC quintiles from S_OE_AHC income variable, including self-employed) [oqinahc] : " & Format(a.oqinahc) & LINE_BREAK;
      end if;
      if( (a.mbhcdecx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MBHCDECX (BHC deciles from S_MC_BHC income variable, excluding self-employed (McClements)) [mbhcdecx] : " & Format(a.mbhcdecx) & LINE_BREAK;
      end if;
      if( (a.mqinbhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MQINBHCX (BHC quintiles from S_MC_BHC income variable, excluding self-employed) [mqinbhcx] : " & Format(a.mqinbhcx) & LINE_BREAK;
      end if;
      if( (a.obhcdecx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OBHCDECX (BHC deciles from S_OE_BHC income variable, excluding self-employed (OECD)) [obhcdecx] : " & Format(a.obhcdecx) & LINE_BREAK;
      end if;
      if( (a.oqinbhcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OQINBHCX (BHC quintiles from S_OE_BHC income variable, excluding self-employed) [oqinbhcx] : " & Format(a.oqinbhcx) & LINE_BREAK;
      end if;
      if( (a.mahcdecx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MAHCDECX (AHC deciles from S_MC_AHC income variable, excluding self-employed (McClements)) [mahcdecx] : " & Format(a.mahcdecx) & LINE_BREAK;
      end if;
      if( (a.mqinahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MQINAHCX (AHC quintiles from S_MC_AHC income variable, excluding self-employed) [mqinahcx] : " & Format(a.mqinahcx) & LINE_BREAK;
      end if;
      if( (a.oahcdecx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAHCDECX (AHC deciles from S_OE_AHC income variable, excluding self-employed (OECD)) [oahcdecx] : " & Format(a.oahcdecx) & LINE_BREAK;
      end if;
      if( (a.oqinahcx /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OQINAHCX (AHC quintiles from S_OE_AHC income variable, excluding self-employed) [oqinahcx] : " & Format(a.oqinahcx) & LINE_BREAK;
      end if;
      if( (a.agehd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGEHD (Age of head) [agehd] : " & Format(a.agehd) & LINE_BREAK;
      end if;
      if( (a.sexhd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEXHD (Sex of the head 1= Male, 2= female) [sexhd] : " & Format(a.sexhd) & LINE_BREAK;
      end if;
      if( (a.esbenihd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESBENIHD (FRS extended - SPId total benefit income for the head of the benefit unit) [esbenihd] : " & Format(a.esbenihd) & LINE_BREAK;
      end if;
      if( (a.esgjobhd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGJOBHD (FRS extended - SPId gross employment income for the head of the benefit unit) [esgjobhd] : " & Format(a.esgjobhd) & LINE_BREAK;
      end if;
      if( (a.esgocchd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGOCCHD (FRS extended - SPId gross occupational pension income for the head of the benefit unit) [esgocchd] : " & Format(a.esgocchd) & LINE_BREAK;
      end if;
      if( (a.esgrsehd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGRSEHD (FRS extended - SPId gross self-employment income for the head of the benefit unit) [esgrsehd] : " & Format(a.esgrsehd) & LINE_BREAK;
      end if;
      if( (a.esmischd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESMISCHD (FRS extended - SPId total miscellaneous income for the head of the benefit unit) [esmischd] : " & Format(a.esmischd) & LINE_BREAK;
      end if;
      if( (a.espribhd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESPRIBHD (FRS extended - SPId private benefit income for the head of the benefit unit) [espribhd] : " & Format(a.espribhd) & LINE_BREAK;
      end if;
      if( (a.winpayhd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WINPAYHD (Total winter fuel payment for the head of the benefit unit) [winpayhd] : " & Format(a.winpayhd) & LINE_BREAK;
      end if;
      if( (a.agesp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGESP (Age of spouse) [agesp] : " & Format(a.agesp) & LINE_BREAK;
      end if;
      if( (a.sexsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEXSP (Sex of the spouse) [sexsp] : " & Format(a.sexsp) & LINE_BREAK;
      end if;
      if( (a.esbenisp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESBENISP (FRS extended - SPId total benefit income for the spouse of the benefit unit) [esbenisp] : " & Format(a.esbenisp) & LINE_BREAK;
      end if;
      if( (a.esginvsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGINVSP (FRS extended - SPId gross investment income for the spouse of the benefit unit) [esginvsp] : " & Format(a.esginvsp) & LINE_BREAK;
      end if;
      if( (a.esgjobsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGJOBSP (FRS extended - SPId gross employment income for the spouse of the benefit unit) [esgjobsp] : " & Format(a.esgjobsp) & LINE_BREAK;
      end if;
      if( (a.esgoccsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGOCCSP (FRS extended - SPId gross occupational pension income for the spouse of the benefit unit) [esgoccsp] : " & Format(a.esgoccsp) & LINE_BREAK;
      end if;
      if( (a.esgrsesp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESGRSESP (FRS extended - SPId gross self-employment income for the spouse of the benefit unit) [esgrsesp] : " & Format(a.esgrsesp) & LINE_BREAK;
      end if;
      if( (a.esmiscsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESMISCSP (FRS extended - SPId total miscellaneous income for the head of the benefit unit) [esmiscsp] : " & Format(a.esmiscsp) & LINE_BREAK;
      end if;
      if( (a.espribsp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESPRIBSP (FRS extended - SPId private benefit income for the spouse of the benefit unit) [espribsp] : " & Format(a.espribsp) & LINE_BREAK;
      end if;
      if( (a.winpaysp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WINPAYSP (Total winter fuel payment for the spouse of the benefit unit) [winpaysp] : " & Format(a.winpaysp) & LINE_BREAK;
      end if;
      if( (a.mdscorechnew /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDSCORECHNEW (Total Child Material Deprivation score based on the new FRS material deprivation suite of questions) [mdscorechnew] : " & Format(a.mdscorechnew) & LINE_BREAK;
      end if;
      if( (a.mdscorech /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDSCORECH (Total Child Material Deprivation score based on the FRS material deprivation suite of questions) [mdscorech] : " & Format(a.mdscorech) & LINE_BREAK;
      end if;
      if( (a.mdch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDCH (Flag to indicate above Child MD threshold (MDSCORECH is greater or equal to 25)) [mdch] : " & Format(a.mdch) & LINE_BREAK;
      end if;
      if( (a.mdscorepn /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDSCOREPN (Total Pensioner Material Deprivation score based on the FRS material deprivation suite of questions) [mdscorepn] : " & Format(a.mdscorepn) & LINE_BREAK;
      end if;
      if( (a.mdpn /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MDPN (Flag to indicate above Pensioner MD threshold (MDSCOREPN is greater or equal to 20)) [mdpn] : " & Format(a.mdpn) & LINE_BREAK;
      end if;
      if( (a.low50bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW50BHC (50% median (MDOEBHC) low income flag - BHC (S_OE_BHC is less than 0.5*MDOEBHC)) [low50bhc] : " & Format(a.low50bhc) & LINE_BREAK;
      end if;
      if( (a.low60bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW60BHC (60% median (MDOEBHC) low income flag - BHC (S_OE_BHC is less than 0.6*MDOEBHC)) [low60bhc] : " & Format(a.low60bhc) & LINE_BREAK;
      end if;
      if( (a.low70bhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW70BHC (70% median (MDOEBHC) low income flag - BHC (S_OE_BHC is less than 0.7*MDOEBHC)) [low70bhc] : " & Format(a.low70bhc) & LINE_BREAK;
      end if;
      if( (a.low50ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW50AHC (50% median (MDOEAHC) low income flag - AHC (S_OE_AHC is less than 0.5*MDOEAHC)) [low50ahc] : " & Format(a.low50ahc) & LINE_BREAK;
      end if;
      if( (a.low60ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW60AHC (60% median (MDOEAHC) low income flag - AHC (S_OE_AHC is less than 0.6*MDOEAHC)) [low60ahc] : " & Format(a.low60ahc) & LINE_BREAK;
      end if;
      if( (a.low70ahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOW70AHC (70% median (MDOEAHC) low income flag - AHC (S_OE_AHC is less than 0.7*MDOEAHC)) [low70ahc] : " & Format(a.low70ahc) & LINE_BREAK;
      end if;
      if( (a.lowincmdch /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWINCMDCH (Flag to indicate Child combined low inc/MD threshold (MDSCORECH is greater or equal to 25 and LOW70BHC=1)) [lowincmdch] : " & Format(a.lowincmdch) & LINE_BREAK;
      end if;
      if( (a.lowincmdchsev /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWINCMDCHSEV (Flag to indicate severe Child combined low inc/MD threshold (MDSCORECH is greater or equal to 25 and LOW50BHC=1)) [lowincmdchsev] : " & Format(a.lowincmdchsev) & LINE_BREAK;
      end if;
      if( (a.lowmcbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWMCBHC (60% median (MDMCBHC) low income flag - BHC (S_MC_BHC is less than 0.6*MDMCBHC)) [lowmcbhc] : " & Format(a.lowmcbhc) & LINE_BREAK;
      end if;
      if( (a.lowmcahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWMCAHC (60% median (MDMCAHC) low income flag - AHC (S_MC_AHC is less than 0.6*MDMCAHC)) [lowmcahc] : " & Format(a.lowmcahc) & LINE_BREAK;
      end if;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Serial number of the household) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.famthbai /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAMTHBAI (Family type-HBAI definition) [famthbai] : " & Format(a.famthbai) & LINE_BREAK;
      end if;
      if( (a.fwmlkbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FWMLKBU (BU-Value of Free welfare milk) [fwmlkbu] : " & Format(a.fwmlkbu) & LINE_BREAK;
      end if;
      if( (a.ctliab /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTLIAB (Amount of council tax the household is liable for) [ctliab] : " & Format(a.ctliab) & LINE_BREAK;
      end if;
      if( (a.shtseflg /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SHTSEFLG (Number short-term self-employed (less than one month) in the household) [shtseflg] : " & Format(a.shtseflg) & LINE_BREAK;
      end if;
      if( (a.kid16_18 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KID16_18 (Number of children aged 16, 17 and 18 in the benefit unit) [kid16_18] : " & Format(a.kid16_18) & LINE_BREAK;
      end if;
      if( (a.region /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGION (Flag to indicate if benefit unit is GB (1) or NI (2)) [region] : " & Format(a.region) & LINE_BREAK;
      end if;
      if( (a.totincm1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTINCM1 (Total Income (Individual Income series) for the First Man in the Benefit Unit) [totincm1] : " & Format(a.totincm1) & LINE_BREAK;
      end if;
      if( (a.totincm2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTINCM2 (Total Income (Individual Income series) for the Second Man in the Benefit Unit) [totincm2] : " & Format(a.totincm2) & LINE_BREAK;
      end if;
      if( (a.netincm1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NETINCM1 (Net Income (Individual Income series) for the First Man in the Benefit Unit) [netincm1] : " & Format(a.netincm1) & LINE_BREAK;
      end if;
      if( (a.netincm2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NETINCM2 (Net Income (Individual Income series) for the Second Man in the Benefit Unit) [netincm2] : " & Format(a.netincm2) & LINE_BREAK;
      end if;
      if( (a.totincw1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTINCW1 (Total Income (Individual Income series) for the First Woman in the Benefit Unit) [totincw1] : " & Format(a.totincw1) & LINE_BREAK;
      end if;
      if( (a.totincw2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTINCW2 (Total Income (Individual Income series) for the Second Woman in the Benefit Unit) [totincw2] : " & Format(a.totincw2) & LINE_BREAK;
      end if;
      if( (a.netincw1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NETINCW1 (Net Income (Individual Income series) for the First Woman in the Benefit Unit) [netincw1] : " & Format(a.netincw1) & LINE_BREAK;
      end if;
      if( (a.netincw2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NETINCW2 (Net Income (Individual Income series) for the Second Woman in the Benefit Unit) [netincw2] : " & Format(a.netincw2) & LINE_BREAK;
      end if;
      if( (a.lowoebhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWOEBHC (Low income maker - If S_OE_BHC less than 60% of OECD median BHC income (MDOEBHC)) [lowoebhc] : " & Format(a.lowoebhc) & LINE_BREAK;
      end if;
      if( (a.lowoeahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWOEAHC (Low income maker - If S_OE_AHC less than 60% of OECD median AHC income (MDOEAHC)) [lowoeahc] : " & Format(a.lowoeahc) & LINE_BREAK;
      end if;
      if( (a.snphcstm /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SNPHCSTM (Average of housing costs for rich non-pensioner households (McClements)) [snphcstm] : " & Format(a.snphcstm) & LINE_BREAK;
      end if;
      if( (a.snphcsto /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SNPHCSTO (Average of housing costs for rich non-pensioner households (OECD)) [snphcsto] : " & Format(a.snphcsto) & LINE_BREAK;
      end if;
      if( (a.sphcstm /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPHCSTM (Average of housing costs for rich pensioner households (McClements)) [sphcstm] : " & Format(a.sphcstm) & LINE_BREAK;
      end if;
      if( (a.sphcsto /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPHCSTO (Average of housing costs for rich pensioner households (OECD)) [sphcsto] : " & Format(a.sphcsto) & LINE_BREAK;
      end if;
      if( (a.entinmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINMBU (FRS extended - net income for the benefit unit (McClements)) [entinmbu] : " & Format(a.entinmbu) & LINE_BREAK;
      end if;
      if( (a.entinobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINOBU (FRS extended - net income for the benefit unit (OECD)) [entinobu] : " & Format(a.entinobu) & LINE_BREAK;
      end if;
      if( (a.eothdmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDMHH (FRS extended - other deductions for the household (McClements)) [eothdmhh] : " & Format(a.eothdmhh) & LINE_BREAK;
      end if;
      if( (a.eothdohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDOHH (FRS extended - other deductions for the household (OECD)) [eothdohh] : " & Format(a.eothdohh) & LINE_BREAK;
      end if;
      if( (a.entinmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINMHH (FRS extended - net income for the household (McClements)) [entinmhh] : " & Format(a.entinmhh) & LINE_BREAK;
      end if;
      if( (a.entinohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTINOHH (FRS extended - net income for the household (OECD)) [entinohh] : " & Format(a.entinohh) & LINE_BREAK;
      end if;
      if( (a.esothmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHMHH (FRS extended - SPId  other deductions for the household (McClements)) [esothmhh] : " & Format(a.esothmhh) & LINE_BREAK;
      end if;
      if( (a.esothohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHOHH (FRS extended - SPId  other deductions for the household (OECD)) [esothohh] : " & Format(a.esothohh) & LINE_BREAK;
      end if;
      if( (a.esninmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINMHH (FRS extended - SPId  household net income (McClements)) [esninmhh] : " & Format(a.esninmhh) & LINE_BREAK;
      end if;
      if( (a.esninohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINOHH (FRS extended - SPId  household net income (OECD)) [esninohh] : " & Format(a.esninohh) & LINE_BREAK;
      end if;
      if( (a.eripmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERIPMHH (Household SPI flag - pensioner (McClements)) [eripmhh] : " & Format(a.eripmhh) & LINE_BREAK;
      end if;
      if( (a.eripohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERIPOHH (Household SPI flag - pensioner (OECD)) [eripohh] : " & Format(a.eripohh) & LINE_BREAK;
      end if;
      if( (a.erinpmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERINPMHH (Household SPI flag - non pensioner (McClements)) [erinpmhh] : " & Format(a.erinpmhh) & LINE_BREAK;
      end if;
      if( (a.erinpohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERINPOHH (Household SPI flag - non pensioner (OECD)) [erinpohh] : " & Format(a.erinpohh) & LINE_BREAK;
      end if;
      if( (a.es_hcstm /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ES_HCSTM (FRS extended - SPId total housing costs (McClements)) [es_hcstm] : " & Format(a.es_hcstm) & LINE_BREAK;
      end if;
      if( (a.es_hcsto /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ES_HCSTO (FRS extended - SPId total housing costs (OECD)) [es_hcsto] : " & Format(a.es_hcsto) & LINE_BREAK;
      end if;
      if( (a.esahcmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESAHCMHH (FRS extended - SPId after housing costs income (McClements)) [esahcmhh] : " & Format(a.esahcmhh) & LINE_BREAK;
      end if;
      if( (a.esahcohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESAHCOHH (FRS extended - SPId after housing costs income (OECD)) [esahcohh] : " & Format(a.esahcohh) & LINE_BREAK;
      end if;
      if( (a.eahcmhh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EAHCMHH (FRS extended - unequivalised, undeflated, un-spid after housing costs income for the household (McClements)) [eahcmhh] : " & Format(a.eahcmhh) & LINE_BREAK;
      end if;
      if( (a.eahcohh /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EAHCOHH (FRS extended - unequivalised, undeflated, un-spid after housing costs income for the household (OECD)) [eahcohh] : " & Format(a.eahcohh) & LINE_BREAK;
      end if;
      if( (a.kidsbu0 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU0 (Number of Dependents under age 1) [kidsbu0] : " & Format(a.kidsbu0) & LINE_BREAK;
      end if;
      if( (a.kidsbu1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU1 (Number of Dependents aged 1) [kidsbu1] : " & Format(a.kidsbu1) & LINE_BREAK;
      end if;
      if( (a.kidsbu10 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU10 (Number of Dependents aged 10) [kidsbu10] : " & Format(a.kidsbu10) & LINE_BREAK;
      end if;
      if( (a.kidsbu11 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU11 (Number of Dependents aged 11) [kidsbu11] : " & Format(a.kidsbu11) & LINE_BREAK;
      end if;
      if( (a.kidsbu12 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU12 (Number of Dependents aged 12) [kidsbu12] : " & Format(a.kidsbu12) & LINE_BREAK;
      end if;
      if( (a.kidsbu13 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU13 (Number of Dependents aged 13) [kidsbu13] : " & Format(a.kidsbu13) & LINE_BREAK;
      end if;
      if( (a.kidsbu14 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU14 (Number of Dependents aged 14) [kidsbu14] : " & Format(a.kidsbu14) & LINE_BREAK;
      end if;
      if( (a.kidsbu15 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU15 (Number of Dependents aged 15) [kidsbu15] : " & Format(a.kidsbu15) & LINE_BREAK;
      end if;
      if( (a.kidsbu16 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU16 (Number of Dependents aged 16) [kidsbu16] : " & Format(a.kidsbu16) & LINE_BREAK;
      end if;
      if( (a.kidsbu17 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU17 (Number of Dependents aged 17) [kidsbu17] : " & Format(a.kidsbu17) & LINE_BREAK;
      end if;
      if( (a.kidsbu18 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU18 (Number of Dependents aged 18) [kidsbu18] : " & Format(a.kidsbu18) & LINE_BREAK;
      end if;
      if( (a.kidsbu2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU2 (Number of Dependents aged 2) [kidsbu2] : " & Format(a.kidsbu2) & LINE_BREAK;
      end if;
      if( (a.kidsbu3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU3 (Number of Dependents aged 3) [kidsbu3] : " & Format(a.kidsbu3) & LINE_BREAK;
      end if;
      if( (a.kidsbu4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU4 (Number of Dependents aged 4) [kidsbu4] : " & Format(a.kidsbu4) & LINE_BREAK;
      end if;
      if( (a.kidsbu5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU5 (Number of Dependents aged 5) [kidsbu5] : " & Format(a.kidsbu5) & LINE_BREAK;
      end if;
      if( (a.kidsbu6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU6 (Number of Dependents aged 6) [kidsbu6] : " & Format(a.kidsbu6) & LINE_BREAK;
      end if;
      if( (a.kidsbu7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU7 (Number of Dependents aged 7) [kidsbu7] : " & Format(a.kidsbu7) & LINE_BREAK;
      end if;
      if( (a.kidsbu8 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU8 (Number of Dependents aged 8) [kidsbu8] : " & Format(a.kidsbu8) & LINE_BREAK;
      end if;
      if( (a.kidsbu9 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KIDSBU9 (Number of Dependents aged 9) [kidsbu9] : " & Format(a.kidsbu9) & LINE_BREAK;
      end if;
      if( (a.eothdmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDMBU (FRS extended - other deductions for the benefit unit (McClements)) [eothdmbu] : " & Format(a.eothdmbu) & LINE_BREAK;
      end if;
      if( (a.eothdobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EOTHDOBU (FRS extended - other deductions for the benefit unit (OECD)) [eothdobu] : " & Format(a.eothdobu) & LINE_BREAK;
      end if;
      if( (a.esothmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHMBU (FRS extended - SPId  other deductions for the benefit unit (McClements)) [esothmbu] : " & Format(a.esothmbu) & LINE_BREAK;
      end if;
      if( (a.esothobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESOTHOBU (FRS extended - SPId  other deductions for the benefit unit (OECD)) [esothobu] : " & Format(a.esothobu) & LINE_BREAK;
      end if;
      if( (a.esninmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINMBU (FRS extended - SPId net income for the benefit unit (McClements)) [esninmbu] : " & Format(a.esninmbu) & LINE_BREAK;
      end if;
      if( (a.esninobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESNINOBU (FRS extended - SPId net income for the benefit unit (OECD)) [esninobu] : " & Format(a.esninobu) & LINE_BREAK;
      end if;
      if( (a.eripmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERIPMBU (Benefit unit SPI flag - pensioner (McClements)) [eripmbu] : " & Format(a.eripmbu) & LINE_BREAK;
      end if;
      if( (a.eripobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERIPOBU (Benefit unit SPI flag - pensioner (OECD)) [eripobu] : " & Format(a.eripobu) & LINE_BREAK;
      end if;
      if( (a.erinpmbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERINPMBU (Benefit unit SPI flag - non pensioner (McClements)) [erinpmbu] : " & Format(a.erinpmbu) & LINE_BREAK;
      end if;
      if( (a.erinpobu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ERINPOBU (Benefit unit SPI flag - non pensioner (OECD)) [erinpobu] : " & Format(a.erinpobu) & LINE_BREAK;
      end if;
      if( (a.wftcbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WFTCBU (Working Families Tax Credit for the benefit unit) [wftcbu] : " & Format(a.wftcbu) & LINE_BREAK;
      end if;
      if( (a.dptcbu /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DPTCBU (Disabled Persons Tax Credit for the benefit unit (not including lump sums)) [dptcbu] : " & Format(a.dptcbu) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Household_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Household";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.bedroom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEDROOM (Number of bedrooms) [bedroom] : " & Format(a.bedroom) & LINE_BREAK;
      end if;
      if( (a.benunits /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNITS (Number of Benefit Units in household) [benunits] : " & Format(a.benunits) & LINE_BREAK;
      end if;
      if( (a.billrate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BILLRATE (Do you get bill for rates on this accomm) [billrate] : " & Format(a.billrate) & LINE_BREAK;
      end if;
      if( (a.brma /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BRMA (Broad Rental Market Area) [brma] : " & Format(a.brma) & LINE_BREAK;
      end if;
      if( (a.busroom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUSROOM (Whether any rooms used for business) [busroom] : " & Format(a.busroom) & LINE_BREAK;
      end if;
      if( (a.capval /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CAPVAL (Capital Value) [capval] : " & Format(a.capval) & LINE_BREAK;
      end if;
      if( (a.charge1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE1 (Whether pay: Ground Rent) [charge1] : " & Format(a.charge1) & LINE_BREAK;
      end if;
      if( (a.charge2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE2 (Answer not used) [charge2] : " & Format(a.charge2) & LINE_BREAK;
      end if;
      if( (a.charge3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE3 (Whether pay: Chief Rent) [charge3] : " & Format(a.charge3) & LINE_BREAK;
      end if;
      if( (a.charge4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE4 (Whether pay: Service charge) [charge4] : " & Format(a.charge4) & LINE_BREAK;
      end if;
      if( (a.charge5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE5 (Whether pay: Regular maintenance charge) [charge5] : " & Format(a.charge5) & LINE_BREAK;
      end if;
      if( (a.charge6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE6 (Whether pay: Site rent (caravans)) [charge6] : " & Format(a.charge6) & LINE_BREAK;
      end if;
      if( (a.charge7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE7 (Whether pay: Factoring) [charge7] : " & Format(a.charge7) & LINE_BREAK;
      end if;
      if( (a.charge8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE8 (Whether pay: other regular charges) [charge8] : " & Format(a.charge8) & LINE_BREAK;
      end if;
      if( (a.charge9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHARGE9 (Whether pay: combined charges) [charge9] : " & Format(a.charge9) & LINE_BREAK;
      end if;
      if( (a.chins /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINS (Whether service charge include insurance) [chins] : " & Format(a.chins) & LINE_BREAK;
      end if;
      if( (a.chrgamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT1 (Amount paid for Ground Rent) [chrgamt1] : " & Format(a.chrgamt1) & LINE_BREAK;
      end if;
      if( (a.chrgamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT2 (Answer not used) [chrgamt2] : " & Format(a.chrgamt2) & LINE_BREAK;
      end if;
      if( (a.chrgamt3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT3 (Amount paid for chief rent) [chrgamt3] : " & Format(a.chrgamt3) & LINE_BREAK;
      end if;
      if( (a.chrgamt4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT4 (Amount paid for service charge) [chrgamt4] : " & Format(a.chrgamt4) & LINE_BREAK;
      end if;
      if( (a.chrgamt5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT5 (Amount paid for regular maintenance) [chrgamt5] : " & Format(a.chrgamt5) & LINE_BREAK;
      end if;
      if( (a.chrgamt6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT6 (Amount paid for site rent) [chrgamt6] : " & Format(a.chrgamt6) & LINE_BREAK;
      end if;
      if( (a.chrgamt7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT7 (Amount paid for factoring) [chrgamt7] : " & Format(a.chrgamt7) & LINE_BREAK;
      end if;
      if( (a.chrgamt8 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT8 (Amount paid for other regular charges) [chrgamt8] : " & Format(a.chrgamt8) & LINE_BREAK;
      end if;
      if( (a.chrgamt9 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGAMT9 (Amount paid for combined services) [chrgamt9] : " & Format(a.chrgamt9) & LINE_BREAK;
      end if;
      if( (a.chrgpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD1 (Pcode: amount paid for ground rent) [chrgpd1] : " & Format(a.chrgpd1) & LINE_BREAK;
      end if;
      if( (a.chrgpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD2 (Answer not used) [chrgpd2] : " & Format(a.chrgpd2) & LINE_BREAK;
      end if;
      if( (a.chrgpd3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD3 (Pcode: amount paid for chief rent) [chrgpd3] : " & Format(a.chrgpd3) & LINE_BREAK;
      end if;
      if( (a.chrgpd4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD4 (Pcode: amount paid for service charge) [chrgpd4] : " & Format(a.chrgpd4) & LINE_BREAK;
      end if;
      if( (a.chrgpd5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD5 (Pcode: amount paid for maintenance) [chrgpd5] : " & Format(a.chrgpd5) & LINE_BREAK;
      end if;
      if( (a.chrgpd6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD6 (Pcode: amount paid for site rent) [chrgpd6] : " & Format(a.chrgpd6) & LINE_BREAK;
      end if;
      if( (a.chrgpd7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD7 (Pcode: amount paid for factoring) [chrgpd7] : " & Format(a.chrgpd7) & LINE_BREAK;
      end if;
      if( (a.chrgpd8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD8 (Pcode: amount paid for other charges) [chrgpd8] : " & Format(a.chrgpd8) & LINE_BREAK;
      end if;
      if( (a.chrgpd9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHRGPD9 (Pcode: amount paid for combined services) [chrgpd9] : " & Format(a.chrgpd9) & LINE_BREAK;
      end if;
      if( (a.covoths /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COVOTHS (Insurance premium: what covered) [covoths] : " & Format(a.covoths) & LINE_BREAK;
      end if;
      if( (a.csewamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CSEWAMT (Sew. Charge: Final value after discount) [csewamt] : " & Format(a.csewamt) & LINE_BREAK;
      end if;
      if( (a.csewamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CSEWAMT1 (Weeklyised gross annual dom. sew. charge on bill) [csewamt1] : " & Format(a.csewamt1) & LINE_BREAK;
      end if;
      if( (a.ct25d50d /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CT25D50D (Whether allowed a 25% or 50% discount) [ct25d50d] : " & Format(a.ct25d50d) & LINE_BREAK;
      end if;
      if( (a.ctamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTAMT (Amount of last Council Tax payment) [ctamt] : " & Format(a.ctamt) & LINE_BREAK;
      end if;
      if( (a.ctannual /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTANNUAL (Annual CT amount after discounts/benefit) [ctannual] : " & Format(a.ctannual) & LINE_BREAK;
      end if;
      if( (a.ctband /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTBAND (Council Tax band) [ctband] : " & Format(a.ctband) & LINE_BREAK;
      end if;
      if( (a.ctbwait /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTBWAIT (Whether waiting outcome of claim for CTB) [ctbwait] : " & Format(a.ctbwait) & LINE_BREAK;
      end if;
      if( (a.ctcondoc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTCONDOC (Whether CT statement consulted) [ctcondoc] : " & Format(a.ctcondoc) & LINE_BREAK;
      end if;
      if( (a.ctdisc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTDISC (Whether status discount allowed) [ctdisc] : " & Format(a.ctdisc) & LINE_BREAK;
      end if;
      if( (a.ctinstal /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTINSTAL (Whether CTAMT from annual total or an instalment) [ctinstal] : " & Format(a.ctinstal) & LINE_BREAK;
      end if;
      if( (a.ctlvband /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTLVBAND (Whether CT bill for lower valuation band) [ctlvband] : " & Format(a.ctlvband) & LINE_BREAK;
      end if;
      if( (a.ctlvchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTLVCHK (Whether CTBAND after lower valuation) [ctlvchk] : " & Format(a.ctlvchk) & LINE_BREAK;
      end if;
      if( (a.ctreb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTREB (Whether received any CT Benefit/rebate) [ctreb] : " & Format(a.ctreb) & LINE_BREAK;
      end if;
      if( (a.ctrebamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTREBAMT (Amount of CT Benefit/rebate) [ctrebamt] : " & Format(a.ctrebamt) & LINE_BREAK;
      end if;
      if( (a.ctrebpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTREBPD (Pcode: amount of CT Benefit/rebate) [ctrebpd] : " & Format(a.ctrebpd) & LINE_BREAK;
      end if;
      if( (a.cttime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTTIME (Number of CT instalments) [cttime] : " & Format(a.cttime) & LINE_BREAK;
      end if;
      if( (a.cwatamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CWATAMT (Wat. Charge: Final value after discount) [cwatamt] : " & Format(a.cwatamt) & LINE_BREAK;
      end if;
      if( (a.cwatamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CWATAMT1 (Weeklyised gross annual dom. water charge on bill) [cwatamt1] : " & Format(a.cwatamt1) & LINE_BREAK;
      end if;
      if( (a.datyrago /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DATYRAGO (Date a year ago) [datyrago] : " & Format(a.datyrago) & LINE_BREAK;
      end if;
      if( (a.dvadulth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVADULTH (For ONS use - Number of adults in household) [dvadulth] : " & Format(a.dvadulth) & LINE_BREAK;
      end if;
      if( (a.dvtotad /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVTOTAD (For ONS use - Total adults (derived)) [dvtotad] : " & Format(a.dvtotad) & LINE_BREAK;
      end if;
      if( (a.entry1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY1 (Whether locked common entrance) [entry1] : " & Format(a.entry1) & LINE_BREAK;
      end if;
      if( (a.entry2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY2 (Whether locked gates) [entry2] : " & Format(a.entry2) & LINE_BREAK;
      end if;
      if( (a.entry3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY3 (Whether security staff/gatekeeper) [entry3] : " & Format(a.entry3) & LINE_BREAK;
      end if;
      if( (a.entry4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY4 (Whether entry phone access) [entry4] : " & Format(a.entry4) & LINE_BREAK;
      end if;
      if( (a.entry5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY5 (Whether Guard dog/patrol animal) [entry5] : " & Format(a.entry5) & LINE_BREAK;
      end if;
      if( (a.entry6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENTRY6 (Whether Warden controlled) [entry6] : " & Format(a.entry6) & LINE_BREAK;
      end if;
      if( (a.floor /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FLOOR (Floor level of main living part) [floor] : " & Format(a.floor) & LINE_BREAK;
      end if;
      if( (a.givehelp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GIVEHELP (Someone gives help to non HH member) [givehelp] : " & Format(a.givehelp) & LINE_BREAK;
      end if;
      if( (a.gvtregn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GVTREGN (Government Office Region in UK) [gvtregn] : " & Format(a.gvtregn) & LINE_BREAK;
      end if;
      if( (a.hhldr01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR01 (Whether accom. owned/rented by pers 1) [hhldr01] : " & Format(a.hhldr01) & LINE_BREAK;
      end if;
      if( (a.hhldr02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR02 (Whether accom. owned/rented by pers 2) [hhldr02] : " & Format(a.hhldr02) & LINE_BREAK;
      end if;
      if( (a.hhldr03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR03 (Whether accom. owned/rented by pers 3) [hhldr03] : " & Format(a.hhldr03) & LINE_BREAK;
      end if;
      if( (a.hhldr04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR04 (Whether accom. owned/rented by pers 4) [hhldr04] : " & Format(a.hhldr04) & LINE_BREAK;
      end if;
      if( (a.hhldr05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR05 (Whether accom. owned/rented by pers 5) [hhldr05] : " & Format(a.hhldr05) & LINE_BREAK;
      end if;
      if( (a.hhldr06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR06 (Whether accom. owned/rented by pers 6) [hhldr06] : " & Format(a.hhldr06) & LINE_BREAK;
      end if;
      if( (a.hhldr07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR07 (Whether accom. owned/rented by pers 7) [hhldr07] : " & Format(a.hhldr07) & LINE_BREAK;
      end if;
      if( (a.hhldr08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR08 (Whether accom. owned/rented by pers 8) [hhldr08] : " & Format(a.hhldr08) & LINE_BREAK;
      end if;
      if( (a.hhldr09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR09 (Whether accom. owned/rented by pers 9) [hhldr09] : " & Format(a.hhldr09) & LINE_BREAK;
      end if;
      if( (a.hhldr10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR10 (Whether accom. owned/rented by pers 10) [hhldr10] : " & Format(a.hhldr10) & LINE_BREAK;
      end if;
      if( (a.hhldr11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR11 (Whether accom. owned/rented by pers 11) [hhldr11] : " & Format(a.hhldr11) & LINE_BREAK;
      end if;
      if( (a.hhldr12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR12 (Whether accom. owned/rented by pers 12) [hhldr12] : " & Format(a.hhldr12) & LINE_BREAK;
      end if;
      if( (a.hhldr13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR13 (Whether accom. owned/rented by pers 13) [hhldr13] : " & Format(a.hhldr13) & LINE_BREAK;
      end if;
      if( (a.hhldr14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR14 (Whether accom. owned/rented by pers 14) [hhldr14] : " & Format(a.hhldr14) & LINE_BREAK;
      end if;
      if( (a.hhldr97 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHLDR97 (Whether accom. owned/rented by pers out.) [hhldr97] : " & Format(a.hhldr97) & LINE_BREAK;
      end if;
      if( (a.hhstat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHSTAT (Household status (conventional/shared)) [hhstat] : " & Format(a.hhstat) & LINE_BREAK;
      end if;
      if( (a.hlthst /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HLTHST (Whether anyone has healthy start vouchers) [hlthst] : " & Format(a.hlthst) & LINE_BREAK;
      end if;
      if( (a.hrpnum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HRPNUM (Number of the Household reference person) [hrpnum] : " & Format(a.hrpnum) & LINE_BREAK;
      end if;
      if( (a.imd_e /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IMD_E (Index of Multiple Deprivation - England) [imd_e] : " & Format(a.imd_e) & LINE_BREAK;
      end if;
      if( (a.imd_s /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IMD_S (Index of Multiple Deprivation - Scotland) [imd_s] : " & Format(a.imd_s) & LINE_BREAK;
      end if;
      if( (a.imd_w /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "IMD_W (Index of Multiple Deprivation - Wales) [imd_w] : " & Format(a.imd_w) & LINE_BREAK;
      end if;
      if( (a.intdate /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTDATE (Date on which interview started) [intdate] : " & Format(a.intdate) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.lac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LAC (Local Authority Code) [lac] : " & Format(a.lac) & LINE_BREAK;
      end if;
      if( (a.mainacc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MAINACC (Is the households accommodation) [mainacc] : " & Format(a.mainacc) & LINE_BREAK;
      end if;
      if( (a.medpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDPAY (Whether anyone in hhld paid for something on prscrptn) [medpay] : " & Format(a.medpay) & LINE_BREAK;
      end if;
      if( (a.medwho01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO01 (Person 1 paid for something on prscrptn) [medwho01] : " & Format(a.medwho01) & LINE_BREAK;
      end if;
      if( (a.medwho02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO02 (Person 2 paid for something on prscrptn) [medwho02] : " & Format(a.medwho02) & LINE_BREAK;
      end if;
      if( (a.medwho03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO03 (Person 3 paid for something on prscrptn) [medwho03] : " & Format(a.medwho03) & LINE_BREAK;
      end if;
      if( (a.medwho04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO04 (Person 4 paid for something on prscrptn) [medwho04] : " & Format(a.medwho04) & LINE_BREAK;
      end if;
      if( (a.medwho05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO05 (Person 5 paid for something on prscrptn) [medwho05] : " & Format(a.medwho05) & LINE_BREAK;
      end if;
      if( (a.medwho06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO06 (Person 6 paid for something on prscrptn) [medwho06] : " & Format(a.medwho06) & LINE_BREAK;
      end if;
      if( (a.medwho07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO07 (Person 7 paid for something on prscrptn) [medwho07] : " & Format(a.medwho07) & LINE_BREAK;
      end if;
      if( (a.medwho08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO08 (Person 8 paid for something on prscrptn) [medwho08] : " & Format(a.medwho08) & LINE_BREAK;
      end if;
      if( (a.medwho09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO09 (Person 9 paid for something on prscrptn) [medwho09] : " & Format(a.medwho09) & LINE_BREAK;
      end if;
      if( (a.medwho10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO10 (Person 10 paid for something on prscrptn) [medwho10] : " & Format(a.medwho10) & LINE_BREAK;
      end if;
      if( (a.medwho11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO11 (Person 11 paid for something on prscrptn) [medwho11] : " & Format(a.medwho11) & LINE_BREAK;
      end if;
      if( (a.medwho12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO12 (Person 12 paid for something on prscrptn) [medwho12] : " & Format(a.medwho12) & LINE_BREAK;
      end if;
      if( (a.medwho13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO13 (Person 13 paid for something on prscrptn) [medwho13] : " & Format(a.medwho13) & LINE_BREAK;
      end if;
      if( (a.medwho14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDWHO14 (Person 14 paid for something on prscrptn) [medwho14] : " & Format(a.medwho14) & LINE_BREAK;
      end if;
      if( (a.migrq1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MIGRQ1 (Whether anyone usually living in household now elsewhere) [migrq1] : " & Format(a.migrq1) & LINE_BREAK;
      end if;
      if( (a.migrq2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MIGRQ2 (Number of people who left household in the last year) [migrq2] : " & Format(a.migrq2) & LINE_BREAK;
      end if;
      if( (a.mnthcode /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTHCODE (Sample month) [mnthcode] : " & Format(a.mnthcode) & LINE_BREAK;
      end if;
      if( (a.monlive /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONLIVE (Months HRP lived at the address) [monlive] : " & Format(a.monlive) & LINE_BREAK;
      end if;
      if( (a.needhelp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NEEDHELP (Anyone receiving regular help) [needhelp] : " & Format(a.needhelp) & LINE_BREAK;
      end if;
      if( (a.nicoun /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NICOUN (District Council Code) [nicoun] : " & Format(a.nicoun) & LINE_BREAK;
      end if;
      if( (a.nidpnd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIDPND (District Council Domestic Rate Poundage) [nidpnd] : " & Format(a.nidpnd) & LINE_BREAK;
      end if;
      if( (a.nmrmshar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NMRMSHAR (No. rooms shared with non hh member) [nmrmshar] : " & Format(a.nmrmshar) & LINE_BREAK;
      end if;
      if( (a.nochcr1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOCHCR1 (Employed childcare: Looked after by other parent) [nochcr1] : " & Format(a.nochcr1) & LINE_BREAK;
      end if;
      if( (a.nochcr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOCHCR2 (Employed childcare: Old enough to look after themselves) [nochcr2] : " & Format(a.nochcr2) & LINE_BREAK;
      end if;
      if( (a.nochcr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOCHCR3 (Employed childcare: Only work during school hours) [nochcr3] : " & Format(a.nochcr3) & LINE_BREAK;
      end if;
      if( (a.nochcr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOCHCR4 (Employed childcare: Work at home) [nochcr4] : " & Format(a.nochcr4) & LINE_BREAK;
      end if;
      if( (a.nochcr5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOCHCR5 (Employed childcare: Other type of arrangement) [nochcr5] : " & Format(a.nochcr5) & LINE_BREAK;
      end if;
      if( (a.norate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NORATE (Why  no  rate bill) [norate] : " & Format(a.norate) & LINE_BREAK;
      end if;
      if( (a.numtv1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMTV1 (Whether household has colour TV set) [numtv1] : " & Format(a.numtv1) & LINE_BREAK;
      end if;
      if( (a.numtv2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMTV2 (Whether household has black/white TV set) [numtv2] : " & Format(a.numtv2) & LINE_BREAK;
      end if;
      if( (a.oac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OAC (ONS Area Classification) [oac] : " & Format(a.oac) & LINE_BREAK;
      end if;
      if( (a.onbsroom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ONBSROOM (Rooms used only for business) [onbsroom] : " & Format(a.onbsroom) & LINE_BREAK;
      end if;
      if( (a.payrate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYRATE (Does someone in household pay rates bill) [payrate] : " & Format(a.payrate) & LINE_BREAK;
      end if;
      if( (a.ptbsroom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTBSROOM (Number of rooms used partly for business) [ptbsroom] : " & Format(a.ptbsroom) & LINE_BREAK;
      end if;
      if( (a.rooms /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROOMS (Total number of rooms) [rooms] : " & Format(a.rooms) & LINE_BREAK;
      end if;
      if( (a.roomshr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROOMSHR (Whether  rooms shared with non hh member) [roomshr] : " & Format(a.roomshr) & LINE_BREAK;
      end if;
      if( (a.rt2rebam /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RT2REBAM (Amount of Rates payable on property) [rt2rebam] : " & Format(a.rt2rebam) & LINE_BREAK;
      end if;
      if( (a.rt2rebpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RT2REBPD (Pcode: rates payable on property) [rt2rebpd] : " & Format(a.rt2rebpd) & LINE_BREAK;
      end if;
      if( (a.rtannual /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTANNUAL (Weeklyised total amount paid after deduction) [rtannual] : " & Format(a.rtannual) & LINE_BREAK;
      end if;
      if( (a.rtcondoc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTCONDOC (Whether Rate statement consulted) [rtcondoc] : " & Format(a.rtcondoc) & LINE_BREAK;
      end if;
      if( (a.rtdpa /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTDPA (Whether NI Disab Rate Rebate) [rtdpa] : " & Format(a.rtdpa) & LINE_BREAK;
      end if;
      if( (a.rtdpaamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTDPAAMT (Amount of NI Disab Rate Rebate allowed) [rtdpaamt] : " & Format(a.rtdpaamt) & LINE_BREAK;
      end if;
      if( (a.rtdpapd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTDPAPD (Pcode: NI Disab Rate Rebate Period) [rtdpapd] : " & Format(a.rtdpapd) & LINE_BREAK;
      end if;
      if( (a.rtinstal /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTINSTAL (Whether PayRate from annual total or instalment) [rtinstal] : " & Format(a.rtinstal) & LINE_BREAK;
      end if;
      if( (a.rtlpa /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTLPA (Whether NI Lone Pensioner allowance) [rtlpa] : " & Format(a.rtlpa) & LINE_BREAK;
      end if;
      if( (a.rtlpaamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTLPAAMT (Amount of Lone Pensioner Rate Rebate allowed) [rtlpaamt] : " & Format(a.rtlpaamt) & LINE_BREAK;
      end if;
      if( (a.rtlpapd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTLPAPD (Pcode: NI Lone Pensioner Rate Rebate Period) [rtlpapd] : " & Format(a.rtlpapd) & LINE_BREAK;
      end if;
      if( (a.rtothamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTOTHAMT (Amount of Other Rate Rebate allowed) [rtothamt] : " & Format(a.rtothamt) & LINE_BREAK;
      end if;
      if( (a.rtother /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTOTHER (Whether other NI Rate reduction) [rtother] : " & Format(a.rtother) & LINE_BREAK;
      end if;
      if( (a.rtothpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTOTHPD (Pcode: NI Other Rate reduction Period) [rtothpd] : " & Format(a.rtothpd) & LINE_BREAK;
      end if;
      if( (a.rtreb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTREB (Whether allowed a Rates Rebate) [rtreb] : " & Format(a.rtreb) & LINE_BREAK;
      end if;
      if( (a.rtrebamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTREBAMT (Amount of Rate Rebate allowed) [rtrebamt] : " & Format(a.rtrebamt) & LINE_BREAK;
      end if;
      if( (a.rtrebpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTREBPD (Pcode: Rate Rebate Period) [rtrebpd] : " & Format(a.rtrebpd) & LINE_BREAK;
      end if;
      if( (a.rtrtr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTRTR (Whether NI Rate Relief) [rtrtr] : " & Format(a.rtrtr) & LINE_BREAK;
      end if;
      if( (a.rtrtramt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTRTRAMT (Amount of rate relief allowed) [rtrtramt] : " & Format(a.rtrtramt) & LINE_BREAK;
      end if;
      if( (a.rtrtrpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTRTRPD (Pcode: NI Rate Relief Period) [rtrtrpd] : " & Format(a.rtrtrpd) & LINE_BREAK;
      end if;
      if( (a.rttimepd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTTIMEPD (Pcode: Rate Instalment Period) [rttimepd] : " & Format(a.rttimepd) & LINE_BREAK;
      end if;
      if( (a.sampqtr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAMPQTR (Quarter sample belongs to) [sampqtr] : " & Format(a.sampqtr) & LINE_BREAK;
      end if;
      if( (a.schmeal /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCHMEAL (Whether anyone had free school meals) [schmeal] : " & Format(a.schmeal) & LINE_BREAK;
      end if;
      if( (a.schmilk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCHMILK (Whether anyone had free school milk) [schmilk] : " & Format(a.schmilk) & LINE_BREAK;
      end if;
      if( (a.sewamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWAMT (Sewerage rates: amount paid last time) [sewamt] : " & Format(a.sewamt) & LINE_BREAK;
      end if;
      if( (a.sewanul /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWANUL (Weeklyised annual sewerage rate) [sewanul] : " & Format(a.sewanul) & LINE_BREAK;
      end if;
      if( (a.sewerpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWERPAY (Whether HH pays sewerage rates/charges) [sewerpay] : " & Format(a.sewerpay) & LINE_BREAK;
      end if;
      if( (a.sewsep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWSEP (Whether water/sew rates/charges combined) [sewsep] : " & Format(a.sewsep) & LINE_BREAK;
      end if;
      if( (a.sewtime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEWTIME (Sewerage rates/charges:times a year paid) [sewtime] : " & Format(a.sewtime) & LINE_BREAK;
      end if;
      if( (a.shelter /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SHELTER (Whether sheltered accommodation) [shelter] : " & Format(a.shelter) & LINE_BREAK;
      end if;
      if( (a.sobuy /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SOBUY (Still buying share in house/flat or paid) [sobuy] : " & Format(a.sobuy) & LINE_BREAK;
      end if;
      if( (a.sstrtreg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSTRTREG (FRS Regional Stratifier) [sstrtreg] : " & Format(a.sstrtreg) & LINE_BREAK;
      end if;
      if( (a.stramt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRAMT1 (Amount: Insurance part of repayment) [stramt1] : " & Format(a.stramt1) & LINE_BREAK;
      end if;
      if( (a.stramt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRAMT2 (Amount: Insurance premium) [stramt2] : " & Format(a.stramt2) & LINE_BREAK;
      end if;
      if( (a.strcov /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRCOV (Items covered by insurance policy) [strcov] : " & Format(a.strcov) & LINE_BREAK;
      end if;
      if( (a.strmort /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRMORT (Whether mortgage payments inc. insurance) [strmort] : " & Format(a.strmort) & LINE_BREAK;
      end if;
      if( (a.stroths /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STROTHS (Whether pay buildings insurance) [stroths] : " & Format(a.stroths) & LINE_BREAK;
      end if;
      if( (a.strpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRPD1 (Pcode: Buildings insurance - repayment) [strpd1] : " & Format(a.strpd1) & LINE_BREAK;
      end if;
      if( (a.strpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRPD2 (Pcode: Buildings insurance - premium) [strpd2] : " & Format(a.strpd2) & LINE_BREAK;
      end if;
      if( (a.suballow /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUBALLOW (Whether SUBRENT before/after expenses) [suballow] : " & Format(a.suballow) & LINE_BREAK;
      end if;
      if( (a.sublet /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUBLET (Whether have formal sublet arrangement) [sublet] : " & Format(a.sublet) & LINE_BREAK;
      end if;
      if( (a.sublety /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUBLETY (Who subletting arrangement with) [sublety] : " & Format(a.sublety) & LINE_BREAK;
      end if;
      if( (a.subrent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SUBRENT (Amount of rent from subletting) [subrent] : " & Format(a.subrent) & LINE_BREAK;
      end if;
      if( (a.tenure /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TENURE (Tenure) [tenure] : " & Format(a.tenure) & LINE_BREAK;
      end if;
      if( (a.tvlic /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TVLIC (Whether claims concessionary TV licence) [tvlic] : " & Format(a.tvlic) & LINE_BREAK;
      end if;
      if( (a.typeacc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TYPEACC (Type of accommodation) [typeacc] : " & Format(a.typeacc) & LINE_BREAK;
      end if;
      if( (a.urindew /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "URINDEW (Urban and Rural Indicators for England and Wales) [urindew] : " & Format(a.urindew) & LINE_BREAK;
      end if;
      if( (a.urinds /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "URINDS (Urban and Rural Indicators for Scotland) [urinds] : " & Format(a.urinds) & LINE_BREAK;
      end if;
      if( (a.watamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATAMT (Water rates: amount paid last time) [watamt] : " & Format(a.watamt) & LINE_BREAK;
      end if;
      if( (a.watanul /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATANUL (Weeklyised annual water rate) [watanul] : " & Format(a.watanul) & LINE_BREAK;
      end if;
      if( (a.watermet /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATERMET (Whether water charges are metered) [watermet] : " & Format(a.watermet) & LINE_BREAK;
      end if;
      if( (a.waterpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATERPAY (Whether pay water rates/charges) [waterpay] : " & Format(a.waterpay) & LINE_BREAK;
      end if;
      if( (a.watrb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATRB (Whether receive water rebate) [watrb] : " & Format(a.watrb) & LINE_BREAK;
      end if;
      if( (a.wattime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATTIME (Water rates/charges: times a year paid) [wattime] : " & Format(a.wattime) & LINE_BREAK;
      end if;
      if( (a.whoctb01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB01 (Person 1 receives CTB) [whoctb01] : " & Format(a.whoctb01) & LINE_BREAK;
      end if;
      if( (a.whoctb02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB02 (Person 2 receives CTB) [whoctb02] : " & Format(a.whoctb02) & LINE_BREAK;
      end if;
      if( (a.whoctb03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB03 (Person 3 receives CTB) [whoctb03] : " & Format(a.whoctb03) & LINE_BREAK;
      end if;
      if( (a.whoctb04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB04 (Person 4 receives CTB) [whoctb04] : " & Format(a.whoctb04) & LINE_BREAK;
      end if;
      if( (a.whoctb05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB05 (Person 5 receives CTB) [whoctb05] : " & Format(a.whoctb05) & LINE_BREAK;
      end if;
      if( (a.whoctb06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB06 (Person 6 receives CTB) [whoctb06] : " & Format(a.whoctb06) & LINE_BREAK;
      end if;
      if( (a.whoctb07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB07 (Person 7 receives CTB) [whoctb07] : " & Format(a.whoctb07) & LINE_BREAK;
      end if;
      if( (a.whoctb08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB08 (Person 8 receives CTB) [whoctb08] : " & Format(a.whoctb08) & LINE_BREAK;
      end if;
      if( (a.whoctb09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB09 (Person 9 receives CTB) [whoctb09] : " & Format(a.whoctb09) & LINE_BREAK;
      end if;
      if( (a.whoctb10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB10 (Person 10 receives CTB) [whoctb10] : " & Format(a.whoctb10) & LINE_BREAK;
      end if;
      if( (a.whoctb11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB11 (Person 11 receives CTB) [whoctb11] : " & Format(a.whoctb11) & LINE_BREAK;
      end if;
      if( (a.whoctb12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB12 (Person 12 receives CTB) [whoctb12] : " & Format(a.whoctb12) & LINE_BREAK;
      end if;
      if( (a.whoctb13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB13 (Person 13 receives CTB) [whoctb13] : " & Format(a.whoctb13) & LINE_BREAK;
      end if;
      if( (a.whoctb14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTB14 (Person 14 receives CTB) [whoctb14] : " & Format(a.whoctb14) & LINE_BREAK;
      end if;
      if( (a.whoctbot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTBOT (Someone else) [whoctbot] : " & Format(a.whoctbot) & LINE_BREAK;
      end if;
      if( (a.whorsp01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP01 (Whether Person01 responsible for accomm.) [whorsp01] : " & Format(a.whorsp01) & LINE_BREAK;
      end if;
      if( (a.whorsp02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP02 (Whether Person02 responsible for accomm.) [whorsp02] : " & Format(a.whorsp02) & LINE_BREAK;
      end if;
      if( (a.whorsp03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP03 (Whether Person03 responsible for accomm.) [whorsp03] : " & Format(a.whorsp03) & LINE_BREAK;
      end if;
      if( (a.whorsp04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP04 (Whether Person04 responsible for accomm.) [whorsp04] : " & Format(a.whorsp04) & LINE_BREAK;
      end if;
      if( (a.whorsp05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP05 (Whether Person05 responsible for accomm.) [whorsp05] : " & Format(a.whorsp05) & LINE_BREAK;
      end if;
      if( (a.whorsp06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP06 (Whether Person06 responsible for accomm.) [whorsp06] : " & Format(a.whorsp06) & LINE_BREAK;
      end if;
      if( (a.whorsp07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP07 (Whether Person07 responsible for accomm.) [whorsp07] : " & Format(a.whorsp07) & LINE_BREAK;
      end if;
      if( (a.whorsp08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP08 (Whether Person08 responsible for accomm.) [whorsp08] : " & Format(a.whorsp08) & LINE_BREAK;
      end if;
      if( (a.whorsp09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP09 (Whether Person09 responsible for accomm.) [whorsp09] : " & Format(a.whorsp09) & LINE_BREAK;
      end if;
      if( (a.whorsp10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP10 (Whether Person10 responsible for accomm.) [whorsp10] : " & Format(a.whorsp10) & LINE_BREAK;
      end if;
      if( (a.whorsp11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP11 (Whether Person11 responsible for accomm.) [whorsp11] : " & Format(a.whorsp11) & LINE_BREAK;
      end if;
      if( (a.whorsp12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP12 (Whether Person12 responsible for accomm.) [whorsp12] : " & Format(a.whorsp12) & LINE_BREAK;
      end if;
      if( (a.whorsp13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP13 (Whether Person13 responsible for accomm.) [whorsp13] : " & Format(a.whorsp13) & LINE_BREAK;
      end if;
      if( (a.whorsp14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHORSP14 (Whether Person14 responsible for accomm.) [whorsp14] : " & Format(a.whorsp14) & LINE_BREAK;
      end if;
      if( (a.whynoct /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOCT (Reason for paying no Council Tax) [whynoct] : " & Format(a.whynoct) & LINE_BREAK;
      end if;
      if( (a.wsewamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WSEWAMT (Combined water/sewer rates: amount paid) [wsewamt] : " & Format(a.wsewamt) & LINE_BREAK;
      end if;
      if( (a.wsewanul /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WSEWANUL (Weeklyised annual water/sewerage rate) [wsewanul] : " & Format(a.wsewanul) & LINE_BREAK;
      end if;
      if( (a.wsewtime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WSEWTIME (Combined water rates: times a year paid) [wsewtime] : " & Format(a.wsewtime) & LINE_BREAK;
      end if;
      if( (a.yearcode /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YEARCODE (Year Code) [yearcode] : " & Format(a.yearcode) & LINE_BREAK;
      end if;
      if( (a.yearlive /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YEARLIVE (Years HRP lived at the address) [yearlive] : " & Format(a.yearlive) & LINE_BREAK;
      end if;
      if( (a.yrlvchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YRLVCHK (Whether moved to address on or after 7th April 2009) [yrlvchk] : " & Format(a.yrlvchk) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.adddahh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADDDAHH (Number of adults within HH who have a DDA defined disability) [adddahh] : " & Format(a.adddahh) & LINE_BREAK;
      end if;
      if( (a.adulth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ADULTH (Number of adults in HH) [adulth] : " & Format(a.adulth) & LINE_BREAK;
      end if;
      if( (a.bedroom6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BEDROOM6 (Number of bedrooms - max of 6) [bedroom6] : " & Format(a.bedroom6) & LINE_BREAK;
      end if;
      if( (a.chddahh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHDDAHH (Number of children within HH who have a DDA defined disabili) [chddahh] : " & Format(a.chddahh) & LINE_BREAK;
      end if;
      if( (a.country /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COUNTRY (Re-organises GVTREGN into the four geographical areas of UK) [country] : " & Format(a.country) & LINE_BREAK;
      end if;
      if( (a.cwatamtd /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CWATAMTD (Deriv Council Tax water charge -Scot) [cwatamtd] : " & Format(a.cwatamtd) & LINE_BREAK;
      end if;
      if( (a.depchldh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEPCHLDH (Number of children in household) [depchldh] : " & Format(a.depchldh) & LINE_BREAK;
      end if;
      if( (a.emp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMP (HRP Unemployed (Pub.)) [emp] : " & Format(a.emp) & LINE_BREAK;
      end if;
      if( (a.emphrp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPHRP (One or more Unemp in HH excl. HRP(Pub.)) [emphrp] : " & Format(a.emphrp) & LINE_BREAK;
      end if;
      if( (a.endowpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDOWPAY (Owner Occs - Endowment premiums) [endowpay] : " & Format(a.endowpay) & LINE_BREAK;
      end if;
      if( (a.gbhscost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GBHSCOST (GB - Total Housing costs) [gbhscost] : " & Format(a.gbhscost) & LINE_BREAK;
      end if;
      if( (a.gross3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3 (Grossing Factor) [gross3] : " & Format(a.gross3) & LINE_BREAK;
      end if;
      if( (a.grossct /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSSCT (Gross Council Tax - Band D) [grossct] : " & Format(a.grossct) & LINE_BREAK;
      end if;
      if( (a.hbeninc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENINC (HH - Benefit income) [hbeninc] : " & Format(a.hbeninc) & LINE_BREAK;
      end if;
      if( (a.hbindhh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBINDHH (HH - in receipt of HB, CTB, IS/PC/ESA[IR] indicator) [hbindhh] : " & Format(a.hbindhh) & LINE_BREAK;
      end if;
      if( (a.hbindhh2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBINDHH2 (HH - in receipt of HB, CTB, IS/PC/JSA[IB]/ESA[IR] indicator) [hbindhh2] : " & Format(a.hbindhh2) & LINE_BREAK;
      end if;
      if( (a.hdhhinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDHHINC (Total banded househol hot deck income) [hdhhinc] : " & Format(a.hdhhinc) & LINE_BREAK;
      end if;
      if( (a.hdtax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDTAX (Hotdeck DV: Council Tax/NI Rateable Value Bands) [hdtax] : " & Format(a.hdtax) & LINE_BREAK;
      end if;
      if( (a.hearns /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HEARNS (HH - Gross Income from Employment) [hearns] : " & Format(a.hearns) & LINE_BREAK;
      end if;
      if( (a.hhagegr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHAGEGR2 (Revised Age of HRP (Pub.)) [hhagegr2] : " & Format(a.hhagegr2) & LINE_BREAK;
      end if;
      if( (a.hhagegr3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHAGEGR3 (Age of HRP - 10 Year Age Bands - Anon.) [hhagegr3] : " & Format(a.hhagegr3) & LINE_BREAK;
      end if;
      if( (a.hhagegr4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHAGEGR4 (Age of HRP - 5 Year Age Bands - Anon.) [hhagegr4] : " & Format(a.hhagegr4) & LINE_BREAK;
      end if;
      if( (a.hhagegrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHAGEGRP (Age of HRP (Pub.)) [hhagegrp] : " & Format(a.hhagegrp) & LINE_BREAK;
      end if;
      if( (a.hhcomps /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHCOMPS (Household comp - revised) [hhcomps] : " & Format(a.hhcomps) & LINE_BREAK;
      end if;
      if( (a.hhdisben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHDISBEN (HH - Disability benefits) [hhdisben] : " & Format(a.hhdisben) & LINE_BREAK;
      end if;
      if( (a.hhinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHINC (HH - Total Household income) [hhinc] : " & Format(a.hhinc) & LINE_BREAK;
      end if;
      if( (a.hhincbnd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHINCBND (Household Income Bands - Pub.) [hhincbnd] : " & Format(a.hhincbnd) & LINE_BREAK;
      end if;
      if( (a.hhinv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHINV (HH - Investment income) [hhinv] : " & Format(a.hhinv) & LINE_BREAK;
      end if;
      if( (a.hhirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHIRBEN (HH - income related benefits) [hhirben] : " & Format(a.hhirben) & LINE_BREAK;
      end if;
      if( (a.hhnirben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHNIRBEN (HH - non income related benefits) [hhnirben] : " & Format(a.hhnirben) & LINE_BREAK;
      end if;
      if( (a.hhothben /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHOTHBEN (HH - Other benefits) [hhothben] : " & Format(a.hhothben) & LINE_BREAK;
      end if;
      if( (a.hhrent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHRENT (Gross Rent for HH) [hhrent] : " & Format(a.hhrent) & LINE_BREAK;
      end if;
      if( (a.hhrinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHRINC (HH - Remaining income) [hhrinc] : " & Format(a.hhrinc) & LINE_BREAK;
      end if;
      if( (a.hhrpinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHRPINC (HH - Retirement pension + IS) [hhrpinc] : " & Format(a.hhrpinc) & LINE_BREAK;
      end if;
      if( (a.hhtvlic /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHTVLIC (HH - Amount of Income from free TV licences) [hhtvlic] : " & Format(a.hhtvlic) & LINE_BREAK;
      end if;
      if( (a.hhtxcred /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHTXCRED (HH - Amount of Tax Credits Received) [hhtxcred] : " & Format(a.hhtxcred) & LINE_BREAK;
      end if;
      if( (a.hothinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOTHINC (HH - Non Benefit income) [hothinc] : " & Format(a.hothinc) & LINE_BREAK;
      end if;
      if( (a.hpeninc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HPENINC (HH - Pension income) [hpeninc] : " & Format(a.hpeninc) & LINE_BREAK;
      end if;
      if( (a.hseinc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HSEINC (HH - Gross Self-Employment Earnings) [hseinc] : " & Format(a.hseinc) & LINE_BREAK;
      end if;
      if( (a.london /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LONDON (Location of Household) [london] : " & Format(a.london) & LINE_BREAK;
      end if;
      if( (a.mortcost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTCOST (Owner Occs - Weekly housing expenditure) [mortcost] : " & Format(a.mortcost) & LINE_BREAK;
      end if;
      if( (a.mortint /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTINT (Owner Occs - Mortgage interest) [mortint] : " & Format(a.mortint) & LINE_BREAK;
      end if;
      if( (a.mortpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTPAY (Mortgage int. plus m/gage prot premiums) [mortpay] : " & Format(a.mortpay) & LINE_BREAK;
      end if;
      if( (a.nihscost /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIHSCOST (NI - Total Housing costs) [nihscost] : " & Format(a.nihscost) & LINE_BREAK;
      end if;
      if( (a.penage /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENAGE (HRP over Pen Age (Pub.)) [penage] : " & Format(a.penage) & LINE_BREAK;
      end if;
      if( (a.penhrp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENHRP (One or more Pen Age excl. HRP-Pub.) [penhrp] : " & Format(a.penhrp) & LINE_BREAK;
      end if;
      if( (a.ptentyp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTENTYP2 (Tenure type - PUB) [ptentyp2] : " & Format(a.ptentyp2) & LINE_BREAK;
      end if;
      if( (a.rooms10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROOMS10 (Total number of rooms - max of 10) [rooms10] : " & Format(a.rooms10) & LINE_BREAK;
      end if;
      if( (a.servpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERVPAY (Owner Occs - Service payments) [servpay] : " & Format(a.servpay) & LINE_BREAK;
      end if;
      if( (a.struins /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STRUINS (Owner Occs - Structural insurance payments) [struins] : " & Format(a.struins) & LINE_BREAK;
      end if;
      if( (a.tentyp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TENTYP2 (Tenure type) [tentyp2] : " & Format(a.tentyp2) & LINE_BREAK;
      end if;
      if( (a.tuhhrent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TUHHRENT (Take up - Gross Rent for HH) [tuhhrent] : " & Format(a.tuhhrent) & LINE_BREAK;
      end if;
      if( (a.tuwatsew /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TUWATSEW (Take up - water and sewerage) [tuwatsew] : " & Format(a.tuwatsew) & LINE_BREAK;
      end if;
      if( (a.watsewrt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATSEWRT (Total Water and Sewerage) [watsewrt] : " & Format(a.watsewrt) & LINE_BREAK;
      end if;
      if( (a.ninrv /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NINRV (Net Rateable Value Of Property) [ninrv] : " & Format(a.ninrv) & LINE_BREAK;
      end if;
      if( (a.nirate /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIRATE (Amount of District Council Rate) [nirate] : " & Format(a.nirate) & LINE_BREAK;
      end if;
      if( (a.orgsewam /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ORGSEWAM (Dom. Sew. Ch. orig entry before discount) [orgsewam] : " & Format(a.orgsewam) & LINE_BREAK;
      end if;
      if( (a.orgwatam /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ORGWATAM (Dom. Wat. Ch. orig entry before discount) [orgwatam] : " & Format(a.orgwatam) & LINE_BREAK;
      end if;
      if( (a.roomshar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ROOMSHAR (No. rooms shared with non hh member) [roomshar] : " & Format(a.roomshar) & LINE_BREAK;
      end if;
      if( (a.totchild /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTCHILD (Total children (derived)) [totchild] : " & Format(a.totchild) & LINE_BREAK;
      end if;
      if( (a.totdepdk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTDEPDK (Total adult/child don’t know (derived)) [totdepdk] : " & Format(a.totdepdk) & LINE_BREAK;
      end if;
      if( (a.welfmilk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WELFMILK (Whether anyone had free welfare milk) [welfmilk] : " & Format(a.welfmilk) & LINE_BREAK;
      end if;
      if( (a.whoctbns /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHOCTBNS (Not on Statement) [whoctbns] : " & Format(a.whoctbns) & LINE_BREAK;
      end if;
      if( (a.wmintro /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WMINTRO (Whether free milk in past seven days) [wmintro] : " & Format(a.wmintro) & LINE_BREAK;
      end if;
      if( (a.gross3_x /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS3_X (Grossing Factor - Old Version) [gross3_x] : " & Format(a.gross3_x) & LINE_BREAK;
      end if;
      if( (a.rtdeduc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTDEDUC (Was deduction from last rates payment) [rtdeduc] : " & Format(a.rtdeduc) & LINE_BREAK;
      end if;
      if( (a.rttime /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTTIME (Pcode: Rate Instalment Period) [rttime] : " & Format(a.rttime) & LINE_BREAK;
      end if;
      if( (a.actacch /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACTACCH (Adult in HH holds account capable of accepting Direct Paymen) [actacch] : " & Format(a.actacch) & LINE_BREAK;
      end if;
      if( (a.basacth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BASACTH (HH - No. of Basic Bank accounts held) [basacth] : " & Format(a.basacth) & LINE_BREAK;
      end if;
      if( (a.crunach /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CRUNACH (HH - No. of Credit Union held) [crunach] : " & Format(a.crunach) & LINE_BREAK;
      end if;
      if( (a.curacth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CURACTH (HH - No. of Current accounts held) [curacth] : " & Format(a.curacth) & LINE_BREAK;
      end if;
      if( (a.enomorth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENOMORTH (HH - No. of Endowment not linked to a mortgage held) [enomorth] : " & Format(a.enomorth) & LINE_BREAK;
      end if;
      if( (a.fsbndcth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FSBNDCTH (HH - No. of Fixed Rate Bonds held) [fsbndcth] : " & Format(a.fsbndcth) & LINE_BREAK;
      end if;
      if( (a.gebacth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GEBACTH (HH - No. of Guaranteed Equity Bonds held) [gebacth] : " & Format(a.gebacth) & LINE_BREAK;
      end if;
      if( (a.giltcth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GILTCTH (HH - No. of Gilts held) [giltcth] : " & Format(a.giltcth) & LINE_BREAK;
      end if;
      if( (a.hcband /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HCBAND (Housing Cost Bands - Pub.) [hcband] : " & Format(a.hcband) & LINE_BREAK;
      end if;
      if( (a.hhcomp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHCOMP (Household composition) [hhcomp] : " & Format(a.hhcomp) & LINE_BREAK;
      end if;
      if( (a.hhethgr2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHETHGR2 (Ethnicity of Head of HOUSEHOL (Pub. 2003-04)) [hhethgr2] : " & Format(a.hhethgr2) & LINE_BREAK;
      end if;
      if( (a.hhkids /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHKIDS (Alternative HH composition - Pub.) [hhkids] : " & Format(a.hhkids) & LINE_BREAK;
      end if;
      if( (a.hhsize /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHSIZE (Number of People in HH (Pub.)) [hhsize] : " & Format(a.hhsize) & LINE_BREAK;
      end if;
      if( (a.hrband /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HRBAND (Household Rent Bands - Pub.) [hrband] : " & Format(a.hrband) & LINE_BREAK;
      end if;
      if( (a.isacth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISACTH (HH - No. of ISAs held) [isacth] : " & Format(a.isacth) & LINE_BREAK;
      end if;
      if( (a.nddctb /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NDDCTB (HH - Total non-dep deds-CTB) [nddctb] : " & Format(a.nddctb) & LINE_BREAK;
      end if;
      if( (a.nddishc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NDDISHC (HH - Total Non-dep deds-rent rebates and IS/JSA(IB) housing) [nddishc] : " & Format(a.nddishc) & LINE_BREAK;
      end if;
      if( (a.nsbocth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NSBOCTH (HH - No. of National savings held) [nsbocth] : " & Format(a.nsbocth) & LINE_BREAK;
      end if;
      if( (a.otbscth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTBSCTH (HH - No. of Other building Soc held) [otbscth] : " & Format(a.otbscth) & LINE_BREAK;
      end if;
      if( (a.pacctype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PACCTYPE (Accommodation type) [pacctype] : " & Format(a.pacctype) & LINE_BREAK;
      end if;
      if( (a.pepscth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PEPSCTH (HH - No. of PEPs held) [pepscth] : " & Format(a.pepscth) & LINE_BREAK;
      end if;
      if( (a.poaccth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POACCTH (HH - No. of PO accounts held) [poaccth] : " & Format(a.poaccth) & LINE_BREAK;
      end if;
      if( (a.pocardh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POCARDH (HH - No. of Post Office Card Account) [pocardh] : " & Format(a.pocardh) & LINE_BREAK;
      end if;
      if( (a.prbocth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRBOCTH (HH - No. of Premium bonds held) [prbocth] : " & Format(a.prbocth) & LINE_BREAK;
      end if;
      if( (a.sayecth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAYECTH (HH - No. of Save as you earn held) [sayecth] : " & Format(a.sayecth) & LINE_BREAK;
      end if;
      if( (a.sclbcth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SCLBCTH (HH - No. of Member of Share Club) [sclbcth] : " & Format(a.sclbcth) & LINE_BREAK;
      end if;
      if( (a.sick /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SICK (HRP Sick/Disab (Pub.)) [sick] : " & Format(a.sick) & LINE_BREAK;
      end if;
      if( (a.sickhrp /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SICKHRP (One or more Sick/Disab excl. HRP-Pub.) [sickhrp] : " & Format(a.sickhrp) & LINE_BREAK;
      end if;
      if( (a.sscth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSCTH (HH - No. of Participation in Company Share Schemes) [sscth] : " & Format(a.sscth) & LINE_BREAK;
      end if;
      if( (a.stshcth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STSHCTH (HH - No. of Stocks and shares held) [stshcth] : " & Format(a.stshcth) & LINE_BREAK;
      end if;
      if( (a.tesscth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TESSCTH (HH - No. of TESSAs held) [tesscth] : " & Format(a.tesscth) & LINE_BREAK;
      end if;
      if( (a.untrcth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNTRCTH (HH - No. of Unit trusts held) [untrcth] : " & Format(a.untrcth) & LINE_BREAK;
      end if;
      if( (a.acorn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACORN (ACORN) [acorn] : " & Format(a.acorn) & LINE_BREAK;
      end if;
      if( (a.contv1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONTV1 (Whether household has colour TV set) [contv1] : " & Format(a.contv1) & LINE_BREAK;
      end if;
      if( (a.contv2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONTV2 (Whether household has black/white TV set) [contv2] : " & Format(a.contv2) & LINE_BREAK;
      end if;
      if( (a.estrtann /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ESTRTANN (Amount Total Rate paid after deduction) [estrtann] : " & Format(a.estrtann) & LINE_BREAK;
      end if;
      if( (a.rtcheck /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RTCHECK (Weeklyised amount of Annual rates paid) [rtcheck] : " & Format(a.rtcheck) & LINE_BREAK;
      end if;
      if( (a.usevcl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USEVCL (Number of vehicles owned/contin. use of) [usevcl] : " & Format(a.usevcl) & LINE_BREAK;
      end if;
      if( (a.vehnumb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VEHNUMB (Number of vehicles) [vehnumb] : " & Format(a.vehnumb) & LINE_BREAK;
      end if;
      if( (a.acornew /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACORNEW (ACORN (New Version)) [acornew] : " & Format(a.acornew) & LINE_BREAK;
      end if;
      if( (a.premium /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PREMIUM (Whether anyone paid an insurance premium) [premium] : " & Format(a.premium) & LINE_BREAK;
      end if;
      if( (a.totadult /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTADULT (Total adults (derived)) [totadult] : " & Format(a.totadult) & LINE_BREAK;
      end if;
      if( (a.equivahc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQUIVAHC (HH-equivalence scale after HC) [equivahc] : " & Format(a.equivahc) & LINE_BREAK;
      end if;
      if( (a.equivbhc /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EQUIVBHC (HH-equivalence scale before HC) [equivbhc] : " & Format(a.equivbhc) & LINE_BREAK;
      end if;
      if( (a.hhethgrp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHETHGRP (Ethnicity of HRP (Pub. Pre-2003-04)) [hhethgrp] : " & Format(a.hhethgrp) & LINE_BREAK;
      end if;
      if( (a.centfuel /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CENTFUEL (Type of fuel used by central heating) [centfuel] : " & Format(a.centfuel) & LINE_BREAK;
      end if;
      if( (a.centheat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CENTHEAT (Whether accomodation has central heating) [centheat] : " & Format(a.centheat) & LINE_BREAK;
      end if;
      if( (a.gor /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GOR (Government Office Region in UK (Old version see GVTREGN)) [gor] : " & Format(a.gor) & LINE_BREAK;
      end if;
      if( (a.modcon01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON01 (Whether TV satellite receiver) [modcon01] : " & Format(a.modcon01) & LINE_BREAK;
      end if;
      if( (a.modcon02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON02 (Whether TV cable receiver) [modcon02] : " & Format(a.modcon02) & LINE_BREAK;
      end if;
      if( (a.modcon03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON03 (Whether digital TV receiver) [modcon03] : " & Format(a.modcon03) & LINE_BREAK;
      end if;
      if( (a.modcon04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON04 (Whether video recorder/player) [modcon04] : " & Format(a.modcon04) & LINE_BREAK;
      end if;
      if( (a.modcon05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON05 (Whether deep freeze or fridge freezer) [modcon05] : " & Format(a.modcon05) & LINE_BREAK;
      end if;
      if( (a.modcon06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON06 (Whether washing machine) [modcon06] : " & Format(a.modcon06) & LINE_BREAK;
      end if;
      if( (a.modcon07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON07 (Whether tumble drier) [modcon07] : " & Format(a.modcon07) & LINE_BREAK;
      end if;
      if( (a.modcon08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON08 (Whether dishwasher) [modcon08] : " & Format(a.modcon08) & LINE_BREAK;
      end if;
      if( (a.modcon09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON09 (Whether microwave oven) [modcon09] : " & Format(a.modcon09) & LINE_BREAK;
      end if;
      if( (a.modcon10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON10 (Whether fixed telephone) [modcon10] : " & Format(a.modcon10) & LINE_BREAK;
      end if;
      if( (a.modcon11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON11 (Whether one or more mobile phones) [modcon11] : " & Format(a.modcon11) & LINE_BREAK;
      end if;
      if( (a.modcon12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON12 (Whether compact disc (CD) player) [modcon12] : " & Format(a.modcon12) & LINE_BREAK;
      end if;
      if( (a.modcon13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON13 (Whether home computer) [modcon13] : " & Format(a.modcon13) & LINE_BREAK;
      end if;
      if( (a.modcon14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MODCON14 (Whether internet access) [modcon14] : " & Format(a.modcon14) & LINE_BREAK;
      end if;
      if( (a.gross2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GROSS2 (Grossing Factor (December 2002)) [gross2] : " & Format(a.gross2) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Insurance_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Insurance";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.insseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INSSEQ (Insseq) [insseq] : " & Format(a.insseq) & LINE_BREAK;
      end if;
      if( (a.numpols1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS1 (Policy covers:personal accident) [numpols1] : " & Format(a.numpols1) & LINE_BREAK;
      end if;
      if( (a.numpols2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS2 (Policy covers:private medical treatment) [numpols2] : " & Format(a.numpols2) & LINE_BREAK;
      end if;
      if( (a.numpols3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS3 (Policy covers:Permanent health insurance) [numpols3] : " & Format(a.numpols3) & LINE_BREAK;
      end if;
      if( (a.numpols4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS4 (Policy covers: Critical illness cover) [numpols4] : " & Format(a.numpols4) & LINE_BREAK;
      end if;
      if( (a.numpols5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS5 (Policy covers: Friendly sickness benefit) [numpols5] : " & Format(a.numpols5) & LINE_BREAK;
      end if;
      if( (a.numpols6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS6 (Policy covers: Hospital cover) [numpols6] : " & Format(a.numpols6) & LINE_BREAK;
      end if;
      if( (a.numpols7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS7 (Policy covers: Long term care) [numpols7] : " & Format(a.numpols7) & LINE_BREAK;
      end if;
      if( (a.numpols8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS8 (Policy covers: Other sickness insur.) [numpols8] : " & Format(a.numpols8) & LINE_BREAK;
      end if;
      if( (a.numpols9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMPOLS9 (Policy covers: Redundancy policy) [numpols9] : " & Format(a.numpols9) & LINE_BREAK;
      end if;
      if( (a.polamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POLAMT (Premium: Amount Paid on this Policy) [polamt] : " & Format(a.polamt) & LINE_BREAK;
      end if;
      if( (a.polmore /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POLMORE (Whether anymore policies) [polmore] : " & Format(a.polmore) & LINE_BREAK;
      end if;
      if( (a.polpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POLPAY (Person who pays insurance premiums) [polpay] : " & Format(a.polpay) & LINE_BREAK;
      end if;
      if( (a.polpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POLPD (Pcode: Insurance premiums) [polpd] : " & Format(a.polpd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Job_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Job";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.jobtype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "JOBTYPE (Job Type) [jobtype] : " & Format(a.jobtype) & LINE_BREAK;
      end if;
      if( (a.agreehrs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AGREEHRS (Whether agreed with Hours Worked a Week) [agreehrs] : " & Format(a.agreehrs) & LINE_BREAK;
      end if;
      if( (a.bonamt1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT1 (Amount of first bonus) [bonamt1] : " & Format(a.bonamt1) & LINE_BREAK;
      end if;
      if( (a.bonamt2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT2 (Amount of second bonus) [bonamt2] : " & Format(a.bonamt2) & LINE_BREAK;
      end if;
      if( (a.bonamt3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT3 (Amount of third bonus) [bonamt3] : " & Format(a.bonamt3) & LINE_BREAK;
      end if;
      if( (a.bonamt4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT4 (Amount of fourth bonus) [bonamt4] : " & Format(a.bonamt4) & LINE_BREAK;
      end if;
      if( (a.bonamt5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT5 (Amount of fifth bonus) [bonamt5] : " & Format(a.bonamt5) & LINE_BREAK;
      end if;
      if( (a.bonamt6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONAMT6 (Amount of sixth bonus) [bonamt6] : " & Format(a.bonamt6) & LINE_BREAK;
      end if;
      if( (a.bontax1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX1 (1st bonus: before/after tax) [bontax1] : " & Format(a.bontax1) & LINE_BREAK;
      end if;
      if( (a.bontax2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX2 (2nd bonus: before/after tax) [bontax2] : " & Format(a.bontax2) & LINE_BREAK;
      end if;
      if( (a.bontax3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX3 (3rd bonus: before/after tax) [bontax3] : " & Format(a.bontax3) & LINE_BREAK;
      end if;
      if( (a.bontax4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX4 (4th bonus: before/after tax) [bontax4] : " & Format(a.bontax4) & LINE_BREAK;
      end if;
      if( (a.bontax5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX5 (5th bonus: before/after tax) [bontax5] : " & Format(a.bontax5) & LINE_BREAK;
      end if;
      if( (a.bontax6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONTAX6 (6th bonus: before/after tax) [bontax6] : " & Format(a.bontax6) & LINE_BREAK;
      end if;
      if( (a.bonus /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BONUS (Number of Bonuses for Last 12 Months) [bonus] : " & Format(a.bonus) & LINE_BREAK;
      end if;
      if( (a.busaccts /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUSACCTS (Whether annual business accounts kept) [busaccts] : " & Format(a.busaccts) & LINE_BREAK;
      end if;
      if( (a.caramt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARAMT (Total contribution to cost of company car) [caramt] : " & Format(a.caramt) & LINE_BREAK;
      end if;
      if( (a.carcon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARCON (Whether made a contribution to cost of company car) [carcon] : " & Format(a.carcon) & LINE_BREAK;
      end if;
      if( (a.carval /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CARVAL (Estimate of list price of company car) [carval] : " & Format(a.carval) & LINE_BREAK;
      end if;
      if( (a.checktax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHECKTAX (Was Income Tax\NI deducted at source) [checktax] : " & Format(a.checktax) & LINE_BREAK;
      end if;
      if( (a.chkincom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHKINCOM (Is this before or after deductions) [chkincom] : " & Format(a.chkincom) & LINE_BREAK;
      end if;
      if( (a.chvamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVAMT (Amount received for the childcare voucher(s)) [chvamt] : " & Format(a.chvamt) & LINE_BREAK;
      end if;
      if( (a.chvpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVPD (Pcode: childcare voucher) [chvpd] : " & Format(a.chvpd) & LINE_BREAK;
      end if;
      if( (a.chvsac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVSAC (Childcare voucher received in lieu of salary/wages) [chvsac] : " & Format(a.chvsac) & LINE_BREAK;
      end if;
      if( (a.chvuamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVUAMT (Usual amount received for the childcare voucher) [chvuamt] : " & Format(a.chvuamt) & LINE_BREAK;
      end if;
      if( (a.chvupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVUPD (Pcode: Usual amount for childcare voucher) [chvupd] : " & Format(a.chvupd) & LINE_BREAK;
      end if;
      if( (a.chvusu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHVUSU (Whether amount recev'd usual for the childcare voucher) [chvusu] : " & Format(a.chvusu) & LINE_BREAK;
      end if;
      if( (a.dedoth /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDOTH (Total of other deductions) [dedoth] : " & Format(a.dedoth) & LINE_BREAK;
      end if;
      if( (a.deduc1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC1 (Amount deducted:pensions/superannuation) [deduc1] : " & Format(a.deduc1) & LINE_BREAK;
      end if;
      if( (a.deduc2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC2 (Amount deducted: AVCs) [deduc2] : " & Format(a.deduc2) & LINE_BREAK;
      end if;
      if( (a.deduc3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC3 (Amount deducted: Union fees) [deduc3] : " & Format(a.deduc3) & LINE_BREAK;
      end if;
      if( (a.deduc4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC4 (Amount deducted: friendly societies) [deduc4] : " & Format(a.deduc4) & LINE_BREAK;
      end if;
      if( (a.deduc5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC5 (Amount deducted: sports/social clubs) [deduc5] : " & Format(a.deduc5) & LINE_BREAK;
      end if;
      if( (a.deduc6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC6 (Amount deducted: repayment of loan) [deduc6] : " & Format(a.deduc6) & LINE_BREAK;
      end if;
      if( (a.deduc7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC7 (Amount deducted: Medical insurance) [deduc7] : " & Format(a.deduc7) & LINE_BREAK;
      end if;
      if( (a.deduc8 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DEDUC8 (Amount deducted: Charities) [deduc8] : " & Format(a.deduc8) & LINE_BREAK;
      end if;
      if( (a.dirctr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DIRCTR (Whether a director of a company) [dirctr] : " & Format(a.dirctr) & LINE_BREAK;
      end if;
      if( (a.dirni /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DIRNI (National Insurance deducted at source) [dirni] : " & Format(a.dirni) & LINE_BREAK;
      end if;
      if( (a.dvtothru /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVTOTHRU (Usual Weekly Hours inc Paid + Unpaid O/T) [dvtothru] : " & Format(a.dvtothru) & LINE_BREAK;
      end if;
      if( (a.dvushr /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "DVUSHR (Total usual hours) [dvushr] : " & Format(a.dvushr) & LINE_BREAK;
      end if;
      if( (a.empany /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPANY (Number of people employed) [empany] : " & Format(a.empany) & LINE_BREAK;
      end if;
      if( (a.empown /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPOWN (Whether works on own/with employees) [empown] : " & Format(a.empown) & LINE_BREAK;
      end if;
      if( (a.etype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ETYPE (Describe your employment situation) [etype] : " & Format(a.etype) & LINE_BREAK;
      end if;
      if( (a.everot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EVEROT (Whether any Paid or Unpaid Overtime) [everot] : " & Format(a.everot) & LINE_BREAK;
      end if;
      if( (a.expben01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN01 (Received Company car) [expben01] : " & Format(a.expben01) & LINE_BREAK;
      end if;
      if( (a.expben02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN02 (Received Company van) [expben02] : " & Format(a.expben02) & LINE_BREAK;
      end if;
      if( (a.expben03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN03 (Received Fuel for private use) [expben03] : " & Format(a.expben03) & LINE_BREAK;
      end if;
      if( (a.expben04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN04 (Received Business mileage payments) [expben04] : " & Format(a.expben04) & LINE_BREAK;
      end if;
      if( (a.expben05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN05 (Received Travel and business trip expenses) [expben05] : " & Format(a.expben05) & LINE_BREAK;
      end if;
      if( (a.expben06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN06 (Received Smart pension) [expben06] : " & Format(a.expben06) & LINE_BREAK;
      end if;
      if( (a.expben07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN07 (Medical or dental insurance for self or family) [expben07] : " & Format(a.expben07) & LINE_BREAK;
      end if;
      if( (a.expben08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN08 (Received Childcare vouchers/employer contracted childcare) [expben08] : " & Format(a.expben08) & LINE_BREAK;
      end if;
      if( (a.expben09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN09 (Received Mobile phone) [expben09] : " & Format(a.expben09) & LINE_BREAK;
      end if;
      if( (a.expben10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN10 (Received Vouchers) [expben10] : " & Format(a.expben10) & LINE_BREAK;
      end if;
      if( (a.expben11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN11 (Received Subsidised canteen meals) [expben11] : " & Format(a.expben11) & LINE_BREAK;
      end if;
      if( (a.expben12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXPBEN12 (Received Any other benefits in kind) [expben12] : " & Format(a.expben12) & LINE_BREAK;
      end if;
      if( (a.ftpt /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FTPT (Did you work full or part time) [ftpt] : " & Format(a.ftpt) & LINE_BREAK;
      end if;
      if( (a.fuelamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELAMT (Amount received for fuel) [fuelamt] : " & Format(a.fuelamt) & LINE_BREAK;
      end if;
      if( (a.fuelbn /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELBN (Fuel received in lieu of salary/wages) [fuelbn] : " & Format(a.fuelbn) & LINE_BREAK;
      end if;
      if( (a.fuelpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELPD (Pcode: fuel salary sacrifice) [fuelpd] : " & Format(a.fuelpd) & LINE_BREAK;
      end if;
      if( (a.fueltyp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELTYP (Type of fuel company car uses) [fueltyp] : " & Format(a.fueltyp) & LINE_BREAK;
      end if;
      if( (a.fueluamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELUAMT (Usual amount  received for fuel) [fueluamt] : " & Format(a.fueluamt) & LINE_BREAK;
      end if;
      if( (a.fuelupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELUPD (Pcode: Usual amount for fuel) [fuelupd] : " & Format(a.fuelupd) & LINE_BREAK;
      end if;
      if( (a.fuelusu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FUELUSU (Whether usual amount) [fuelusu] : " & Format(a.fuelusu) & LINE_BREAK;
      end if;
      if( (a.grwage /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRWAGE (Gross wage/salary) [grwage] : " & Format(a.grwage) & LINE_BREAK;
      end if;
      if( (a.grwagpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRWAGPD (Pcode: amount of Gross wage/salary) [grwagpd] : " & Format(a.grwagpd) & LINE_BREAK;
      end if;
      if( (a.hha1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHA1 (Amount of 1st refund for HH expenditure) [hha1] : " & Format(a.hha1) & LINE_BREAK;
      end if;
      if( (a.hha2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHA2 (Amount of 2nd refund for HH expenditure) [hha2] : " & Format(a.hha2) & LINE_BREAK;
      end if;
      if( (a.hha3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHA3 (Amount of 3rd refund for HH expenditure) [hha3] : " & Format(a.hha3) & LINE_BREAK;
      end if;
      if( (a.hhc1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHC1 (Whether any other refund 1) [hhc1] : " & Format(a.hhc1) & LINE_BREAK;
      end if;
      if( (a.hhc2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHC2 (Whether any other refund 2) [hhc2] : " & Format(a.hhc2) & LINE_BREAK;
      end if;
      if( (a.hhc3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HHC3 (Whether any other refund 3) [hhc3] : " & Format(a.hhc3) & LINE_BREAK;
      end if;
      if( (a.hohinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOHINC (Whether any refunds for HH expenditure) [hohinc] : " & Format(a.hohinc) & LINE_BREAK;
      end if;
      if( (a.inclpay1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY1 (Last pay includes Statutory sick pay) [inclpay1] : " & Format(a.inclpay1) & LINE_BREAK;
      end if;
      if( (a.inclpay2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY2 (Last pay inc. Statutory Maternity pay) [inclpay2] : " & Format(a.inclpay2) & LINE_BREAK;
      end if;
      if( (a.inclpay3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY3 (Last pay includes Income tax refund) [inclpay3] : " & Format(a.inclpay3) & LINE_BREAK;
      end if;
      if( (a.inclpay4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY4 (Last pay includes Mileage allowance) [inclpay4] : " & Format(a.inclpay4) & LINE_BREAK;
      end if;
      if( (a.inclpay5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY5 (Last pay includes Motoring expenses) [inclpay5] : " & Format(a.inclpay5) & LINE_BREAK;
      end if;
      if( (a.inclpay6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY6 (Last pay includes Statutory Paternity pay) [inclpay6] : " & Format(a.inclpay6) & LINE_BREAK;
      end if;
      if( (a.inclpay7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY7 (Last pay includes Statutory Adoption pay) [inclpay7] : " & Format(a.inclpay7) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.jobbus /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "JOBBUS (Whether job or business) [jobbus] : " & Format(a.jobbus) & LINE_BREAK;
      end if;
      if( (a.likehr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LIKEHR (Hours in job: preference) [likehr] : " & Format(a.likehr) & LINE_BREAK;
      end if;
      if( (a.mademp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MADEMP (Whether getting made up pay (SSP/IB)) [mademp] : " & Format(a.mademp) & LINE_BREAK;
      end if;
      if( (a.matemp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MATEMP (Whether getting made up pay (SMP)) [matemp] : " & Format(a.matemp) & LINE_BREAK;
      end if;
      if( (a.matstp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MATSTP (No of weeks before baby due stopped work) [matstp] : " & Format(a.matstp) & LINE_BREAK;
      end if;
      if( (a.mileamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MILEAMT (Amount included for mileage/motoring) [mileamt] : " & Format(a.mileamt) & LINE_BREAK;
      end if;
      if( (a.motamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MOTAMT (Amount for motoring expenses) [motamt] : " & Format(a.motamt) & LINE_BREAK;
      end if;
      if( (a.natins /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATINS (Amount deducted for NI) [natins] : " & Format(a.natins) & LINE_BREAK;
      end if;
      if( (a.nature /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NATURE (Nature of job) [nature] : " & Format(a.nature) & LINE_BREAK;
      end if;
      if( (a.nidamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIDAMT (How much National Insurance was deducted) [nidamt] : " & Format(a.nidamt) & LINE_BREAK;
      end if;
      if( (a.nidpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIDPD (Pcode : National insurance) [nidpd] : " & Format(a.nidpd) & LINE_BREAK;
      end if;
      if( (a.nmper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NMPER (Person number of person being cared for) [nmper] : " & Format(a.nmper) & LINE_BREAK;
      end if;
      if( (a.nomor1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOMOR1 (Cannot work more hours due to disability) [nomor1] : " & Format(a.nomor1) & LINE_BREAK;
      end if;
      if( (a.nomor2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOMOR2 (Cannot work more hours due to caring) [nomor2] : " & Format(a.nomor2) & LINE_BREAK;
      end if;
      if( (a.nomor3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NOMOR3 (Cannot work more hours due to children) [nomor3] : " & Format(a.nomor3) & LINE_BREAK;
      end if;
      if( (a.numemp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NUMEMP (Number of employees) [numemp] : " & Format(a.numemp) & LINE_BREAK;
      end if;
      if( (a.orgemp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ORGEMP (Number of employees in organisation) [orgemp] : " & Format(a.orgemp) & LINE_BREAK;
      end if;
      if( (a.othded1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED1 (Whether amount deducted:pension) [othded1] : " & Format(a.othded1) & LINE_BREAK;
      end if;
      if( (a.othded2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED2 (Whether amount deducted: AVCs) [othded2] : " & Format(a.othded2) & LINE_BREAK;
      end if;
      if( (a.othded3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED3 (Whether amount deducted: Union fees) [othded3] : " & Format(a.othded3) & LINE_BREAK;
      end if;
      if( (a.othded4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED4 (Whether amount deducted: friendly socs) [othded4] : " & Format(a.othded4) & LINE_BREAK;
      end if;
      if( (a.othded5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED5 (Whether amount deducted: sports/social) [othded5] : " & Format(a.othded5) & LINE_BREAK;
      end if;
      if( (a.othded6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED6 (Whether amount deducted: loan repayment) [othded6] : " & Format(a.othded6) & LINE_BREAK;
      end if;
      if( (a.othded7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED7 (Whether amount deducted: Medical Ins) [othded7] : " & Format(a.othded7) & LINE_BREAK;
      end if;
      if( (a.othded8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED8 (Whether amount deducted: Charities) [othded8] : " & Format(a.othded8) & LINE_BREAK;
      end if;
      if( (a.othded9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHDED9 (Whether amount deducted: Other) [othded9] : " & Format(a.othded9) & LINE_BREAK;
      end if;
      if( (a.ownamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OWNAMT (Amount of drawings from business) [ownamt] : " & Format(a.ownamt) & LINE_BREAK;
      end if;
      if( (a.ownotamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OWNOTAMT (Amount:  Other drawings from business) [ownotamt] : " & Format(a.ownotamt) & LINE_BREAK;
      end if;
      if( (a.ownother /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OWNOTHER (Receive any other income from business) [ownother] : " & Format(a.ownother) & LINE_BREAK;
      end if;
      if( (a.ownsum /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OWNSUM (Whether draw money from the business) [ownsum] : " & Format(a.ownsum) & LINE_BREAK;
      end if;
      if( (a.paperiod /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAPERIOD (How many weeks is/was your employer paying SAP) [paperiod] : " & Format(a.paperiod) & LINE_BREAK;
      end if;
      if( (a.payamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYAMT (Amount of last take home pay) [payamt] : " & Format(a.payamt) & LINE_BREAK;
      end if;
      if( (a.paydat /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYDAT (Date last paid) [paydat] : " & Format(a.paydat) & LINE_BREAK;
      end if;
      if( (a.paye /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYE (Amount deducted for PAYE) [paye] : " & Format(a.paye) & LINE_BREAK;
      end if;
      if( (a.paypd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYPD (Pcode: amount of last take home pay) [paypd] : " & Format(a.paypd) & LINE_BREAK;
      end if;
      if( (a.payslip /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYSLIP (Whether payslip consulted) [payslip] : " & Format(a.payslip) & LINE_BREAK;
      end if;
      if( (a.payusl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PAYUSL (Usual pay after all deductions) [payusl] : " & Format(a.payusl) & LINE_BREAK;
      end if;
      if( (a.pothr /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POTHR (hours of paid overtime worked per week) [pothr] : " & Format(a.pothr) & LINE_BREAK;
      end if;
      if( (a.ppperiod /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PPPERIOD (How many weeks is/was your employer paying SPP) [ppperiod] : " & Format(a.ppperiod) & LINE_BREAK;
      end if;
      if( (a.prbefore /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PRBEFORE (Amount of profit before tax) [prbefore] : " & Format(a.prbefore) & LINE_BREAK;
      end if;
      if( (a.prevmth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PREVMTH (Month started previous job) [prevmth] : " & Format(a.prevmth) & LINE_BREAK;
      end if;
      if( (a.prevyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PREVYR (Year started previous job) [prevyr] : " & Format(a.prevyr) & LINE_BREAK;
      end if;
      if( (a.profdocs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROFDOCS (Documents consulted for profit figures) [profdocs] : " & Format(a.profdocs) & LINE_BREAK;
      end if;
      if( (a.profit1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROFIT1 (Amount of net profit or loss) [profit1] : " & Format(a.profit1) & LINE_BREAK;
      end if;
      if( (a.profit2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROFIT2 (Whether PROFIT1 is a profit or loss) [profit2] : " & Format(a.profit2) & LINE_BREAK;
      end if;
      if( (a.profni /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROFNI (Before or after NI deductions) [profni] : " & Format(a.profni) & LINE_BREAK;
      end if;
      if( (a.proftax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROFTAX (Whether PROFIT1 before or after tax) [proftax] : " & Format(a.proftax) & LINE_BREAK;
      end if;
      if( (a.rspoth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RSPOTH (Whether formal respons. for supervising) [rspoth] : " & Format(a.rspoth) & LINE_BREAK;
      end if;
      if( (a.salsac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SALSAC (Whether benefit-in-kind received in lieu of salary/wages) [salsac] : " & Format(a.salsac) & LINE_BREAK;
      end if;
      if( (a.sapamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SAPAMT (Amount included in last wage for SAP) [sapamt] : " & Format(a.sapamt) & LINE_BREAK;
      end if;
      if( (a.se1 /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SE1 (Start date for PROFIT1) [se1] : " & Format(a.se1) & LINE_BREAK;
      end if;
      if( (a.se2 /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SE2 (End date for PROFIT1) [se2] : " & Format(a.se2) & LINE_BREAK;
      end if;
      if( (a.sector /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SECTOR (Indusry sector) [sector] : " & Format(a.sector) & LINE_BREAK;
      end if;
      if( (a.sectrnp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SECTRNP (Other kind of organisation type) [sectrnp] : " & Format(a.sectrnp) & LINE_BREAK;
      end if;
      if( (a.seend /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEEND (Date ceased to be self-employed) [seend] : " & Format(a.seend) & LINE_BREAK;
      end if;
      if( (a.seincamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEINCAMT (What is your income from this business) [seincamt] : " & Format(a.seincamt) & LINE_BREAK;
      end if;
      if( (a.seincwm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SEINCWM (Whether SEINCAMT weekly/monthly) [seincwm] : " & Format(a.seincwm) & LINE_BREAK;
      end if;
      if( (a.selwks /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SELWKS (No of weeks self-employed in last 12mths) [selwks] : " & Format(a.selwks) & LINE_BREAK;
      end if;
      if( (a.seniiamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENIIAMT (Amount of National insurance lump sum) [seniiamt] : " & Format(a.seniiamt) & LINE_BREAK;
      end if;
      if( (a.seniinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENIINC (Whether SETAXAMT includes lump sum NI) [seniinc] : " & Format(a.seniinc) & LINE_BREAK;
      end if;
      if( (a.senilamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENILAMT (Amount of lump sum NI (s-empl)) [senilamt] : " & Format(a.senilamt) & LINE_BREAK;
      end if;
      if( (a.senilump /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENILUMP (Whether made any lump sum NI (s-empl)) [senilump] : " & Format(a.senilump) & LINE_BREAK;
      end if;
      if( (a.seniramt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENIRAMT (Amount of last regular NI (s-empl)) [seniramt] : " & Format(a.seniramt) & LINE_BREAK;
      end if;
      if( (a.senireg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENIREG (Whether make regular NI payment (s-empl)) [senireg] : " & Format(a.senireg) & LINE_BREAK;
      end if;
      if( (a.senirpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SENIRPD (Pcode:amount of last regular NI (s-empl)) [senirpd] : " & Format(a.senirpd) & LINE_BREAK;
      end if;
      if( (a.setax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SETAX (Whether paid any income tax (s-empl)) [setax] : " & Format(a.setax) & LINE_BREAK;
      end if;
      if( (a.setaxamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SETAXAMT (Amount of tax in last 12mths (s-empl)) [setaxamt] : " & Format(a.setaxamt) & LINE_BREAK;
      end if;
      if( (a.smpamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SMPAMT (Amount included in last wage for SMP) [smpamt] : " & Format(a.smpamt) & LINE_BREAK;
      end if;
      if( (a.smprate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SMPRATE (Higher/lower rate of SMP) [smprate] : " & Format(a.smprate) & LINE_BREAK;
      end if;
      if( (a.sole /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SOLE (Whether sole owner of business) [sole] : " & Format(a.sole) & LINE_BREAK;
      end if;
      if( (a.spnamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNAMT (Amount received for smart pension) [spnamt] : " & Format(a.spnamt) & LINE_BREAK;
      end if;
      if( (a.spnpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNPD (Pcode: smart pension) [spnpd] : " & Format(a.spnpd) & LINE_BREAK;
      end if;
      if( (a.spnsac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNSAC (Smart pension received in lieu of salary/wages) [spnsac] : " & Format(a.spnsac) & LINE_BREAK;
      end if;
      if( (a.spnuamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNUAMT (Usual amount  received for smart pension) [spnuamt] : " & Format(a.spnuamt) & LINE_BREAK;
      end if;
      if( (a.spnupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNUPD (Pcode: Usual amount for smart pension) [spnupd] : " & Format(a.spnupd) & LINE_BREAK;
      end if;
      if( (a.spnusu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPNUSU (Whether Usual amount for smart pension) [spnusu] : " & Format(a.spnusu) & LINE_BREAK;
      end if;
      if( (a.sppamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPPAMT (Amount included in last wage for SPP) [sppamt] : " & Format(a.sppamt) & LINE_BREAK;
      end if;
      if( (a.sspamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSPAMT (Amount included in last wage for SSP) [sspamt] : " & Format(a.sspamt) & LINE_BREAK;
      end if;
      if( (a.taxamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXAMT (Amount of refund of income tax) [taxamt] : " & Format(a.taxamt) & LINE_BREAK;
      end if;
      if( (a.taxdamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXDAMT (How much income tax deducted last time) [taxdamt] : " & Format(a.taxdamt) & LINE_BREAK;
      end if;
      if( (a.taxdpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TAXDPD (Pcode: Tax) [taxdpd] : " & Format(a.taxdpd) & LINE_BREAK;
      end if;
      if( (a.totus1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TOTUS1 (Usual Hrs Wrkd Week - no wrk overtime) [totus1] : " & Format(a.totus1) & LINE_BREAK;
      end if;
      if( (a.ubonamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UBONAMT (Amount of bonus included in usual pay) [ubonamt] : " & Format(a.ubonamt) & LINE_BREAK;
      end if;
      if( (a.uboninc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UBONINC (Whether usual net pay includes bonus) [uboninc] : " & Format(a.uboninc) & LINE_BREAK;
      end if;
      if( (a.udeduc1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC1 (Amount deducted: pension) [udeduc1] : " & Format(a.udeduc1) & LINE_BREAK;
      end if;
      if( (a.udeduc2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC2 (Amount deducted: AVCs) [udeduc2] : " & Format(a.udeduc2) & LINE_BREAK;
      end if;
      if( (a.udeduc3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC3 (Amount deducted: Union fees) [udeduc3] : " & Format(a.udeduc3) & LINE_BREAK;
      end if;
      if( (a.udeduc4 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC4 (Amount deducted: friendly socs) [udeduc4] : " & Format(a.udeduc4) & LINE_BREAK;
      end if;
      if( (a.udeduc5 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC5 (Amount deducted: sports/social) [udeduc5] : " & Format(a.udeduc5) & LINE_BREAK;
      end if;
      if( (a.udeduc6 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC6 (Amount deducted: loan repayment) [udeduc6] : " & Format(a.udeduc6) & LINE_BREAK;
      end if;
      if( (a.udeduc7 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC7 (Amount deducted: Medical Ins) [udeduc7] : " & Format(a.udeduc7) & LINE_BREAK;
      end if;
      if( (a.udeduc8 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UDEDUC8 (Amount deducted: Charities) [udeduc8] : " & Format(a.udeduc8) & LINE_BREAK;
      end if;
      if( (a.ugross /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UGROSS (Usual gross pay - last pay not usual) [ugross] : " & Format(a.ugross) & LINE_BREAK;
      end if;
      if( (a.uincpay1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY1 (Usual pay includes Statutory sick pay) [uincpay1] : " & Format(a.uincpay1) & LINE_BREAK;
      end if;
      if( (a.uincpay2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY2 (Usual pay inc. Statutory Maternity pay) [uincpay2] : " & Format(a.uincpay2) & LINE_BREAK;
      end if;
      if( (a.uincpay3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY3 (Usual pay includes Income tax refund) [uincpay3] : " & Format(a.uincpay3) & LINE_BREAK;
      end if;
      if( (a.uincpay4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY4 (Usual pay includes Mileage allowance) [uincpay4] : " & Format(a.uincpay4) & LINE_BREAK;
      end if;
      if( (a.uincpay5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY5 (Usual pay includes Motoring expenses) [uincpay5] : " & Format(a.uincpay5) & LINE_BREAK;
      end if;
      if( (a.uincpay6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY6 (Usual pay includes Statutory Paternity pay) [uincpay6] : " & Format(a.uincpay6) & LINE_BREAK;
      end if;
      if( (a.uincpay7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY7 (Usual pay includes Statutory Adoption pay) [uincpay7] : " & Format(a.uincpay7) & LINE_BREAK;
      end if;
      if( (a.umileamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UMILEAMT (Usual amount included for milage/motorin) [umileamt] : " & Format(a.umileamt) & LINE_BREAK;
      end if;
      if( (a.umotamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UMOTAMT (Usual amount for motoring expenses) [umotamt] : " & Format(a.umotamt) & LINE_BREAK;
      end if;
      if( (a.unett /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UNETT (Usual net pay - last pay not usual) [unett] : " & Format(a.unett) & LINE_BREAK;
      end if;
      if( (a.uothded1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED1 (Whether deducted: pension/superannuation) [uothded1] : " & Format(a.uothded1) & LINE_BREAK;
      end if;
      if( (a.uothded2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED2 (Whether deducted: AVC's) [uothded2] : " & Format(a.uothded2) & LINE_BREAK;
      end if;
      if( (a.uothded3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED3 (Whether deducted: Union Fees) [uothded3] : " & Format(a.uothded3) & LINE_BREAK;
      end if;
      if( (a.uothded4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED4 (Whether deducted: friendly societies) [uothded4] : " & Format(a.uothded4) & LINE_BREAK;
      end if;
      if( (a.uothded5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED5 (Whether deducted: sports/social clubs) [uothded5] : " & Format(a.uothded5) & LINE_BREAK;
      end if;
      if( (a.uothded6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED6 (Whether deducted: repayment of loan) [uothded6] : " & Format(a.uothded6) & LINE_BREAK;
      end if;
      if( (a.uothded7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED7 (Whether deducted: medical insurance) [uothded7] : " & Format(a.uothded7) & LINE_BREAK;
      end if;
      if( (a.uothded8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED8 (Whether deducted: charities) [uothded8] : " & Format(a.uothded8) & LINE_BREAK;
      end if;
      if( (a.uothded9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDED9 (Whether deducted: other) [uothded9] : " & Format(a.uothded9) & LINE_BREAK;
      end if;
      if( (a.uothdtot /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHDTOT (Total Amount of other deductions) [uothdtot] : " & Format(a.uothdtot) & LINE_BREAK;
      end if;
      if( (a.uothr /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UOTHR (hours of unpaid overtime worked per week) [uothr] : " & Format(a.uothr) & LINE_BREAK;
      end if;
      if( (a.upd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UPD (Pcode: amount of usual gross/net pay) [upd] : " & Format(a.upd) & LINE_BREAK;
      end if;
      if( (a.usapamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USAPAMT (Amount included in usual wage for SAP) [usapamt] : " & Format(a.usapamt) & LINE_BREAK;
      end if;
      if( (a.usmpamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USMPAMT (Amount included in usual wage for SMP) [usmpamt] : " & Format(a.usmpamt) & LINE_BREAK;
      end if;
      if( (a.usmprate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USMPRATE (Higher/lower rate of SMP) [usmprate] : " & Format(a.usmprate) & LINE_BREAK;
      end if;
      if( (a.usppamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USPPAMT (Amount included in usual wage for SPP) [usppamt] : " & Format(a.usppamt) & LINE_BREAK;
      end if;
      if( (a.usspamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USSPAMT (Amount included in usual wage for SSP) [usspamt] : " & Format(a.usspamt) & LINE_BREAK;
      end if;
      if( (a.usuhr /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "USUHR (Usual Hours Worked a Week Excluding O/T) [usuhr] : " & Format(a.usuhr) & LINE_BREAK;
      end if;
      if( (a.utaxamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UTAXAMT (Usual amount of refund of income tax) [utaxamt] : " & Format(a.utaxamt) & LINE_BREAK;
      end if;
      if( (a.vchamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHAMT (Amount received for the voucher(s)) [vchamt] : " & Format(a.vchamt) & LINE_BREAK;
      end if;
      if( (a.vchpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHPD (Pcode: voucher) [vchpd] : " & Format(a.vchpd) & LINE_BREAK;
      end if;
      if( (a.vchsac /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHSAC (Voucher received in lieu of salary/wages) [vchsac] : " & Format(a.vchsac) & LINE_BREAK;
      end if;
      if( (a.vchuamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHUAMT (Usual amount  received for the voucher) [vchuamt] : " & Format(a.vchuamt) & LINE_BREAK;
      end if;
      if( (a.vchupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHUPD (Pcode: Usual amount for voucher) [vchupd] : " & Format(a.vchupd) & LINE_BREAK;
      end if;
      if( (a.vchusu /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VCHUSU (Whether amount recev'd usual for the voucher) [vchusu] : " & Format(a.vchusu) & LINE_BREAK;
      end if;
      if( (a.whynou01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU01 (Why last pay not usual: tax rebate) [whynou01] : " & Format(a.whynou01) & LINE_BREAK;
      end if;
      if( (a.whynou02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU02 (Why last pay not usual: tax) [whynou02] : " & Format(a.whynou02) & LINE_BREAK;
      end if;
      if( (a.whynou03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU03 (Why last pay not usual: one-off payment) [whynou03] : " & Format(a.whynou03) & LINE_BREAK;
      end if;
      if( (a.whynou04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU04 (Why last pay not usual: back pay) [whynou04] : " & Format(a.whynou04) & LINE_BREAK;
      end if;
      if( (a.whynou05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU05 (Why last pay not usual: unusual deduction/expenses) [whynou05] : " & Format(a.whynou05) & LINE_BREAK;
      end if;
      if( (a.whynou06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU06 (Why last pay not usual: new tax year) [whynou06] : " & Format(a.whynou06) & LINE_BREAK;
      end if;
      if( (a.whynou07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU07 (Why last pay not usual: tax credits/SSP/SMP) [whynou07] : " & Format(a.whynou07) & LINE_BREAK;
      end if;
      if( (a.whynou08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU08 (Why last pay not usual: wage/salary change) [whynou08] : " & Format(a.whynou08) & LINE_BREAK;
      end if;
      if( (a.whynou09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU09 (Why last pay not usual: change of job) [whynou09] : " & Format(a.whynou09) & LINE_BREAK;
      end if;
      if( (a.whynou10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU10 (Why last pay not usual: overtime) [whynou10] : " & Format(a.whynou10) & LINE_BREAK;
      end if;
      if( (a.whynou11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU11 (Why last pay not usual: work hours temporarily reduced) [whynou11] : " & Format(a.whynou11) & LINE_BREAK;
      end if;
      if( (a.whynou12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU12 (Why last pay not usual: deduction of pay due to absence) [whynou12] : " & Format(a.whynou12) & LINE_BREAK;
      end if;
      if( (a.whynou13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU13 (Why last pay not usual: Work hours/Pay ALWAYS varies) [whynou13] : " & Format(a.whynou13) & LINE_BREAK;
      end if;
      if( (a.whynou14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOU14 (Why last pay not usual: other) [whynou14] : " & Format(a.whynou14) & LINE_BREAK;
      end if;
      if( (a.workacc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WORKACC (Separate accounts: personal and business) [workacc] : " & Format(a.workacc) & LINE_BREAK;
      end if;
      if( (a.workmth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WORKMTH (Month started present job) [workmth] : " & Format(a.workmth) & LINE_BREAK;
      end if;
      if( (a.workyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WORKYR (Year started present job) [workyr] : " & Format(a.workyr) & LINE_BREAK;
      end if;
      if( (a.wrkprev /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WRKPREV (What doing immediately before current job) [wrkprev] : " & Format(a.wrkprev) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.hdqhrs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HDQHRS (Weekly hours worked band) [hdqhrs] : " & Format(a.hdqhrs) & LINE_BREAK;
      end if;
      if( (a.jobhours /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "JOBHOURS (Total hours worked - Each Jobs) [jobhours] : " & Format(a.jobhours) & LINE_BREAK;
      end if;
      if( (a.jobsect /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "JOBSECT (Job sector) [jobsect] : " & Format(a.jobsect) & LINE_BREAK;
      end if;
      if( (a.sspsmpfg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SSPSMPFG (Adults with an SMP, SSP, SAP and SPP adjustment) [sspsmpfg] : " & Format(a.sspsmpfg) & LINE_BREAK;
      end if;
      if( (a.ugrspay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UGRSPAY (Gross weekly pay from a job) [ugrspay] : " & Format(a.ugrspay) & LINE_BREAK;
      end if;
      if( (a.grsofar /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "GRSOFAR (Taxable gross earnings so far this year) [grsofar] : " & Format(a.grsofar) & LINE_BREAK;
      end if;
      if( (a.instype1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INSTYPE1 (Permanent health insurance) [instype1] : " & Format(a.instype1) & LINE_BREAK;
      end if;
      if( (a.instype2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INSTYPE2 (Critical illness cover) [instype2] : " & Format(a.instype2) & LINE_BREAK;
      end if;
      if( (a.nmchc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NMCHC (Whether work more hours if child care) [nmchc] : " & Format(a.nmchc) & LINE_BREAK;
      end if;
      if( (a.watdid /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATDID (Why not paid employment before this job) [watdid] : " & Format(a.watdid) & LINE_BREAK;
      end if;
      if( (a.watprev /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WATPREV (What doing immediately before current job) [watprev] : " & Format(a.watprev) & LINE_BREAK;
      end if;
      if( (a.where /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHERE (Whether childminding is done at home) [where] : " & Format(a.where) & LINE_BREAK;
      end if;
      if( (a.whynopro /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHYNOPRO (Why unable to give profit figure) [whynopro] : " & Format(a.whynopro) & LINE_BREAK;
      end if;
      if( (a.inclpay8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCLPAY8 (Last pay includes Statutory Adoption pay) [inclpay8] : " & Format(a.inclpay8) & LINE_BREAK;
      end if;
      if( (a.inkind01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND01 (Received: Luncheon Vouchers) [inkind01] : " & Format(a.inkind01) & LINE_BREAK;
      end if;
      if( (a.inkind02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND02 (Received: Free meals (including free canteen at work)) [inkind02] : " & Format(a.inkind02) & LINE_BREAK;
      end if;
      if( (a.inkind03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND03 (Received: Subsidised canteen) [inkind03] : " & Format(a.inkind03) & LINE_BREAK;
      end if;
      if( (a.inkind04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND04 (Received: Free or subsidised goods) [inkind04] : " & Format(a.inkind04) & LINE_BREAK;
      end if;
      if( (a.inkind05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND05 (Received: Workplace nursery) [inkind05] : " & Format(a.inkind05) & LINE_BREAK;
      end if;
      if( (a.inkind06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND06 (Received: Childcare vouchers/employer contracted childcare) [inkind06] : " & Format(a.inkind06) & LINE_BREAK;
      end if;
      if( (a.inkind07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND07 (Received: Free/subsidised med insurance) [inkind07] : " & Format(a.inkind07) & LINE_BREAK;
      end if;
      if( (a.inkind08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND08 (Received: Shares or share options) [inkind08] : " & Format(a.inkind08) & LINE_BREAK;
      end if;
      if( (a.inkind09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND09 (Received: Payment of school fees) [inkind09] : " & Format(a.inkind09) & LINE_BREAK;
      end if;
      if( (a.inkind10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND10 (Received: Phone for personal & work) [inkind10] : " & Format(a.inkind10) & LINE_BREAK;
      end if;
      if( (a.inkind11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND11 (Received: Company Vehicle) [inkind11] : " & Format(a.inkind11) & LINE_BREAK;
      end if;
      if( (a.inkind12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND12 (Received: Home Computer) [inkind12] : " & Format(a.inkind12) & LINE_BREAK;
      end if;
      if( (a.inkind13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INKIND13 (Received: Any other payments in kind) [inkind13] : " & Format(a.inkind13) & LINE_BREAK;
      end if;
      if( (a.uincpay8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "UINCPAY8 (Usual pay includes Statutory Adoption pay) [uincpay8] : " & Format(a.uincpay8) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Maint_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Maint";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.maintseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MAINTSEQ (Maintseq) [maintseq] : " & Format(a.maintseq) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.m /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "M (Maintenance payments: anyone else) [m] : " & Format(a.m) & LINE_BREAK;
      end if;
      if( (a.mrage /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRAGE (Maintenance payment: youngest childs age) [mrage] : " & Format(a.mrage) & LINE_BREAK;
      end if;
      if( (a.mramt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRAMT (Amount of last maintenance payment) [mramt] : " & Format(a.mramt) & LINE_BREAK;
      end if;
      if( (a.mrchwhy1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY1 (Maintenance payment changed: court order) [mrchwhy1] : " & Format(a.mrchwhy1) & LINE_BREAK;
      end if;
      if( (a.mrchwhy2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY2 (Maintenance payment changed: CSA) [mrchwhy2] : " & Format(a.mrchwhy2) & LINE_BREAK;
      end if;
      if( (a.mrchwhy3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY3 (Maintenance payment changed:afford more) [mrchwhy3] : " & Format(a.mrchwhy3) & LINE_BREAK;
      end if;
      if( (a.mrchwhy4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY4 (Maintenance payment changed:afford less) [mrchwhy4] : " & Format(a.mrchwhy4) & LINE_BREAK;
      end if;
      if( (a.mrchwhy5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY5 (Maintenance payment changed:needed more) [mrchwhy5] : " & Format(a.mrchwhy5) & LINE_BREAK;
      end if;
      if( (a.mrchwhy6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY6 (Maintenance payment changed:needed less) [mrchwhy6] : " & Format(a.mrchwhy6) & LINE_BREAK;
      end if;
      if( (a.mrchwhy7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY7 (Maintenance payment changed:lost contact) [mrchwhy7] : " & Format(a.mrchwhy7) & LINE_BREAK;
      end if;
      if( (a.mrchwhy8 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY8 (Maintenance payment changed:brokecontact) [mrchwhy8] : " & Format(a.mrchwhy8) & LINE_BREAK;
      end if;
      if( (a.mrchwhy9 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCHWHY9 (Maintenance payment changed:all others) [mrchwhy9] : " & Format(a.mrchwhy9) & LINE_BREAK;
      end if;
      if( (a.mrct /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRCT (Maintenance payment via court order) [mrct] : " & Format(a.mrct) & LINE_BREAK;
      end if;
      if( (a.mrkid /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRKID (Maintenance payment: children covered) [mrkid] : " & Format(a.mrkid) & LINE_BREAK;
      end if;
      if( (a.mrpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRPD (Pcode:amount of last maintenance payment) [mrpd] : " & Format(a.mrpd) & LINE_BREAK;
      end if;
      if( (a.mruamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRUAMT (Amount of usual maintenance payment) [mruamt] : " & Format(a.mruamt) & LINE_BREAK;
      end if;
      if( (a.mrupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRUPD (Pcode:amt of usual maintenance payment) [mrupd] : " & Format(a.mrupd) & LINE_BREAK;
      end if;
      if( (a.mrus /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRUS (Whether last maintenance payment usual) [mrus] : " & Format(a.mrus) & LINE_BREAK;
      end if;
      if( (a.mrv /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRV (Whether amt of maintenance paid varied) [mrv] : " & Format(a.mrv) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.mrr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MRR (Maintenance payments: who for) [mrr] : " & Format(a.mrr) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : MortCont_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== MortCont";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.mortseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTSEQ (Mortgage Sequence Number) [mortseq] : " & Format(a.mortseq) & LINE_BREAK;
      end if;
      if( (a.contseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CONTSEQ (Mortgage Contribution Sequence) [contseq] : " & Format(a.contseq) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.outsamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTSAMT (Amount paid towards mortgage last time) [outsamt] : " & Format(a.outsamt) & LINE_BREAK;
      end if;
      if( (a.outsincl /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTSINCL (Whether included in mortgage payment) [outsincl] : " & Format(a.outsincl) & LINE_BREAK;
      end if;
      if( (a.outspay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTSPAY (Outside contributor to mortgage/loan) [outspay] : " & Format(a.outspay) & LINE_BREAK;
      end if;
      if( (a.outspd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTSPD (Pcode: amount paid towards mortgage) [outspd] : " & Format(a.outspd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Mortgage_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Mortgage";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.mortseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTSEQ (Mortgage Sequence Number) [mortseq] : " & Format(a.mortseq) & LINE_BREAK;
      end if;
      if( (a.boramtdk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BORAMTDK (Interviewers' note: reason missing) [boramtdk] : " & Format(a.boramtdk) & LINE_BREAK;
      end if;
      if( (a.borramt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BORRAMT (Amount of the original mortgage or loan) [borramt] : " & Format(a.borramt) & LINE_BREAK;
      end if;
      if( (a.endwpri1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDWPRI1 (Payments into a Pension Plan (pension mortgage)) [endwpri1] : " & Format(a.endwpri1) & LINE_BREAK;
      end if;
      if( (a.endwpri2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDWPRI2 (Payments into an ISA) [endwpri2] : " & Format(a.endwpri2) & LINE_BREAK;
      end if;
      if( (a.endwpri3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDWPRI3 (Payments into a Unit Trust or Investment Trust scheme) [endwpri3] : " & Format(a.endwpri3) & LINE_BREAK;
      end if;
      if( (a.endwpri4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDWPRI4 (Payments into any other savings/investment scheme) [endwpri4] : " & Format(a.endwpri4) & LINE_BREAK;
      end if;
      if( (a.endwpri5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ENDWPRI5 (Proceeds from house sale) [endwpri5] : " & Format(a.endwpri5) & LINE_BREAK;
      end if;
      if( (a.incminc1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMINC1 (Whether MPP incl in mortgage/endowment) [incminc1] : " & Format(a.incminc1) & LINE_BREAK;
      end if;
      if( (a.incminc2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMINC2 (Whether MPP incl in mortgage/endowment) [incminc2] : " & Format(a.incminc2) & LINE_BREAK;
      end if;
      if( (a.incminc3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMINC3 (Whether MPP incl in mortgage/endowment) [incminc3] : " & Format(a.incminc3) & LINE_BREAK;
      end if;
      if( (a.incmp1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMP1 (Whether 1st MPP incl in payments) [incmp1] : " & Format(a.incmp1) & LINE_BREAK;
      end if;
      if( (a.incmp2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMP2 (Whether 2nd MPP incl in payments) [incmp2] : " & Format(a.incmp2) & LINE_BREAK;
      end if;
      if( (a.incmp3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMP3 (Whether 3rd MPP incl in payments) [incmp3] : " & Format(a.incmp3) & LINE_BREAK;
      end if;
      if( (a.incmpam1 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPAM1 (Amount of last repayment on 1st MPP) [incmpam1] : " & Format(a.incmpam1) & LINE_BREAK;
      end if;
      if( (a.incmpam2 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPAM2 (Amount of last repayment on 2nd MPP) [incmpam2] : " & Format(a.incmpam2) & LINE_BREAK;
      end if;
      if( (a.incmpam3 /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPAM3 (Amount of last repayment on 3rd MPP) [incmpam3] : " & Format(a.incmpam3) & LINE_BREAK;
      end if;
      if( (a.incmppd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPPD1 (Pcode: amount of last repayment on MPP) [incmppd1] : " & Format(a.incmppd1) & LINE_BREAK;
      end if;
      if( (a.incmppd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPPD2 (Pcode: amount of last repayment on MPP) [incmppd2] : " & Format(a.incmppd2) & LINE_BREAK;
      end if;
      if( (a.incmppd3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMPPD3 (Pcode: amount of last repayment on MPP) [incmppd3] : " & Format(a.incmppd3) & LINE_BREAK;
      end if;
      if( (a.intprpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTPRPAY (Amount of last instalment on the loan) [intprpay] : " & Format(a.intprpay) & LINE_BREAK;
      end if;
      if( (a.intprpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTPRPD (Pcode: amt of last instalment on loan) [intprpd] : " & Format(a.intprpd) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.loan2y /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOAN2Y (Whether still have mortgage for purchase) [loan2y] : " & Format(a.loan2y) & LINE_BREAK;
      end if;
      if( (a.loanyear /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOANYEAR (Year took out Mortgage or Loan) [loanyear] : " & Format(a.loanyear) & LINE_BREAK;
      end if;
      if( (a.menpol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MENPOL (Whether any endowment policies for loan) [menpol] : " & Format(a.menpol) & LINE_BREAK;
      end if;
      if( (a.morall /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORALL (All in one type) [morall] : " & Format(a.morall) & LINE_BREAK;
      end if;
      if( (a.morflc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORFLC (Mortgage: all in one acccount) [morflc] : " & Format(a.morflc) & LINE_BREAK;
      end if;
      if( (a.morinpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORINPAY (Amount of mortgage interest paid) [morinpay] : " & Format(a.morinpay) & LINE_BREAK;
      end if;
      if( (a.morinpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORINPD (Pcode: amount of mortgage interest paid) [morinpd] : " & Format(a.morinpd) & LINE_BREAK;
      end if;
      if( (a.morinus /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORINUS (Whether mortgage interest usual) [morinus] : " & Format(a.morinus) & LINE_BREAK;
      end if;
      if( (a.mortend /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTEND (Term of mortgage) [mortend] : " & Format(a.mortend) & LINE_BREAK;
      end if;
      if( (a.mortleft /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTLEFT (Amount outstanding on mortgage) [mortleft] : " & Format(a.mortleft) & LINE_BREAK;
      end if;
      if( (a.mortprot /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTPROT (Whether has a mortgage protection policy) [mortprot] : " & Format(a.mortprot) & LINE_BREAK;
      end if;
      if( (a.morttype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORTTYPE (Type of mortgage/loan) [morttype] : " & Format(a.morttype) & LINE_BREAK;
      end if;
      if( (a.morupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORUPD (Pcode: amount of usual mortgage interest paid) [morupd] : " & Format(a.morupd) & LINE_BREAK;
      end if;
      if( (a.morus /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORUS (Amount of usual mortgage interest paid) [morus] : " & Format(a.morus) & LINE_BREAK;
      end if;
      if( (a.mpcover1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MPCOVER1 (Mortgage Prot policy:Sickness/accident) [mpcover1] : " & Format(a.mpcover1) & LINE_BREAK;
      end if;
      if( (a.mpcover2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MPCOVER2 (Mortgage Prot policy:loss of employment) [mpcover2] : " & Format(a.mpcover2) & LINE_BREAK;
      end if;
      if( (a.mpcover3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MPCOVER3 (Mortgage Prot policy:Death) [mpcover3] : " & Format(a.mpcover3) & LINE_BREAK;
      end if;
      if( (a.mpolno /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MPOLNO (Number of Mortgage protection Policies) [mpolno] : " & Format(a.mpolno) & LINE_BREAK;
      end if;
      if( (a.outsmort /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OUTSMORT (Whether non-HH contributes to mortgage) [outsmort] : " & Format(a.outsmort) & LINE_BREAK;
      end if;
      if( (a.rmamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMAMT (Total amount of the re-mortgage) [rmamt] : " & Format(a.rmamt) & LINE_BREAK;
      end if;
      if( (a.rmort /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMORT (Whether arranged a remortgage) [rmort] : " & Format(a.rmort) & LINE_BREAK;
      end if;
      if( (a.rmortyr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMORTYR (Year took out most recent re-mortgage) [rmortyr] : " & Format(a.rmortyr) & LINE_BREAK;
      end if;
      if( (a.rmpur001 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR001 (Reason for remortgage: improvements) [rmpur001] : " & Format(a.rmpur001) & LINE_BREAK;
      end if;
      if( (a.rmpur002 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR002 (Reason for remortgage: purchase of items) [rmpur002] : " & Format(a.rmpur002) & LINE_BREAK;
      end if;
      if( (a.rmpur003 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR003 (Reason for remortgage: interest rates) [rmpur003] : " & Format(a.rmpur003) & LINE_BREAK;
      end if;
      if( (a.rmpur004 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR004 (Reason for remortgage: business) [rmpur004] : " & Format(a.rmpur004) & LINE_BREAK;
      end if;
      if( (a.rmpur005 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR005 (Reason for remortgage: buy out of share) [rmpur005] : " & Format(a.rmpur005) & LINE_BREAK;
      end if;
      if( (a.rmpur006 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR006 (Reason for remortgage: essential repairs) [rmpur006] : " & Format(a.rmpur006) & LINE_BREAK;
      end if;
      if( (a.rmpur007 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR007 (Reason for remortgage: more flexible mortgage) [rmpur007] : " & Format(a.rmpur007) & LINE_BREAK;
      end if;
      if( (a.rmpur008 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RMPUR008 (Reason for remortgage: other) [rmpur008] : " & Format(a.rmpur008) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.exrent /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EXRENT (Whether renting house/flat before buying) [exrent] : " & Format(a.exrent) & LINE_BREAK;
      end if;
      if( (a.incmsty1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMSTY1 (Year MPP taken out) [incmsty1] : " & Format(a.incmsty1) & LINE_BREAK;
      end if;
      if( (a.incmsty2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMSTY2 (Year MPP taken out) [incmsty2] : " & Format(a.incmsty2) & LINE_BREAK;
      end if;
      if( (a.incmsty3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INCMSTY3 (Year MPP taken out) [incmsty3] : " & Format(a.incmsty3) & LINE_BREAK;
      end if;
      if( (a.intru /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTRU (Usual amount of instalment on the loan) [intru] : " & Format(a.intru) & LINE_BREAK;
      end if;
      if( (a.intrupd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTRUPD (Pcode: amount of last instalment on loan) [intrupd] : " & Format(a.intrupd) & LINE_BREAK;
      end if;
      if( (a.intrus /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "INTRUS (Whether last instalment usual) [intrus] : " & Format(a.intrus) & LINE_BREAK;
      end if;
      if( (a.rentfrom /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTFROM (Who house/flat rented from before bought) [rentfrom] : " & Format(a.rentfrom) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : OddJob_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== OddJob";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.oddtype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ODDTYPE (Type of oddjob) [oddtype] : " & Format(a.oddtype) & LINE_BREAK;
      end if;
      if( (a.oddseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ODDSEQ (Oddseq) [oddseq] : " & Format(a.oddseq) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.ojamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OJAMT (Amount received from odd job) [ojamt] : " & Format(a.ojamt) & LINE_BREAK;
      end if;
      if( (a.ojnow /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OJNOW (Whether currently doing odd job) [ojnow] : " & Format(a.ojnow) & LINE_BREAK;
      end if;
      if( (a.ojreg /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OJREG (Whether odd job done on regular basis) [ojreg] : " & Format(a.ojreg) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Owner_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Owner";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.buyyear /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BUYYEAR (Year bought accommodation) [buyyear] : " & Format(a.buyyear) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.othmort1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHMORT1 (Whether any other loan on this property) [othmort1] : " & Format(a.othmort1) & LINE_BREAK;
      end if;
      if( (a.othmort2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHMORT2 (Whether using this property as security) [othmort2] : " & Format(a.othmort2) & LINE_BREAK;
      end if;
      if( (a.othmort3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHMORT3 (Whether using this property as security) [othmort3] : " & Format(a.othmort3) & LINE_BREAK;
      end if;
      if( (a.othpur1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR1 (Reason for 2nd mortgage: improvements) [othpur1] : " & Format(a.othpur1) & LINE_BREAK;
      end if;
      if( (a.othpur2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR2 (Reason 2nd mortgage: purchase of items) [othpur2] : " & Format(a.othpur2) & LINE_BREAK;
      end if;
      if( (a.othpur3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR3 (Reason for 2nd mortgage: interest rates) [othpur3] : " & Format(a.othpur3) & LINE_BREAK;
      end if;
      if( (a.othpur4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR4 (Reason for 2nd mortgage: business) [othpur4] : " & Format(a.othpur4) & LINE_BREAK;
      end if;
      if( (a.othpur5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR5 (Reason 2nd mortgage: buy out of share) [othpur5] : " & Format(a.othpur5) & LINE_BREAK;
      end if;
      if( (a.othpur6 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR6 (Reason 2nd mortgage: essential repairs) [othpur6] : " & Format(a.othpur6) & LINE_BREAK;
      end if;
      if( (a.othpur7 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR7 (Reason for 2nd mortgage: other) [othpur7] : " & Format(a.othpur7) & LINE_BREAK;
      end if;
      if( (a.purcamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PURCAMT (Purchase price of house/flat) [purcamt] : " & Format(a.purcamt) & LINE_BREAK;
      end if;
      if( (a.purcloan /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PURCLOAN (Whether one or more loans to purchase) [purcloan] : " & Format(a.purcloan) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.othpur31 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR31 (Reason for loan: improvements) [othpur31] : " & Format(a.othpur31) & LINE_BREAK;
      end if;
      if( (a.othpur32 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR32 (Reason for loan: purchase of items) [othpur32] : " & Format(a.othpur32) & LINE_BREAK;
      end if;
      if( (a.othpur33 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR33 (Reason for loan: interest rates) [othpur33] : " & Format(a.othpur33) & LINE_BREAK;
      end if;
      if( (a.othpur34 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR34 (Reason for loan: business) [othpur34] : " & Format(a.othpur34) & LINE_BREAK;
      end if;
      if( (a.othpur35 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR35 (Reason for loan: buy out of share) [othpur35] : " & Format(a.othpur35) & LINE_BREAK;
      end if;
      if( (a.othpur36 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR36 (Reason for loan: essential repairs) [othpur36] : " & Format(a.othpur36) & LINE_BREAK;
      end if;
      if( (a.othpur37 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHPUR37 (Reason for loan: other) [othpur37] : " & Format(a.othpur37) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : PenAmt_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== PenAmt";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.benefit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENEFIT (Benefit Type) [benefit] : " & Format(a.benefit) & LINE_BREAK;
      end if;
      if( (a.amttype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "AMTTYPE (Pension Component) [amttype] : " & Format(a.amttype) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.penq /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENQ (Amounts as shown on order book/letter) [penq] : " & Format(a.penq) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : PenProv_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== PenProv";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.stemppen /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STEMPPEN (Pension Type) [stemppen] : " & Format(a.stemppen) & LINE_BREAK;
      end if;
      if( (a.provseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PROVSEQ (Pension key) [provseq] : " & Format(a.provseq) & LINE_BREAK;
      end if;
      if( (a.eptype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EPTYPE (Description of employers pension scheme) [eptype] : " & Format(a.eptype) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.penamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENAMT (Amount of last payment to Pension) [penamt] : " & Format(a.penamt) & LINE_BREAK;
      end if;
      if( (a.penamtdt /= FRS_DEFAULT_DATE) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENAMTDT (Date of last payment to Pension) [penamtdt] : " & Format(a.penamtdt) & LINE_BREAK;
      end if;
      if( (a.penamtpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENAMTPD (Pcode:amt of last payment to Pen) [penamtpd] : " & Format(a.penamtpd) & LINE_BREAK;
      end if;
      if( (a.penchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENCHK (Whether contribution made to personal pension in last 12 mon) [penchk] : " & Format(a.penchk) & LINE_BREAK;
      end if;
      if( (a.pencon /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENCON (Who Contributes to Pension) [pencon] : " & Format(a.pencon) & LINE_BREAK;
      end if;
      if( (a.pendat /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENDAT (How long: took out pension) [pendat] : " & Format(a.pendat) & LINE_BREAK;
      end if;
      if( (a.penhelp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENHELP (Whether emp. arranged  pension) [penhelp] : " & Format(a.penhelp) & LINE_BREAK;
      end if;
      if( (a.penreb /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENREB (Contracted out of SP2) [penreb] : " & Format(a.penreb) & LINE_BREAK;
      end if;
      if( (a.rebgov /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REBGOV (Money paid into pension as rebate part of NI contributions) [rebgov] : " & Format(a.rebgov) & LINE_BREAK;
      end if;
      if( (a.spwho /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SPWHO (Who is stakeholder pension for) [spwho] : " & Format(a.spwho) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.pengov /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENGOV (Whether money paid into Pen by DWP/SSA) [pengov] : " & Format(a.pengov) & LINE_BREAK;
      end if;
      if( (a.penmort /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENMORT (Whether pens mort mentioned earlier) [penmort] : " & Format(a.penmort) & LINE_BREAK;
      end if;
      if( (a.stemppay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "STEMPPAY (Emppay key) [stemppay] : " & Format(a.stemppay) & LINE_BREAK;
      end if;
      if( (a.eplong /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EPLONG (How long: joined present employer's scheme) [eplong] : " & Format(a.eplong) & LINE_BREAK;
      end if;
      if( (a.keeppen /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "KEEPPEN (Keep pension and pay contribs. if leave) [keeppen] : " & Format(a.keeppen) & LINE_BREAK;
      end if;
      if( (a.opgov /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OPGOV (Whether money paid into OccPen by DSS) [opgov] : " & Format(a.opgov) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Pension_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Pension";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.penseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENSEQ (Penseq) [penseq] : " & Format(a.penseq) & LINE_BREAK;
      end if;
      if( (a.another /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ANOTHER (Whether any more pensions of this type) [another] : " & Format(a.another) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.penoth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENOTH (Whether any other deductions from PENPAY) [penoth] : " & Format(a.penoth) & LINE_BREAK;
      end if;
      if( (a.penpay /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENPAY (Amount of last payment from pension) [penpay] : " & Format(a.penpay) & LINE_BREAK;
      end if;
      if( (a.penpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENPD (Pcode:amt of last payment from pension) [penpd] : " & Format(a.penpd) & LINE_BREAK;
      end if;
      if( (a.penpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENPD1 (Pcode:amt of tax deducted at source) [penpd1] : " & Format(a.penpd1) & LINE_BREAK;
      end if;
      if( (a.penpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENPD2 (Pcode:amt of other deduction from PENPAY) [penpd2] : " & Format(a.penpd2) & LINE_BREAK;
      end if;
      if( (a.pentax /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENTAX (Whether tax deducted at source on PENPAY) [pentax] : " & Format(a.pentax) & LINE_BREAK;
      end if;
      if( (a.pentype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PENTYPE (Pension Type) [pentype] : " & Format(a.pentype) & LINE_BREAK;
      end if;
      if( (a.poamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POAMT (Amount of other deduction from PENPAY) [poamt] : " & Format(a.poamt) & LINE_BREAK;
      end if;
      if( (a.poinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POINC (Whether PENPAY before/after deduction) [poinc] : " & Format(a.poinc) & LINE_BREAK;
      end if;
      if( (a.ptamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTAMT (Amount of tax deducted at source) [ptamt] : " & Format(a.ptamt) & LINE_BREAK;
      end if;
      if( (a.ptinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PTINC (Whether PENPAY before/after tax) [ptinc] : " & Format(a.ptinc) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.posour /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "POSOUR (Whether other deduction made at source) [posour] : " & Format(a.posour) & LINE_BREAK;
      end if;
      if( (a.trights /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TRIGHTS (Right to take income/capital from trust) [trights] : " & Format(a.trights) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : RentCont_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== RentCont";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.rentseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTSEQ (Rent Contribution Sequence) [rentseq] : " & Format(a.rentseq) & LINE_BREAK;
      end if;
      if( (a.accamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCAMT (Amount of contribution to rent) [accamt] : " & Format(a.accamt) & LINE_BREAK;
      end if;
      if( (a.accchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCCHK (Whether RENT before/after ACCAMT) [accchk] : " & Format(a.accchk) & LINE_BREAK;
      end if;
      if( (a.accpay /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCPAY (Who makes contribution to rent) [accpay] : " & Format(a.accpay) & LINE_BREAK;
      end if;
      if( (a.accpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCPD (Pcode: amount of contribution to rent) [accpd] : " & Format(a.accpd) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Renter_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Renter";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.accjbp01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP01 (Accommodation with job of Person 1) [accjbp01] : " & Format(a.accjbp01) & LINE_BREAK;
      end if;
      if( (a.accjbp02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP02 (Accommodation with job of Person 2) [accjbp02] : " & Format(a.accjbp02) & LINE_BREAK;
      end if;
      if( (a.accjbp03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP03 (Accommodation with job of Person 3) [accjbp03] : " & Format(a.accjbp03) & LINE_BREAK;
      end if;
      if( (a.accjbp04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP04 (Accommodation with job of Person 4) [accjbp04] : " & Format(a.accjbp04) & LINE_BREAK;
      end if;
      if( (a.accjbp05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP05 (Accommodation with job of Person 5) [accjbp05] : " & Format(a.accjbp05) & LINE_BREAK;
      end if;
      if( (a.accjbp06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP06 (Accommodation with job of Person 6) [accjbp06] : " & Format(a.accjbp06) & LINE_BREAK;
      end if;
      if( (a.accjbp07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP07 (Accommodation with job of Person 7) [accjbp07] : " & Format(a.accjbp07) & LINE_BREAK;
      end if;
      if( (a.accjbp08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP08 (Accommodation with job of Person 8) [accjbp08] : " & Format(a.accjbp08) & LINE_BREAK;
      end if;
      if( (a.accjbp09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP09 (Accommodation with job of Person 9) [accjbp09] : " & Format(a.accjbp09) & LINE_BREAK;
      end if;
      if( (a.accjbp10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP10 (Accommodation with job of Person 10) [accjbp10] : " & Format(a.accjbp10) & LINE_BREAK;
      end if;
      if( (a.accjbp11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP11 (Accommodation with job of Person 11) [accjbp11] : " & Format(a.accjbp11) & LINE_BREAK;
      end if;
      if( (a.accjbp12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP12 (Accommodation with job of Person 12) [accjbp12] : " & Format(a.accjbp12) & LINE_BREAK;
      end if;
      if( (a.accjbp13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP13 (Accommodation with job of Person 13) [accjbp13] : " & Format(a.accjbp13) & LINE_BREAK;
      end if;
      if( (a.accjbp14 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJBP14 (Accommodation with job of Person 14) [accjbp14] : " & Format(a.accjbp14) & LINE_BREAK;
      end if;
      if( (a.accjob /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCJOB (Whether accommodation goes with job) [accjob] : " & Format(a.accjob) & LINE_BREAK;
      end if;
      if( (a.accnonhh /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ACCNONHH (Whether anyone contributes to rent) [accnonhh] : " & Format(a.accnonhh) & LINE_BREAK;
      end if;
      if( (a.ctract /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTRACT (Type of contract/agreement) [ctract] : " & Format(a.ctract) & LINE_BREAK;
      end if;
      if( (a.eligamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGAMT (Amount on HB statement for eligible rent) [eligamt] : " & Format(a.eligamt) & LINE_BREAK;
      end if;
      if( (a.eligpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ELIGPD (Pcode: eligible rent) [eligpd] : " & Format(a.eligpd) & LINE_BREAK;
      end if;
      if( (a.fairrent /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FAIRRENT (Whether rent registered) [fairrent] : " & Format(a.fairrent) & LINE_BREAK;
      end if;
      if( (a.furnish /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "FURNISH (Whether property rented furnished) [furnish] : " & Format(a.furnish) & LINE_BREAK;
      end if;
      if( (a.hbenamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENAMT (Housing Benefit amount) [hbenamt] : " & Format(a.hbenamt) & LINE_BREAK;
      end if;
      if( (a.hbenchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENCHK (Whether amount of rent before/after HB) [hbenchk] : " & Format(a.hbenchk) & LINE_BREAK;
      end if;
      if( (a.hbenefit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENEFIT (Whether qualify for HB) [hbenefit] : " & Format(a.hbenefit) & LINE_BREAK;
      end if;
      if( (a.hbenpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENPD (Pcode: Housing Benefit amount) [hbenpd] : " & Format(a.hbenpd) & LINE_BREAK;
      end if;
      if( (a.hbenwait /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBENWAIT (Awaiting outcome of claim: HB) [hbenwait] : " & Format(a.hbenwait) & LINE_BREAK;
      end if;
      if( (a.hbmnth /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBMNTH (Month in which current Housing Benefit claim started) [hbmnth] : " & Format(a.hbmnth) & LINE_BREAK;
      end if;
      if( (a.hbrecp /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBRECP (Whether HB paid to recipient or landlord) [hbrecp] : " & Format(a.hbrecp) & LINE_BREAK;
      end if;
      if( (a.hbweeks /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBWEEKS (Number of weeks on HB (Banded over 2 years)) [hbweeks] : " & Format(a.hbweeks) & LINE_BREAK;
      end if;
      if( (a.hbyear /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBYEAR (Year in which current Housing Benefit claim started) [hbyear] : " & Format(a.hbyear) & LINE_BREAK;
      end if;
      if( (a.hbyears /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HBYEARS (Number of years on HB (Banded)) [hbyears] : " & Format(a.hbyears) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.landlord /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LANDLORD (Landlord) [landlord] : " & Format(a.landlord) & LINE_BREAK;
      end if;
      if( (a.niystart /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "NIYSTART (Year Householder first became tenant (NI)) [niystart] : " & Format(a.niystart) & LINE_BREAK;
      end if;
      if( (a.othtype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHTYPE (Whether accommodation let other way) [othtype] : " & Format(a.othtype) & LINE_BREAK;
      end if;
      if( (a.rebate /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REBATE (Whether receive 100% HB) [rebate] : " & Format(a.rebate) & LINE_BREAK;
      end if;
      if( (a.rent /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENT (Amount rent currently paid) [rent] : " & Format(a.rent) & LINE_BREAK;
      end if;
      if( (a.rentdk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTDK (Interviewers' note: missing rent) [rentdk] : " & Format(a.rentdk) & LINE_BREAK;
      end if;
      if( (a.rentdoc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTDOC (Whether rent document to consult) [rentdoc] : " & Format(a.rentdoc) & LINE_BREAK;
      end if;
      if( (a.rentfull /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTFULL (Full rent before HB/rent rebate/rent or rates rebate) [rentfull] : " & Format(a.rentfull) & LINE_BREAK;
      end if;
      if( (a.renthol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTHOL (Whether have any rent free weeks) [renthol] : " & Format(a.renthol) & LINE_BREAK;
      end if;
      if( (a.rentpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTPD (Pcode: amount rent currently paid) [rentpd] : " & Format(a.rentpd) & LINE_BREAK;
      end if;
      if( (a.rentpd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTPD1 (Pcode: full rent before HB/rent rebate/rent or rates rebate) [rentpd1] : " & Format(a.rentpd1) & LINE_BREAK;
      end if;
      if( (a.rentpd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RENTPD2 (Pcode: amount incl in rent for water/sewerage) [rentpd2] : " & Format(a.rentpd2) & LINE_BREAK;
      end if;
      if( (a.resll /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RESLL (Whether landlord lives in building) [resll] : " & Format(a.resll) & LINE_BREAK;
      end if;
      if( (a.resll2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "RESLL2 (Whether landlord lives in same flat) [resll2] : " & Format(a.resll2) & LINE_BREAK;
      end if;
      if( (a.serinc1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERINC1 (Services included in rent: heating) [serinc1] : " & Format(a.serinc1) & LINE_BREAK;
      end if;
      if( (a.serinc2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERINC2 (Services included in rent: lighting) [serinc2] : " & Format(a.serinc2) & LINE_BREAK;
      end if;
      if( (a.serinc3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERINC3 (Services included in rent: hot water) [serinc3] : " & Format(a.serinc3) & LINE_BREAK;
      end if;
      if( (a.serinc4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERINC4 (Services included in rent: cooking fuel) [serinc4] : " & Format(a.serinc4) & LINE_BREAK;
      end if;
      if( (a.serinc5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERINC5 (Services included in rent: TV licence) [serinc5] : " & Format(a.serinc5) & LINE_BREAK;
      end if;
      if( (a.tentype /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "TENTYPE (Type of agreement) [tentype] : " & Format(a.tentype) & LINE_BREAK;
      end if;
      if( (a.weekhol /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WEEKHOL (Number of weeks of rent holiday) [weekhol] : " & Format(a.weekhol) & LINE_BREAK;
      end if;
      if( (a.wsinc /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WSINC (Whether water/sewer charges incl in rent) [wsinc] : " & Format(a.wsinc) & LINE_BREAK;
      end if;
      if( (a.wsincamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WSINCAMT (Amount incl in rent for water/sewerage) [wsincamt] : " & Format(a.wsincamt) & LINE_BREAK;
      end if;
      if( (a.ystartr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "YSTARTR (Year Householder first became tenant (GB)) [ystartr] : " & Format(a.ystartr) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.lhaexs /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LHAEXS (Whether HB more than rent) [lhaexs] : " & Format(a.lhaexs) & LINE_BREAK;
      end if;
      if( (a.lhalss /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LHALSS (Whether HB less than rent) [lhalss] : " & Format(a.lhalss) & LINE_BREAK;
      end if;
      if( (a.lowshort /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "LOWSHORT (Is this a low season let) [lowshort] : " & Format(a.lowshort) & LINE_BREAK;
      end if;
      if( (a.othway /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "OTHWAY (Whether accommodation let other way) [othway] : " & Format(a.othway) & LINE_BREAK;
      end if;
      if( (a.short1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SHORT1 (Type of agreement) [short1] : " & Format(a.short1) & LINE_BREAK;
      end if;
      if( (a.short2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SHORT2 (Type of agreement) [short2] : " & Format(a.short2) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Vehicle_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Vehicle";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.vehseq /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VEHSEQ (Vehicle Sequence No) [vehseq] : " & Format(a.vehseq) & LINE_BREAK;
      end if;
      if( (a.vehic /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VEHIC (Type of vehicle) [vehic] : " & Format(a.vehic) & LINE_BREAK;
      end if;
      if( (a.vehown /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "VEHOWN (Whether own vehicle) [vehown] : " & Format(a.vehown) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : ChildCare_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== ChildCare";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.chlook /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHLOOK (Childcare arrangements) [chlook] : " & Format(a.chlook) & LINE_BREAK;
      end if;
      if( (a.chamt /= MISS_R) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHAMT (Costs of childcare) [chamt] : " & Format(a.chamt) & LINE_BREAK;
      end if;
      if( (a.chhr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHHR (How many hours in last seven days) [chhr] : " & Format(a.chhr) & LINE_BREAK;
      end if;
      if( (a.chpd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHPD (Pcode: Costs of childcare) [chpd] : " & Format(a.chpd) & LINE_BREAK;
      end if;
      if( (a.cost /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "COST (Whether childcare costs anything) [cost] : " & Format(a.cost) & LINE_BREAK;
      end if;
      if( (a.ctrm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CTRM (Week of childcare) [ctrm] : " & Format(a.ctrm) & LINE_BREAK;
      end if;
      if( (a.emplprov /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "EMPLPROV (Does employer provide this form of childcare) [emplprov] : " & Format(a.emplprov) & LINE_BREAK;
      end if;
      if( (a.hourly /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "HOURLY (Whether payment is hourly rate) [hourly] : " & Format(a.hourly) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.pmchk /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PMCHK (Time spent with provider) [pmchk] : " & Format(a.pmchk) & LINE_BREAK;
      end if;
      if( (a.registrd /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "REGISTRD (Whether registered) [registrd] : " & Format(a.registrd) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;
      if( (a.benccdis /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENCCDIS (Does benefit account for childcare cost) [benccdis] : " & Format(a.benccdis) & LINE_BREAK;
      end if;
      if( (a.chinknd1 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINKND1 (Payment in Kind: Looked after child(ren) in return) [chinknd1] : " & Format(a.chinknd1) & LINE_BREAK;
      end if;
      if( (a.chinknd2 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINKND2 (Payment in Kind: Did favour) [chinknd2] : " & Format(a.chinknd2) & LINE_BREAK;
      end if;
      if( (a.chinknd3 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINKND3 (Payment in Kind: Gave gift or treat) [chinknd3] : " & Format(a.chinknd3) & LINE_BREAK;
      end if;
      if( (a.chinknd4 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINKND4 (Payment in Kind: Nothing) [chinknd4] : " & Format(a.chinknd4) & LINE_BREAK;
      end if;
      if( (a.chinknd5 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHINKND5 (Payment in Kind: Other) [chinknd5] : " & Format(a.chinknd5) & LINE_BREAK;
      end if;
      if( (a.chfar /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "CHFAR (Time from home to where Chld lookedafter) [chfar] : " & Format(a.chfar) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Nimigr_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Nimigr";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (Sernum) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.miper /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MIPER (Person number of person who has left household) [miper] : " & Format(a.miper) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.miage /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MIAGE (Age last birthday) [miage] : " & Format(a.miage) & LINE_BREAK;
      end if;
      if( (a.misex /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MISEX (Sex) [misex] : " & Format(a.misex) & LINE_BREAK;
      end if;
      if( (a.mnthleft /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MNTHLEFT (Month person left household) [mnthleft] : " & Format(a.mnthleft) & LINE_BREAK;
      end if;
      if( (a.more1yr /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MORE1YR (Whether left for more than one year) [more1yr] : " & Format(a.more1yr) & LINE_BREAK;
      end if;
      if( (a.wherenow /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "WHERENOW (Where living now) [wherenow] : " & Format(a.wherenow) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   

   function To_String( a : Prscrptn_Rec; num_indents : Natural; loop_count : Natural := 0 ) return String is
      s : Unbounded_String;
   begin
      s := s & (num_indents*INDENT) & " ========== Prscrptn";
      if( loop_count > 0 ) then
        s := s & "[ " & Format( loop_count ) & " ] ";
      end if;
      s := s & "=======" & LINE_BREAK;
      if( (a.sernum /= MISSING_SERNUM) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "SERNUM (SERNUM) [sernum] : " & Format(a.sernum) & LINE_BREAK;
      end if;
      if( (a.benunit /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "BENUNIT (Benefit Unit) [benunit] : " & Format(a.benunit) & LINE_BREAK;
      end if;
      if( (a.person /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "PERSON (Person) [person] : " & Format(a.person) & LINE_BREAK;
      end if;
      if( (a.issue /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "ISSUE (Whether Mainstage or Reissue) [issue] : " & Format(a.issue) & LINE_BREAK;
      end if;
      if( (a.med12m01 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M01 (Number of times paid for item 1 on repeat prscrptn) [med12m01] : " & Format(a.med12m01) & LINE_BREAK;
      end if;
      if( (a.med12m02 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M02 (Number of times paid for item 2 on repeat prscrptn) [med12m02] : " & Format(a.med12m02) & LINE_BREAK;
      end if;
      if( (a.med12m03 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M03 (Number of times paid for item 3 on repeat prscrptn) [med12m03] : " & Format(a.med12m03) & LINE_BREAK;
      end if;
      if( (a.med12m04 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M04 (Number of times paid for item 4 on repeat prscrptn) [med12m04] : " & Format(a.med12m04) & LINE_BREAK;
      end if;
      if( (a.med12m05 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M05 (Number of times paid for item 5 on repeat prscrptn) [med12m05] : " & Format(a.med12m05) & LINE_BREAK;
      end if;
      if( (a.med12m06 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M06 (Number of times paid for item 6 on repeat prscrptn) [med12m06] : " & Format(a.med12m06) & LINE_BREAK;
      end if;
      if( (a.med12m07 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M07 (Number of times paid for item 7 on repeat prscrptn) [med12m07] : " & Format(a.med12m07) & LINE_BREAK;
      end if;
      if( (a.med12m08 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M08 (Number of times paid for item 8 on repeat prscrptn) [med12m08] : " & Format(a.med12m08) & LINE_BREAK;
      end if;
      if( (a.med12m09 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M09 (Number of times paid for item 9 on repeat prscrptn) [med12m09] : " & Format(a.med12m09) & LINE_BREAK;
      end if;
      if( (a.med12m10 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M10 (Number of times paid for item 10 on repeat prscrptn) [med12m10] : " & Format(a.med12m10) & LINE_BREAK;
      end if;
      if( (a.med12m11 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M11 (Number of times paid for item 11 on repeat prscrptn) [med12m11] : " & Format(a.med12m11) & LINE_BREAK;
      end if;
      if( (a.med12m12 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M12 (Number of times paid for item 12 on repeat prscrptn) [med12m12] : " & Format(a.med12m12) & LINE_BREAK;
      end if;
      if( (a.med12m13 /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MED12M13 (Number of times paid for item 13 on repeat prscrptn) [med12m13] : " & Format(a.med12m13) & LINE_BREAK;
      end if;
      if( (a.medrep /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDREP (Whether item on a repeat prscrptn) [medrep] : " & Format(a.medrep) & LINE_BREAK;
      end if;
      if( (a.medrpnm /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MEDRPNM (Number of items on repeat prscrptn) [medrpnm] : " & Format(a.medrpnm) & LINE_BREAK;
      end if;
      if( (a.month /= MISS) or INCLUDE_MISSING ) then
         s := s & (num_indents*INDENT) & "MONTH_ (Month code (Source)) [month] : " & Format(a.month) & LINE_BREAK;
      end if;

      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   
   -- ============= END AUTOGENERATED 
   
   -- update funcs below for any new record types
  
   function To_String( ch : Raw_Child; which : Positive ) return String is
      s : Unbounded_String;
   begin
      s := s & (2*INDENT) & "Child [" & Positive'Image( which ) & " ]" & LINE_BREAK;
      s := s & To_String( ch.child, 3 );
      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   
   function To_String( ad : Raw_Adult; which : Positive ) return String is
      s : Unbounded_String;
   begin
      s := s & (2*INDENT) & "Adult[" & Positive'Image( which ) & " ]" & LINE_BREAK;
      s := s & To_String( ad.adult, 3 );
      
      for a in 1..ad.numJobs loop
         s := s & To_String( ad.jobs(a), 3, a );
      end loop;
      
      for a in 1..ad.numAccounts loop
         s := s & To_String( ad.accounts(a), 3, a );
      end loop;
      
      for a in 1..ad.numAssets loop
         s := s & To_String( ad.assets(a), 3, a );
      end loop;
      
      for a in 1..ad.numBenefits loop
         s := s & To_String( ad.benefits(a), 3, a );
      end loop;
      
      for a in 1..ad.numGovpays loop
         s := s & To_String( ad.govpay(a), 3, a );
      end loop;
      
      for a in 1..ad.numMaintenances loop
         s := s & To_String( ad.maintenances(a), 3, a );
      end loop;
      
      for a in 1..ad.numOddJobs loop
         s := s & To_String( ad.oddJobs(a), 3, a );
      end loop;
      
      for a in 1..ad.numpensions loop
         s := s & To_String( ad.pensions(a), 3, a );
      end loop;
      
      for a in 1..ad.numPenProvs loop
         s := s & To_String( ad.penprovs(a), 3, a );
      end loop;
      
      for a in 1..ad.numPenAmts loop
         s := s & To_String( ad.penamts(a), 3, a );
      end loop;
      
      for a in 1..ad.numPrscrptns loop
         s := s & To_String( ad.prscrptns(a), 3, a );
      end loop;
      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   
   function To_String( bu : Raw_Benefit_unit; which : Positive ) return String is
      s : Unbounded_String;
   begin
      s := s & INDENT & "Benefit Unit " & Positive'Image( which ) & LINE_BREAK;
      s := s & To_String( bu.benunit, 1 );
      
      s := s & To_String( bu.hbai, 1 );
      
      for a in 1 .. bu.numAdults loop
         s := s & To_String( bu.adults(a), a );
      end loop;
      
      for a in 1 .. bu.num_children loop
         s := s & To_String( bu.children(a), a );
      end loop;
            
      for a in 1 .. bu.numCares loop
         s := s & To_String( bu.cares(a), 1, a );
      end loop;
      
      for a in 1 .. bu.numExtChildren loop
         s := s & To_String( bu.extchild(a), 1, a );
      end loop;
 
      s := s & LINE_BREAK;
      return To_String( s );
   end To_String;
   
   function To_String( hh : Raw_Household ) return String is
      s : Unbounded_String;
   begin
      s := s & To_String( hh.household, 0 );
      s := s & To_String( hh.admin, 0 );
      s := s & To_String( hh.renter, 0 );
      s := s & To_String( hh.owner, 0 );
      
      for nbu in 1 .. hh.num_benefit_units loop
         s := s & To_String( hh.benunits(nbu), nbu );
      end loop;
      for nv in 1 .. hh.numVehicles loop
         s := s & To_String( hh.vehicles(nv), 0, nv );
      end loop;
      for a in 1 .. hh.numVehicles loop
         s := s & To_String( hh.endowments(a), 0, a );
      end loop;
      for a in 1 .. hh.numInsurances loop
         s := s & To_String( hh.insurance(a), 0, a );
      end loop;
      for a in 1 .. hh.numMortConts loop
          s := s & To_String(hh.mortCont(a), 0, a );
      end loop;
      
      for a in 1 .. hh.numMortgages loop
          s := s & To_String(hh.mortgages(a), 0, a );
      end loop;
      
      for a in 1 .. hh.numRentConts loop
          s := s & To_String(hh.rentcont(a), 0, a );
      end loop;

      for a in 1 .. hh.numNimigrs loop
          s := s & To_String( hh.nimigr(a), 0, a );
      end loop;
      
      return To_String( s );
   end To_String;
   
   
end Raw_FRS;
